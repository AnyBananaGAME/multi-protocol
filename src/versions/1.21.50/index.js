var Oh=Object.defineProperty;var s=(t,e)=>Oh(t,"name",{value:e,configurable:!0});var p=function(t){return t[t.Login=1]="Login",t[t.PlayStatus=2]="PlayStatus",t[t.ServerToClientHandshake=3]="ServerToClientHandshake",t[t.ClientToServerHandshake=4]="ClientToServerHandshake",t[t.Disconnect=5]="Disconnect",t[t.ResourcePacksInfo=6]="ResourcePacksInfo",t[t.ResourcePackStack=7]="ResourcePackStack",t[t.ResourcePackClientResponse=8]="ResourcePackClientResponse",t[t.Text=9]="Text",t[t.SetTime=10]="SetTime",t[t.StartGame=11]="StartGame",t[t.AddPlayer=12]="AddPlayer",t[t.AddEntity=13]="AddEntity",t[t.RemoveEntity=14]="RemoveEntity",t[t.AddItemActor=15]="AddItemActor",t[t.TakeItemActor=17]="TakeItemActor",t[t.MoveActorAbsolute=18]="MoveActorAbsolute",t[t.MovePlayer=19]="MovePlayer",t[t.RiderJump=20]="RiderJump",t[t.UpdateBlock=21]="UpdateBlock",t[t.LevelEvent=25]="LevelEvent",t[t.BlockEvent=26]="BlockEvent",t[t.ActorEvent=27]="ActorEvent",t[t.MobEffect=28]="MobEffect",t[t.UpdateAttributes=29]="UpdateAttributes",t[t.InventoryTransaction=30]="InventoryTransaction",t[t.MobEquipment=31]="MobEquipment",t[t.MobArmorEquipment=32]="MobArmorEquipment",t[t.Interact=33]="Interact",t[t.BlockPickRequest=34]="BlockPickRequest",t[t.EntityPickRequest=35]="EntityPickRequest",t[t.PlayerAction=36]="PlayerAction",t[t.HurtArmor=38]="HurtArmor",t[t.SetActorData=39]="SetActorData",t[t.SetActorMotion=40]="SetActorMotion",t[t.SetActorLink=41]="SetActorLink",t[t.SetHealth=42]="SetHealth",t[t.SetSpawnPosition=43]="SetSpawnPosition",t[t.Animate=44]="Animate",t[t.Respawn=45]="Respawn",t[t.ContainerOpen=46]="ContainerOpen",t[t.ContainerClose=47]="ContainerClose",t[t.PlayerHotbar=48]="PlayerHotbar",t[t.InventoryContent=49]="InventoryContent",t[t.InventorySlot=50]="InventorySlot",t[t.ContainerSetData=51]="ContainerSetData",t[t.CraftingData=52]="CraftingData",t[t.BlockActorData=56]="BlockActorData",t[t.LevelChunk=58]="LevelChunk",t[t.SetCommandsEnabled=59]="SetCommandsEnabled",t[t.SetDifficulty=60]="SetDifficulty",t[t.ChangeDimension=61]="ChangeDimension",t[t.SetPlayerGameType=62]="SetPlayerGameType",t[t.PlayerList=63]="PlayerList",t[t.LegacyTelemetryEvent=65]="LegacyTelemetryEvent",t[t.ClientBoundMapItemData=67]="ClientBoundMapItemData",t[t.MapInfoRequest=68]="MapInfoRequest",t[t.RequestChunkRadius=69]="RequestChunkRadius",t[t.ChunkRadiusUpdate=70]="ChunkRadiusUpdate",t[t.GameRulesChanged=72]="GameRulesChanged",t[t.BossEvent=74]="BossEvent",t[t.ShowCredits=75]="ShowCredits",t[t.AvailableCommands=76]="AvailableCommands",t[t.CommandRequest=77]="CommandRequest",t[t.CommandBlockUpdate=78]="CommandBlockUpdate",t[t.CommandOutput=79]="CommandOutput",t[t.UpdateTrade=80]="UpdateTrade",t[t.ResourcePackDataInfo=82]="ResourcePackDataInfo",t[t.ResourcePackChunkData=83]="ResourcePackChunkData",t[t.ResourcePackChunkRequest=84]="ResourcePackChunkRequest",t[t.Transfer=85]="Transfer",t[t.PlaySound=86]="PlaySound",t[t.StopSound=87]="StopSound",t[t.SetTitle=88]="SetTitle",t[t.StructureBlockUpdate=90]="StructureBlockUpdate",t[t.PlayerSkin=93]="PlayerSkin",t[t.BookEdit=97]="BookEdit",t[t.NpcRequest=98]="NpcRequest",t[t.ModalFormRequest=100]="ModalFormRequest",t[t.ModalFormResponse=101]="ModalFormResponse",t[t.ServerSettingsResponse=103]="ServerSettingsResponse",t[t.ShowProfile=104]="ShowProfile",t[t.RemoveObjective=106]="RemoveObjective",t[t.SetDisplayObjective=107]="SetDisplayObjective",t[t.SetScore=108]="SetScore",t[t.MoveActorDelta=111]="MoveActorDelta",t[t.SetScoreboardIdentity=112]="SetScoreboardIdentity",t[t.SetLocalPlayerAsInitialized=113]="SetLocalPlayerAsInitialized",t[t.NetworkStackLatency=115]="NetworkStackLatency",t[t.SpawnParticleEffect=118]="SpawnParticleEffect",t[t.AvailableActorIdentifiers=119]="AvailableActorIdentifiers",t[t.NetworkChunkPublisherUpdate=121]="NetworkChunkPublisherUpdate",t[t.BiomeDefinitionList=122]="BiomeDefinitionList",t[t.LevelSoundEvent=123]="LevelSoundEvent",t[t.LevelEventGeneric=124]="LevelEventGeneric",t[t.OnScreenTextureAnimation=130]="OnScreenTextureAnimation",t[t.Emote=138]="Emote",t[t.CompletedUsingItem=142]="CompletedUsingItem",t[t.NetworkSettings=143]="NetworkSettings",t[t.PlayerAuthInput=144]="PlayerAuthInput",t[t.CreativeContent=145]="CreativeContent",t[t.PlayerEnchantOptions=146]="PlayerEnchantOptions",t[t.ItemStackRequest=147]="ItemStackRequest",t[t.ItemStackResponse=148]="ItemStackResponse",t[t.EmoteList=152]="EmoteList",t[t.DebugInfo=155]="DebugInfo",t[t.PacketViolationWarning=156]="PacketViolationWarning",t[t.AnimateEntity=158]="AnimateEntity",t[t.CameraShake=159]="CameraShake",t[t.PlayerFog=160]="PlayerFog",t[t.CorrectPlayerMovePrediction=161]="CorrectPlayerMovePrediction",t[t.ItemComponent=162]="ItemComponent",t[t.ClientBoundDebugRenderer=164]="ClientBoundDebugRenderer",t[t.SyncActorProperty=165]="SyncActorProperty",t[t.NpcDialogue=169]="NpcDialogue",t[t.PlayerStartItemCooldown=176]="PlayerStartItemCooldown",t[t.ScriptMessage=177]="ScriptMessage",t[t.DimensionData=180]="DimensionData",t[t.RequestPermissions=185]="RequestPermissions",t[t.ToastRequest=186]="ToastRequest",t[t.UpdateAbilities=187]="UpdateAbilities",t[t.UpdateAdventureSettings=188]="UpdateAdventureSettings",t[t.DeathInfo=189]="DeathInfo",t[t.RequestNetworkSettings=193]="RequestNetworkSettings",t[t.UpdateClientInputLocks=196]="UpdateClientInputLocks",t[t.CameraPresetsPacket=198]="CameraPresetsPacket",t[t.UnlockedRecipes=199]="UnlockedRecipes",t[t.CameraInstructions=300]="CameraInstructions",t[t.TrimData=302]="TrimData",t[t.OpenSign=303]="OpenSign",t[t.SetPlayerInventoryOptions=307]="SetPlayerInventoryOptions",t[t.SetHud=308]="SetHud",t[t.AwardAchievement=309]="AwardAchievement",t[t.ClientboundCloseForm=310]="ClientboundCloseForm",t[t.ServerboundLoadingScreenPacket=312]="ServerboundLoadingScreenPacket",t[t.CurrentStructureFeature=314]="CurrentStructureFeature",t[t.ServerboundDiagnosticPacket=315]="ServerboundDiagnosticPacket",t[t.MovementEffect=318]="MovementEffect",t}(p||{});var Ch=function(t){return t[t.Unknown=0]="Unknown",t[t.CantConnectNoInternet=1]="CantConnectNoInternet",t[t.NoPermissions=2]="NoPermissions",t[t.UnrecoverableError=3]="UnrecoverableError",t[t.ThirdPartyBlocked=4]="ThirdPartyBlocked",t[t.ThirdPartyNoInternet=5]="ThirdPartyNoInternet",t[t.ThirdPartyBadIp=6]="ThirdPartyBadIp",t[t.ThirdPartyNoServerOrServerLocked=7]="ThirdPartyNoServerOrServerLocked",t[t.VersionMismatch=8]="VersionMismatch",t[t.SkinIssue=9]="SkinIssue",t[t.InviteSessionNotFound=10]="InviteSessionNotFound",t[t.EduLevelSettingsMissing=11]="EduLevelSettingsMissing",t[t.LocalServerNotFound=12]="LocalServerNotFound",t[t.LegacyDisconnect=13]="LegacyDisconnect",t[t.UserLeaveGameAttempted=14]="UserLeaveGameAttempted",t[t.PlatformLockedSkinsError=15]="PlatformLockedSkinsError",t[t.RealmsWorldUnassigned=16]="RealmsWorldUnassigned",t[t.RealmsServerCantConnect=17]="RealmsServerCantConnect",t[t.RealmsServerHidden=18]="RealmsServerHidden",t[t.RealmsServerDisabledBeta=19]="RealmsServerDisabledBeta",t[t.RealmsServerDisabled=20]="RealmsServerDisabled",t[t.CrossPlatformDisallowed=21]="CrossPlatformDisallowed",t[t.CantConnect=22]="CantConnect",t[t.SessionNotFound=23]="SessionNotFound",t[t.ClientSettingsIncompatibleWithServer=24]="ClientSettingsIncompatibleWithServer",t[t.ServerFull=25]="ServerFull",t[t.InvalidPlatformSkin=26]="InvalidPlatformSkin",t[t.EditionVersionMismatch=27]="EditionVersionMismatch",t[t.EditionMismatch=28]="EditionMismatch",t[t.LevelNewerThanExeVersion=29]="LevelNewerThanExeVersion",t[t.NoFailOccurred=30]="NoFailOccurred",t[t.BannedSkin=31]="BannedSkin",t[t.Timeout=32]="Timeout",t[t.ServerNotFound=33]="ServerNotFound",t[t.OutdatedServer=34]="OutdatedServer",t[t.OutdatedClient=35]="OutdatedClient",t[t.NoPremiumPlatform=36]="NoPremiumPlatform",t[t.MultiplayerDisabled=37]="MultiplayerDisabled",t[t.NoWifi=38]="NoWifi",t[t.WorldCorruption=39]="WorldCorruption",t[t.NoReason=40]="NoReason",t[t.Disconnected=41]="Disconnected",t[t.InvalidPlayer=42]="InvalidPlayer",t[t.LoggedInOtherLocation=43]="LoggedInOtherLocation",t[t.ServerIdConflict=44]="ServerIdConflict",t[t.NotAllowed=45]="NotAllowed",t[t.NotAuthenticated=46]="NotAuthenticated",t[t.InvalidTenant=47]="InvalidTenant",t[t.UnknownPacket=48]="UnknownPacket",t[t.UnexpectedPacket=49]="UnexpectedPacket",t[t.InvalidCommandRequestPacket=50]="InvalidCommandRequestPacket",t[t.HostSuspended=51]="HostSuspended",t[t.LoginPacketNoRequest=52]="LoginPacketNoRequest",t[t.LoginPacketNoCert=53]="LoginPacketNoCert",t[t.MissingClient=54]="MissingClient",t[t.Kicked=55]="Kicked",t[t.KickedForExploit=56]="KickedForExploit",t[t.KickedForIdle=57]="KickedForIdle",t[t.ResourcePackProblem=58]="ResourcePackProblem",t[t.IncompatiblePack=59]="IncompatiblePack",t[t.OutOfStorage=60]="OutOfStorage",t[t.InvalidLevel=61]="InvalidLevel",t[t.DisconnectPacketDeprecated=62]="DisconnectPacketDeprecated",t[t.BlockMismatch=63]="BlockMismatch",t[t.InvalidHeights=64]="InvalidHeights",t[t.InvalidWidths=65]="InvalidWidths",t[t.ConnectionLost=66]="ConnectionLost",t[t.ZombieConnection=67]="ZombieConnection",t[t.Shutdown=68]="Shutdown",t[t.ReasonNotSet=69]="ReasonNotSet",t[t.LoadingStateTimeout=70]="LoadingStateTimeout",t[t.ResourcePackLoadingFailed=71]="ResourcePackLoadingFailed",t[t.SearchingForSessionLoadingScreenFailed=72]="SearchingForSessionLoadingScreenFailed",t[t.ConnProtocolVersion=73]="ConnProtocolVersion",t[t.SubsystemStatusError=74]="SubsystemStatusError",t[t.EmptyAuthFromDiscovery=75]="EmptyAuthFromDiscovery",t[t.EmptyUrlFromDiscovery=76]="EmptyUrlFromDiscovery",t[t.ExpiredAuthFromDiscovery=77]="ExpiredAuthFromDiscovery",t[t.UnknownSignalServiceSignInFailure=78]="UnknownSignalServiceSignInFailure",t[t.XblJoinLobbyFailure=79]="XblJoinLobbyFailure",t[t.UnspecifiedClientInstanceDisconnection=80]="UnspecifiedClientInstanceDisconnection",t[t.ConnSessionNotFound=81]="ConnSessionNotFound",t[t.ConnCreatePeerConnection=82]="ConnCreatePeerConnection",t[t.ConnIce=83]="ConnIce",t[t.ConnConnectRequest=84]="ConnConnectRequest",t[t.ConnConnectResponse=85]="ConnConnectResponse",t[t.ConnNegotiationTimeout=86]="ConnNegotiationTimeout",t[t.ConnInactivityTimeout=87]="ConnInactivityTimeout",t[t.StaleConnectionBeingReplaced=88]="StaleConnectionBeingReplaced",t[t.RealmsSessionNotFound=89]="RealmsSessionNotFound",t[t.BadPacket=90]="BadPacket",t}(Ch||{});var Vh=function(t){return t[t.Zlib=0]="Zlib",t[t.Snappy=1]="Snappy",t[t.NotPresent=2]="NotPresent",t[t.None=255]="None",t}(Vh||{});var jh=function(t){return t[t.LoginSuccess=0]="LoginSuccess",t[t.FailedClient=1]="FailedClient",t[t.FailedServer=2]="FailedServer",t[t.PlayerSpawn=3]="PlayerSpawn",t[t.FailedInvalidTenant=4]="FailedInvalidTenant",t[t.FailedVanillaEdu=5]="FailedVanillaEdu",t[t.FailedIncompatible=6]="FailedIncompatible",t[t.FailedServerFull=7]="FailedServerFull",t[t.FailedEditorVanillaMismatch=8]="FailedEditorVanillaMismatch",t[t.FailedVanillaEditorMismatch=9]="FailedVanillaEditorMismatch",t}(jh||{});var _h=function(t){return t[t.None=0]="None",t[t.Refused=1]="Refused",t[t.SendPacks=2]="SendPacks",t[t.HaveAllPacks=3]="HaveAllPacks",t[t.Completed=4]="Completed",t}(_h||{});var Uh=function(t){return t[t.Survival=0]="Survival",t[t.Creative=1]="Creative",t[t.Adventure=2]="Adventure",t[t.SurvivalSpectator=3]="SurvivalSpectator",t[t.CreativeSpectator=4]="CreativeSpectator",t[t.Fallback=5]="Fallback",t[t.Spectator=6]="Spectator",t}(Uh||{});var _n=function(t){return t[t.Peaceful=0]="Peaceful",t[t.Easy=1]="Easy",t[t.Normal=2]="Normal",t[t.Hard=3]="Hard",t}(_n||{});var Re=function(t){return t[t.Bool=1]="Bool",t[t.Int=2]="Int",t[t.Float=3]="Float",t}(Re||{});var Un=function(t){return t[t.Visitor=0]="Visitor",t[t.Member=1]="Member",t[t.Operator=2]="Operator",t[t.Custom=3]="Custom",t}(Un||{});var Dn=function(t){return t[t.Normal=0]="Normal",t[t.Reset=1]="Reset",t[t.Teleport=2]="Teleport",t[t.Rotation=3]="Rotation",t}(Dn||{});var Nn=function(t){return t[t.Add=0]="Add",t[t.Remove=1]="Remove",t}(Nn||{});var Dh=function(t){return t[t.Malformed=0]="Malformed",t}(Dh||{});var Nh=function(t){return t[t.Warning=0]="Warning",t[t.FanalWarning=1]="FanalWarning",t[t.Terminating=2]="Terminating",t}(Nh||{});var Zh=function(t){return t[t.Normal=0]="Normal",t[t.Operator=1]="Operator",t[t.Automation=2]="Automation",t[t.Host=3]="Host",t[t.Owner=4]="Owner",t[t.Internal=5]="Internal",t}(Zh||{});var Mh=function(t){return t[t.Int=1]="Int",t[t.Float=3]="Float",t[t.Value=4]="Value",t[t.WildcardInt=5]="WildcardInt",t[t.Operator=6]="Operator",t[t.CompareOperator=7]="CompareOperator",t[t.Target=8]="Target",t[t.WildcardTarget=10]="WildcardTarget",t[t.Filepath=17]="Filepath",t[t.FullIntegerRange=23]="FullIntegerRange",t[t.EquipmentSlot=47]="EquipmentSlot",t[t.String=48]="String",t[t.IntPosition=64]="IntPosition",t[t.FloatPosition=65]="FloatPosition",t[t.Message=67]="Message",t[t.RawText=70]="RawText",t[t.Json=74]="Json",t[t.BlockState=84]="BlockState",t[t.Command=87]="Command",t}(Mh||{});var zh=function(t){return t[t.CustomCache=0]="CustomCache",t[t.Base=1]="Base",t[t.Spectator=2]="Spectator",t[t.Commands=3]="Commands",t[t.Editor=4]="Editor",t}(zh||{});var j=function(t){return t[t.Build=0]="Build",t[t.Mine=1]="Mine",t[t.DoorsAndSwitches=2]="DoorsAndSwitches",t[t.OpenContainers=3]="OpenContainers",t[t.AttackPlayers=4]="AttackPlayers",t[t.AttackMobs=5]="AttackMobs",t[t.OperatorCommands=6]="OperatorCommands",t[t.Teleport=7]="Teleport",t[t.Invulnerable=8]="Invulnerable",t[t.Flying=9]="Flying",t[t.MayFly=10]="MayFly",t[t.InstantBuild=11]="InstantBuild",t[t.Lightning=12]="Lightning",t[t.FlySpeed=13]="FlySpeed",t[t.WalkSpeed=14]="WalkSpeed",t[t.Muted=15]="Muted",t[t.WorldBuilder=16]="WorldBuilder",t[t.NoClip=17]="NoClip",t[t.PrivilegedBuilder=18]="PrivilegedBuilder",t[t.Count=19]="Count",t}(j||{});var $=function(t){return t[t.Raw=0]="Raw",t[t.Chat=1]="Chat",t[t.Translation=2]="Translation",t[t.Popup=3]="Popup",t[t.JukeboxPopup=4]="JukeboxPopup",t[t.Tip=5]="Tip",t[t.System=6]="System",t[t.Whisper=7]="Whisper",t[t.Announcement=8]="Announcement",t[t.JsonWhisper=9]="JsonWhisper",t[t.Json=10]="Json",t[t.JsonAnnouncement=11]="JsonAnnouncement",t}($||{});var Fh=function(t){return t[t.Clear=0]="Clear",t[t.Reset=1]="Reset",t[t.Title=2]="Title",t[t.Subtitle=3]="Subtitle",t[t.Actionbar=4]="Actionbar",t[t.Times=5]="Times",t[t.TitleTextObject=6]="TitleTextObject",t[t.SubtitleTextObject=7]="SubtitleTextObject",t[t.ActionbarTextObject=8]="ActionbarTextObject",t}(Fh||{});var qr=function(t){return t[t.Invalid=0]="Invalid",t[t.StopRiding=3]="StopRiding",t[t.InteractUpdate=4]="InteractUpdate",t[t.NpcOpen=5]="NpcOpen",t[t.OpenInventory=6]="OpenInventory",t}(qr||{});var Zn=function(t){return t[t.None=-1]="None",t[t.Inventory=0]="Inventory",t[t.First=1]="First",t[t.Last=100]="Last",t[t.Offhand=119]="Offhand",t[t.Armor=120]="Armor",t[t.SelectionSlots=122]="SelectionSlots",t[t.Ui=124]="Ui",t[t.Registry=125]="Registry",t}(Zn||{});var Th=function(t){return t[t.AnvilInput=0]="AnvilInput",t[t.AnvilMaterial=1]="AnvilMaterial",t[t.AnvilResult=2]="AnvilResult",t[t.SmithingTableInput=3]="SmithingTableInput",t[t.SmithingTableMaterial=4]="SmithingTableMaterial",t[t.SmithingTableResult=5]="SmithingTableResult",t[t.Armor=6]="Armor",t[t.Container=7]="Container",t[t.BeaconPayment=8]="BeaconPayment",t[t.BrewingInput=9]="BrewingInput",t[t.BrewingResult=10]="BrewingResult",t[t.BrewingFuel=11]="BrewingFuel",t[t.HotbarAndInventory=12]="HotbarAndInventory",t[t.CraftingInput=13]="CraftingInput",t[t.CraftingOutput=14]="CraftingOutput",t[t.RecipeConstruction=15]="RecipeConstruction",t[t.RecipeNature=16]="RecipeNature",t[t.RecipeItems=17]="RecipeItems",t[t.RecipeSearch=18]="RecipeSearch",t[t.RecipeSearchBar=19]="RecipeSearchBar",t[t.RecipeEquipment=20]="RecipeEquipment",t[t.RecipeBook=21]="RecipeBook",t[t.EnchantingInput=22]="EnchantingInput",t[t.EnchantingLapis=23]="EnchantingLapis",t[t.FurnaceFuel=24]="FurnaceFuel",t[t.FurnaceIngredient=25]="FurnaceIngredient",t[t.FurnaceOutput=26]="FurnaceOutput",t[t.HorseEquip=27]="HorseEquip",t[t.Hotbar=28]="Hotbar",t[t.Inventory=29]="Inventory",t[t.Shulker=30]="Shulker",t[t.TradeIngredient1=31]="TradeIngredient1",t[t.TradeIngredient2=32]="TradeIngredient2",t[t.TradeResult=33]="TradeResult",t[t.Offhand=34]="Offhand",t[t.CompCreateInput=35]="CompCreateInput",t[t.CompCreateOutput=36]="CompCreateOutput",t[t.ElementConstructOutput=37]="ElementConstructOutput",t[t.MatReduceInput=38]="MatReduceInput",t[t.MatReduceOutput=39]="MatReduceOutput",t[t.LabTableInput=40]="LabTableInput",t[t.LoomInput=41]="LoomInput",t[t.LoomDye=42]="LoomDye",t[t.LoomMaterial=43]="LoomMaterial",t[t.LoomResult=44]="LoomResult",t[t.BlastFurnaceIngredient=45]="BlastFurnaceIngredient",t[t.SmokerIngredient=46]="SmokerIngredient",t[t.Trade2Ingredient1=47]="Trade2Ingredient1",t[t.Trade2Ingredient2=48]="Trade2Ingredient2",t[t.Trade2Result=49]="Trade2Result",t[t.GrindstoneInput=50]="GrindstoneInput",t[t.GrindstoneAdditional=51]="GrindstoneAdditional",t[t.GrindstoneResult=52]="GrindstoneResult",t[t.StonecutterInput=53]="StonecutterInput",t[t.StonecutterResult=54]="StonecutterResult",t[t.CartographyInput=55]="CartographyInput",t[t.CartographyAdditional=56]="CartographyAdditional",t[t.CartographyResult=57]="CartographyResult",t[t.Barrel=58]="Barrel",t[t.Cursor=59]="Cursor",t[t.CreativeOutput=60]="CreativeOutput",t[t.SmithingTableTemplate=61]="SmithingTableTemplate",t[t.Crafter=62]="Crafter",t[t.Dynamic=63]="Dynamic",t}(Th||{});var Mn=function(t){return t[t.None=-9]="None",t[t.Inventory=-1]="Inventory",t[t.Container=0]="Container",t[t.Workbench=1]="Workbench",t[t.Furnace=2]="Furnace",t[t.Enchantment=3]="Enchantment",t[t.BrewingStand=4]="BrewingStand",t[t.Anvil=5]="Anvil",t[t.Dispenser=6]="Dispenser",t[t.Dropper=7]="Dropper",t[t.Hopper=8]="Hopper",t[t.Cauldron=9]="Cauldron",t[t.MinecartChest=10]="MinecartChest",t[t.MinecartHopper=11]="MinecartHopper",t[t.Horse=12]="Horse",t[t.Beacon=13]="Beacon",t[t.StructureEditor=14]="StructureEditor",t[t.Trading=15]="Trading",t[t.CommandBlock=16]="CommandBlock",t[t.Jukebox=17]="Jukebox",t[t.Armor=18]="Armor",t[t.Hand=19]="Hand",t[t.CompoundCreator=20]="CompoundCreator",t[t.ElementConstructor=21]="ElementConstructor",t[t.MaterialReducer=22]="MaterialReducer",t[t.LabTable=23]="LabTable",t[t.Loom=24]="Loom",t[t.Lectern=25]="Lectern",t[t.Grindstone=26]="Grindstone",t[t.BlastFurnace=27]="BlastFurnace",t[t.Smoker=28]="Smoker",t[t.Stonecutter=29]="Stonecutter",t[t.Cartography=30]="Cartography",t[t.Hud=31]="Hud",t[t.JigsawEditor=32]="JigsawEditor",t[t.SmithingTable=33]="SmithingTable",t[t.ChestBoat=34]="ChestBoat",t[t.DecoratedPot=35]="DecoratedPot",t[t.Crafter=36]="Crafter",t}(Mn||{});var er=function(t){return t[t.Unknown=-1]="Unknown",t[t.StartDestroyBlock=0]="StartDestroyBlock",t[t.AbortDestroyBlock=1]="AbortDestroyBlock",t[t.StopDestroyBlock=2]="StopDestroyBlock",t[t.GetUpdatedBlock=3]="GetUpdatedBlock",t[t.DropItem=4]="DropItem",t[t.StartSleeping=5]="StartSleeping",t[t.StopSleeping=6]="StopSleeping",t[t.Respawn=7]="Respawn",t[t.StartJump=8]="StartJump",t[t.StartSprinting=9]="StartSprinting",t[t.StopSprinting=10]="StopSprinting",t[t.StartSneaking=11]="StartSneaking",t[t.StopSneaking=12]="StopSneaking",t[t.CreativeDestroyBlock=13]="CreativeDestroyBlock",t[t.ChangeDimensionAck=14]="ChangeDimensionAck",t[t.StartGliding=15]="StartGliding",t[t.StopGliding=16]="StopGliding",t[t.DenyDestroyBlock=17]="DenyDestroyBlock",t[t.CrackBlock=18]="CrackBlock",t[t.ChangeSkin=19]="ChangeSkin",t[t.DEPRECATED_UpdatedEnchantingSeed=20]="DEPRECATED_UpdatedEnchantingSeed",t[t.StartSwimming=21]="StartSwimming",t[t.StopSwimming=22]="StopSwimming",t[t.StartSpinAttack=23]="StartSpinAttack",t[t.StopSpinAttack=24]="StopSpinAttack",t[t.InteractWithBlock=25]="InteractWithBlock",t[t.PredictDestroyBlock=26]="PredictDestroyBlock",t[t.ContinueDestroyBlock=27]="ContinueDestroyBlock",t[t.StartItemUseOn=28]="StartItemUseOn",t[t.StopItemUseOn=29]="StopItemUseOn",t[t.HandledTeleport=30]="HandledTeleport",t[t.MissedSwing=31]="MissedSwing",t[t.StartCrawling=32]="StartCrawling",t[t.StopCrawling=33]="StopCrawling",t[t.StartFlying=34]="StartFlying",t[t.StopFlying=35]="StopFlying",t[t.ClientAckServerData=36]="ClientAckServerData",t[t.StartUsingItem=37]="StartUsingItem",t[t.Count=38]="Count",t}(er||{});var qh=function(t){return t.Absorption="minecraft:absorption",t.AttackDamage="minecraft:attack_damage",t.FallDamage="minecraft:fall_damage",t.FollowRange="minecraft:follow_range",t.Health="minecraft:health",t.HorseJumpStrength="minecraft:horse.jump_strength",t.KnockbackResistence="minecraft:knockback_resistance",t.LavaMovement="minecraft:lava_movement",t.Luck="minecraft:luck",t.Movement="minecraft:movement",t.PlayerExhaustion="minecraft:player.exhaustion",t.PlayerExperience="minecraft:player.experience",t.PlayerHunger="minecraft:player.hunger",t.PlayerLevel="minecraft:player.level",t.PlayerSaturation="minecraft:player.saturation",t.UnderwaterMovement="minecraft:underwater_movement",t.ZombieSpawnReinforcements="minecraft:zombie.spawn_reinforcements",t}(qh||{});var gt=function(t){return t[t.NormalTransaction=0]="NormalTransaction",t[t.InventoryMismatch=1]="InventoryMismatch",t[t.ItemUseTransaction=2]="ItemUseTransaction",t[t.ItemUseOnEntityTransaction=3]="ItemUseOnEntityTransaction",t[t.ItemReleaseTransaction=4]="ItemReleaseTransaction",t}(gt||{});var Hh=function(t){return t[t.Container=0]="Container",t[t.Global=1]="Global",t[t.WorldInteraction=2]="WorldInteraction",t[t.Creative=3]="Creative",t[t.CraftSlot=100]="CraftSlot",t[t.Craft=9999]="Craft",t}(Hh||{});var Wh=function(t){return t[t.Undefined=0]="Undefined",t[t.Android=1]="Android",t[t.Ios=2]="Ios",t[t.MacOS=3]="MacOS",t[t.FireOS=4]="FireOS",t[t.GearVR=5]="GearVR",t[t.Hololens=6]="Hololens",t[t.Win10=7]="Win10",t[t.Win32=8]="Win32",t[t.Dedicated=9]="Dedicated",t[t.TVOS=10]="TVOS",t[t.Orbis=11]="Orbis",t[t.Switch=12]="Switch",t[t.Xbox=13]="Xbox",t[t.WindowsPhone=14]="WindowsPhone",t[t.Linux=15]="Linux",t}(Wh||{});var Gh=function(t){return t[t.ServerSearchingForSpawn=0]="ServerSearchingForSpawn",t[t.ServerReadyToSpawn=1]="ServerReadyToSpawn",t[t.ClientReadyToSpawn=2]="ClientReadyToSpawn",t}(Gh||{});var Ah=function(t){return t.Action="form",t.Message="modal",t.Modal="custom_form",t.Dialogue="dialogue",t}(Ah||{});var Jh=function(t){return t[t.Normal=0]="Normal",t[t.WaterLogged=1]="WaterLogged",t}(Jh||{});var Yh=function(t){return t[t.None=0]="None",t[t.Neighbors=1]="Neighbors",t[t.Network=2]="Network",t[t.NoGraphic=4]="NoGraphic",t[t.Priority=8]="Priority",t}(Yh||{});var Kh=function(t){return t[t.Overworld=0]="Overworld",t[t.Nether=1]="Nether",t[t.End=2]="End",t}(Kh||{});var Qh=function(t){return t[t.Closed=0]="Closed",t[t.Busy=1]="Busy",t}(Qh||{});var W=function(t){return t[t.Take=0]="Take",t[t.Place=1]="Place",t[t.Swap=2]="Swap",t[t.Drop=3]="Drop",t[t.Destroy=4]="Destroy",t[t.Consume=5]="Consume",t[t.Create=6]="Create",t[t.PlaceInItemContainer_DEPRECATED=7]="PlaceInItemContainer_DEPRECATED",t[t.TakeFromItemContainer_DEPRECATED=8]="TakeFromItemContainer_DEPRECATED",t[t.ScreenLabTableCombine=9]="ScreenLabTableCombine",t[t.ScreenBeaconPayment=10]="ScreenBeaconPayment",t[t.ScreenHUDMineBlock=11]="ScreenHUDMineBlock",t[t.CraftRecipe=12]="CraftRecipe",t[t.CraftRecipeAuto=13]="CraftRecipeAuto",t[t.CraftCreative=14]="CraftCreative",t[t.CraftRecipeOptional=15]="CraftRecipeOptional",t[t.CraftRepairAndDisenchant=16]="CraftRepairAndDisenchant",t[t.CraftLoom=17]="CraftLoom",t[t.CraftNonImplemented_DEPRECATEDASKTYLAING=18]="CraftNonImplemented_DEPRECATEDASKTYLAING",t[t.CraftResults_DEPRECATEDASKTYLAING=19]="CraftResults_DEPRECATEDASKTYLAING",t[t.ifdef=20]="ifdef",t[t.TEST_INFRASTRUCTURE_ENABLED=21]="TEST_INFRASTRUCTURE_ENABLED",t[t.Test=22]="Test",t[t.endif=23]="endif",t}(W||{});var $h=function(t){return t[t.Ok=0]="Ok",t[t.Error=1]="Error",t}($h||{});var Xh=function(t){return t.AttackMobs="attack_mobs",t.AttackPlayers="attack_players",t.Build="build",t.Count="count",t.DoorsAndSwitches="doors_and_switches",t.FlySpeed="fly_speed",t.Flying="flying",t.InstantBuild="instant_build",t.Invulnerable="invulnerable",t.Lightning="lightning",t.MayFly="may_fly",t.Mine="mine",t.Muted="muted",t.NoClip="no_clip",t.OpenContainers="open_containers",t.OperatorCommands="operator_commands",t.PrivilegedBuilder="privileged_builder",t.Teleport="teleport",t.WalkSpeed="walk_speed",t.WorldBuilder="world_builder",t}(Xh||{});var zn=function(t){return t[t.None=0]="None",t[t.SwingArm=1]="SwingArm",t[t.Unknown=2]="Unknown",t[t.WakeUp=3]="WakeUp",t[t.CriticalHit=4]="CriticalHit",t[t.MagicCriticalHit=5]="MagicCriticalHit",t[t.RowRight=128]="RowRight",t[t.RowLeft=129]="RowLeft",t}(zn||{});var Lh=function(t){return t[t.Undefined=0]="Undefined",t[t.SoundClick=1e3]="SoundClick",t[t.SoundClickFail=1001]="SoundClickFail",t[t.SoundLaunch=1002]="SoundLaunch",t[t.SoundOpenDoor=1003]="SoundOpenDoor",t[t.SoundFizz=1004]="SoundFizz",t[t.SoundFuse=1005]="SoundFuse",t[t.SoundPlayRecording=1006]="SoundPlayRecording",t[t.SoundGhastWarning=1007]="SoundGhastWarning",t[t.SoundGhastFireball=1008]="SoundGhastFireball",t[t.SoundBlazeFireball=1009]="SoundBlazeFireball",t[t.SoundZombieWoodenDoor=1010]="SoundZombieWoodenDoor",t[t.SoundZombieDoorCrash=1012]="SoundZombieDoorCrash",t[t.SoundZombieInfected=1016]="SoundZombieInfected",t[t.SoundZombieConverted=1017]="SoundZombieConverted",t[t.SoundEndermanTeleport=1018]="SoundEndermanTeleport",t[t.SoundAnvilBroken=1020]="SoundAnvilBroken",t[t.SoundAnvilUsed=1021]="SoundAnvilUsed",t[t.SoundAnvilLand=1022]="SoundAnvilLand",t[t.SoundInfinityArrowPickup=1030]="SoundInfinityArrowPickup",t[t.SoundTeleportEnderPearl=1032]="SoundTeleportEnderPearl",t[t.SoundAddItem=1040]="SoundAddItem",t[t.SoundItemFrameBreak=1041]="SoundItemFrameBreak",t[t.SoundItemFramePlace=1042]="SoundItemFramePlace",t[t.SoundItemFrameRemoveItem=1043]="SoundItemFrameRemoveItem",t[t.SoundItemFrameRotateItem=1044]="SoundItemFrameRotateItem",t[t.SoundExperienceOrbPickup=1051]="SoundExperienceOrbPickup",t[t.SoundTotemUsed=1052]="SoundTotemUsed",t[t.SoundArmorStandBreak=1060]="SoundArmorStandBreak",t[t.SoundArmorStandHit=1061]="SoundArmorStandHit",t[t.SoundArmorStandLand=1062]="SoundArmorStandLand",t[t.SoundArmorStandPlace=1063]="SoundArmorStandPlace",t[t.SoundPointedDripstoneLand=1064]="SoundPointedDripstoneLand",t[t.SoundDyeUsed=1065]="SoundDyeUsed",t[t.SoundInkSacUsed=1066]="SoundInkSacUsed",t[t.SoundAmethystResonate=1067]="SoundAmethystResonate",t[t.QueueCustomMusic=1900]="QueueCustomMusic",t[t.PlayCustomMusic=1901]="PlayCustomMusic",t[t.StopCustomMusic=1902]="StopCustomMusic",t[t.SetMusicVolume=1903]="SetMusicVolume",t[t.ParticlesShoot=2e3]="ParticlesShoot",t[t.ParticlesDestroyBlock=2001]="ParticlesDestroyBlock",t[t.ParticlesPotionSplash=2002]="ParticlesPotionSplash",t[t.ParticlesEyeOfEnderDeath=2003]="ParticlesEyeOfEnderDeath",t[t.ParticlesMobBlockSpawn=2004]="ParticlesMobBlockSpawn",t[t.ParticleCropGrowth=2005]="ParticleCropGrowth",t[t.ParticleSoundGuardianGhost=2006]="ParticleSoundGuardianGhost",t[t.ParticleDeathSmoke=2007]="ParticleDeathSmoke",t[t.ParticleDenyBlock=2008]="ParticleDenyBlock",t[t.ParticleGenericSpawn=2009]="ParticleGenericSpawn",t[t.ParticlesDragonEgg=2010]="ParticlesDragonEgg",t[t.ParticlesCropEaten=2011]="ParticlesCropEaten",t[t.ParticlesCrit=2012]="ParticlesCrit",t[t.ParticlesTeleport=2013]="ParticlesTeleport",t[t.ParticlesCrackBlock=2014]="ParticlesCrackBlock",t[t.ParticlesBubble=2015]="ParticlesBubble",t[t.ParticlesEvaporate=2016]="ParticlesEvaporate",t[t.ParticlesDestroyArmorStand=2017]="ParticlesDestroyArmorStand",t[t.ParticlesBreakingEgg=2018]="ParticlesBreakingEgg",t[t.ParticleDestroyEgg=2019]="ParticleDestroyEgg",t[t.ParticlesEvaporateWater=2020]="ParticlesEvaporateWater",t[t.ParticlesDestroyBlockNoSound=2021]="ParticlesDestroyBlockNoSound",t[t.ParticlesKnockbackRoar=2022]="ParticlesKnockbackRoar",t[t.ParticlesTeleportTrail=2023]="ParticlesTeleportTrail",t[t.ParticlesPointCloud=2024]="ParticlesPointCloud",t[t.ParticlesExplosion=2025]="ParticlesExplosion",t[t.ParticlesBlockExplosion=2026]="ParticlesBlockExplosion",t[t.ParticlesVibrationSignal=2027]="ParticlesVibrationSignal",t[t.ParticlesDripstoneDrip=2028]="ParticlesDripstoneDrip",t[t.ParticlesFizzEffect=2029]="ParticlesFizzEffect",t[t.WaxOn=2030]="WaxOn",t[t.WaxOff=2031]="WaxOff",t[t.Scrape=2032]="Scrape",t[t.ParticlesElectricSpark=2033]="ParticlesElectricSpark",t[t.ParticleTurtleEgg=2034]="ParticleTurtleEgg",t[t.ParticlesSculkShriek=2035]="ParticlesSculkShriek",t[t.SculkCatalystBloom=2036]="SculkCatalystBloom",t[t.SculkCharge=2037]="SculkCharge",t[t.SculkChargePop=2038]="SculkChargePop",t[t.SonicExplosion=2039]="SonicExplosion",t[t.DustPlume=2040]="DustPlume",t[t.StartRaining=3001]="StartRaining",t[t.StartThunderstorm=3002]="StartThunderstorm",t[t.StopRaining=3003]="StopRaining",t[t.StopThunderstorm=3004]="StopThunderstorm",t[t.GlobalPause=3005]="GlobalPause",t[t.SimTimeStep=3006]="SimTimeStep",t[t.SimTimeScale=3007]="SimTimeScale",t[t.ActivateBlock=3500]="ActivateBlock",t[t.CauldronExplode=3501]="CauldronExplode",t[t.CauldronDyeArmor=3502]="CauldronDyeArmor",t[t.CauldronCleanArmor=3503]="CauldronCleanArmor",t[t.CauldronFillPotion=3504]="CauldronFillPotion",t[t.CauldronTakePotion=3505]="CauldronTakePotion",t[t.CauldronFillWater=3506]="CauldronFillWater",t[t.CauldronTakeWater=3507]="CauldronTakeWater",t[t.CauldronAddDye=3508]="CauldronAddDye",t[t.CauldronCleanBanner=3509]="CauldronCleanBanner",t[t.CauldronFlush=3510]="CauldronFlush",t[t.AgentSpawnEffect=3511]="AgentSpawnEffect",t[t.CauldronFillLava=3512]="CauldronFillLava",t[t.CauldronTakeLava=3513]="CauldronTakeLava",t[t.CauldronFillPowderSnow=3514]="CauldronFillPowderSnow",t[t.CauldronTakePowderSnow=3515]="CauldronTakePowderSnow",t[t.StartBlockCracking=3600]="StartBlockCracking",t[t.StopBlockCracking=3601]="StopBlockCracking",t[t.UpdateBlockCracking=3602]="UpdateBlockCracking",t[t.ParticlesCrackBlockDown=3603]="ParticlesCrackBlockDown",t[t.ParticlesCrackBlockUp=3604]="ParticlesCrackBlockUp",t[t.ParticlesCrackBlockNorth=3605]="ParticlesCrackBlockNorth",t[t.ParticlesCrackBlockSouth=3606]="ParticlesCrackBlockSouth",t[t.ParticlesCrackBlockWest=3607]="ParticlesCrackBlockWest",t[t.ParticlesCrackBlockEast=3608]="ParticlesCrackBlockEast",t[t.ParticlesShootWhiteSmoke=3609]="ParticlesShootWhiteSmoke",t[t.ParticlesBreezeWindExplosion=3610]="ParticlesBreezeWindExplosion",t[t.ParticlesTrialSpawnerDetection=3611]="ParticlesTrialSpawnerDetection",t[t.ParticlesTrialSpawnerSpawning=3612]="ParticlesTrialSpawnerSpawning",t[t.ParticlesTrialSpawnerEjecting=3613]="ParticlesTrialSpawnerEjecting",t[t.ParticlesWindExplosion=3614]="ParticlesWindExplosion",t[t.AllPlayersSleeping=3615]="AllPlayersSleeping",t[t.deprecated=3616]="deprecated",t[t.SleepingPlayers=9801]="SleepingPlayers",t[t.JumpPrevented=9810]="JumpPrevented",t[t.AnimationVaultActivate=9811]="AnimationVaultActivate",t[t.AnimationVaultDeactivate=9812]="AnimationVaultDeactivate",t[t.AnimationVaultEjectItem=9813]="AnimationVaultEjectItem",t[t.AnimationSpawnCobweb=9814]="AnimationSpawnCobweb",t[t.ParticleSmashAttackGroundDust=9815]="ParticleSmashAttackGroundDust",t[t.ParticleCreakingHeartTrail=9816]="ParticleCreakingHeartTrail",t[t.ParticleLegacyEvent=16384]="ParticleLegacyEvent",t}(Lh||{});var Eh=function(t){return t[t.ItemUseOn=0]="ItemUseOn",t[t.Hit=1]="Hit",t[t.Step=2]="Step",t[t.Fly=3]="Fly",t[t.Jump=4]="Jump",t[t.Break=5]="Break",t[t.Place=6]="Place",t[t.HeavyStep=7]="HeavyStep",t[t.Gallop=8]="Gallop",t[t.Fall=9]="Fall",t[t.Ambient=10]="Ambient",t[t.AmbientBaby=11]="AmbientBaby",t[t.AmbientInWater=12]="AmbientInWater",t[t.Breathe=13]="Breathe",t[t.Death=14]="Death",t[t.DeathInWater=15]="DeathInWater",t[t.DeathToZombie=16]="DeathToZombie",t[t.Hurt=17]="Hurt",t[t.HurtInWater=18]="HurtInWater",t[t.Mad=19]="Mad",t[t.Boost=20]="Boost",t[t.Bow=21]="Bow",t[t.SquishBig=22]="SquishBig",t[t.SquishSmall=23]="SquishSmall",t[t.FallBig=24]="FallBig",t[t.FallSmall=25]="FallSmall",t[t.Splash=26]="Splash",t[t.Fizz=27]="Fizz",t[t.Flap=28]="Flap",t[t.Swim=29]="Swim",t[t.Drink=30]="Drink",t[t.Eat=31]="Eat",t[t.Takeoff=32]="Takeoff",t[t.Shake=33]="Shake",t[t.Plop=34]="Plop",t[t.Land=35]="Land",t[t.Saddle=36]="Saddle",t[t.Armor=37]="Armor",t[t.ArmorPlace=38]="ArmorPlace",t[t.AddChest=39]="AddChest",t[t.Throw=40]="Throw",t[t.Attack=41]="Attack",t[t.AttackNoDamage=42]="AttackNoDamage",t[t.AttackStrong=43]="AttackStrong",t[t.Warn=44]="Warn",t[t.Shear=45]="Shear",t[t.Milk=46]="Milk",t[t.Thunder=47]="Thunder",t[t.Explode=48]="Explode",t[t.Fire=49]="Fire",t[t.Ignite=50]="Ignite",t[t.Fuse=51]="Fuse",t[t.Stare=52]="Stare",t[t.Spawn=53]="Spawn",t[t.Shoot=54]="Shoot",t[t.BreakBlock=55]="BreakBlock",t[t.Launch=56]="Launch",t[t.Blast=57]="Blast",t[t.LargeBlast=58]="LargeBlast",t[t.Twinkle=59]="Twinkle",t[t.Remedy=60]="Remedy",t[t.Unfect=61]="Unfect",t[t.LevelUp=62]="LevelUp",t[t.BowHit=63]="BowHit",t[t.BulletHit=64]="BulletHit",t[t.ExtinguishFire=65]="ExtinguishFire",t[t.ItemFizz=66]="ItemFizz",t[t.ChestOpen=67]="ChestOpen",t[t.ChestClosed=68]="ChestClosed",t[t.ShulkerBoxOpen=69]="ShulkerBoxOpen",t[t.ShulkerBoxClosed=70]="ShulkerBoxClosed",t[t.EnderChestOpen=71]="EnderChestOpen",t[t.EnderChestClosed=72]="EnderChestClosed",t[t.PowerOn=73]="PowerOn",t[t.PowerOff=74]="PowerOff",t[t.Attach=75]="Attach",t[t.Detach=76]="Detach",t[t.Deny=77]="Deny",t[t.Tripod=78]="Tripod",t[t.Pop=79]="Pop",t[t.DropSlot=80]="DropSlot",t[t.Note=81]="Note",t[t.Thorns=82]="Thorns",t[t.PistonIn=83]="PistonIn",t[t.PistonOut=84]="PistonOut",t[t.Portal=85]="Portal",t[t.Water=86]="Water",t[t.LavaPop=87]="LavaPop",t[t.Lava=88]="Lava",t[t.Burp=89]="Burp",t[t.BucketFillWater=90]="BucketFillWater",t[t.BucketFillLava=91]="BucketFillLava",t[t.BucketEmptyWater=92]="BucketEmptyWater",t[t.BucketEmptyLava=93]="BucketEmptyLava",t[t.EquipChain=94]="EquipChain",t[t.EquipDiamond=95]="EquipDiamond",t[t.EquipGeneric=96]="EquipGeneric",t[t.EquipGold=97]="EquipGold",t[t.EquipIron=98]="EquipIron",t[t.EquipLeather=99]="EquipLeather",t[t.EquipElytra=100]="EquipElytra",t[t.Record13=101]="Record13",t[t.RecordCat=102]="RecordCat",t[t.RecordBlocks=103]="RecordBlocks",t[t.RecordChirp=104]="RecordChirp",t[t.RecordFar=105]="RecordFar",t[t.RecordMall=106]="RecordMall",t[t.RecordMellohi=107]="RecordMellohi",t[t.RecordStal=108]="RecordStal",t[t.RecordStrad=109]="RecordStrad",t[t.RecordWard=110]="RecordWard",t[t.Record11=111]="Record11",t[t.RecordWait=112]="RecordWait",t[t.RecordNull=113]="RecordNull",t[t.Flop=114]="Flop",t[t.GuardianCurse=115]="GuardianCurse",t[t.MobWarning=116]="MobWarning",t[t.MobWarningBaby=117]="MobWarningBaby",t[t.Teleport=118]="Teleport",t[t.ShulkerOpen=119]="ShulkerOpen",t[t.ShulkerClose=120]="ShulkerClose",t[t.Haggle=121]="Haggle",t[t.HaggleYes=122]="HaggleYes",t[t.HaggleNo=123]="HaggleNo",t[t.HaggleIdle=124]="HaggleIdle",t[t.ChorusGrow=125]="ChorusGrow",t[t.ChorusDeath=126]="ChorusDeath",t[t.Glass=127]="Glass",t[t.PotionBrewed=128]="PotionBrewed",t[t.CastSpell=129]="CastSpell",t[t.PrepareAttackSpell=130]="PrepareAttackSpell",t[t.PrepareSummon=131]="PrepareSummon",t[t.PrepareWololo=132]="PrepareWololo",t[t.Fang=133]="Fang",t[t.Charge=134]="Charge",t[t.TakePicture=135]="TakePicture",t[t.PlaceLeashKnot=136]="PlaceLeashKnot",t[t.BreakLeashKnot=137]="BreakLeashKnot",t[t.AmbientGrowl=138]="AmbientGrowl",t[t.AmbientWhine=139]="AmbientWhine",t[t.AmbientPant=140]="AmbientPant",t[t.AmbientPurr=141]="AmbientPurr",t[t.AmbientPurreow=142]="AmbientPurreow",t[t.DeathMinVolume=143]="DeathMinVolume",t[t.DeathMidVolume=144]="DeathMidVolume",t[t.ImitateBlaze=145]="ImitateBlaze",t[t.ImitateCaveSpider=146]="ImitateCaveSpider",t[t.ImitateCreeper=147]="ImitateCreeper",t[t.ImitateElderGuardian=148]="ImitateElderGuardian",t[t.ImitateEnderDragon=149]="ImitateEnderDragon",t[t.ImitateEnderman=150]="ImitateEnderman",t[t.ImitateEndermite=151]="ImitateEndermite",t[t.ImitateEvocationIllager=152]="ImitateEvocationIllager",t[t.ImitateGhast=153]="ImitateGhast",t[t.ImitateHusk=154]="ImitateHusk",t[t.ImitateIllusionIllager=155]="ImitateIllusionIllager",t[t.ImitateMagmaCube=156]="ImitateMagmaCube",t[t.ImitatePolarBear=157]="ImitatePolarBear",t[t.ImitateShulker=158]="ImitateShulker",t[t.ImitateSilverfish=159]="ImitateSilverfish",t[t.ImitateSkeleton=160]="ImitateSkeleton",t[t.ImitateSlime=161]="ImitateSlime",t[t.ImitateSpider=162]="ImitateSpider",t[t.ImitateStray=163]="ImitateStray",t[t.ImitateVex=164]="ImitateVex",t[t.ImitateVindicationIllager=165]="ImitateVindicationIllager",t[t.ImitateWitch=166]="ImitateWitch",t[t.ImitateWither=167]="ImitateWither",t[t.ImitateWitherSkeleton=168]="ImitateWitherSkeleton",t[t.ImitateWolf=169]="ImitateWolf",t[t.ImitateZombie=170]="ImitateZombie",t[t.ImitateZombiePigman=171]="ImitateZombiePigman",t[t.ImitateZombieVillager=172]="ImitateZombieVillager",t[t.EnderEyePlaced=173]="EnderEyePlaced",t[t.EndPortalCreated=174]="EndPortalCreated",t[t.AnvilUse=175]="AnvilUse",t[t.BottleDragonBreath=176]="BottleDragonBreath",t[t.PortalTravel=177]="PortalTravel",t[t.TridentHit=178]="TridentHit",t[t.TridentReturn=179]="TridentReturn",t[t.TridentRiptide_1=180]="TridentRiptide_1",t[t.TridentRiptide_2=181]="TridentRiptide_2",t[t.TridentRiptide_3=182]="TridentRiptide_3",t[t.TridentThrow=183]="TridentThrow",t[t.TridentThunder=184]="TridentThunder",t[t.TridentHitGround=185]="TridentHitGround",t[t.Default=186]="Default",t[t.FletchingTableUse=187]="FletchingTableUse",t[t.ElementConstructOpen=188]="ElementConstructOpen",t[t.IceBombHit=189]="IceBombHit",t[t.BalloonPop=190]="BalloonPop",t[t.LTReactionIceBomb=191]="LTReactionIceBomb",t[t.LTReactionBleach=192]="LTReactionBleach",t[t.LTReactionElephantToothpaste=193]="LTReactionElephantToothpaste",t[t.LTReactionElephantToothpaste2=194]="LTReactionElephantToothpaste2",t[t.LTReactionGlowStick=195]="LTReactionGlowStick",t[t.LTReactionGlowStick2=196]="LTReactionGlowStick2",t[t.LTReactionLuminol=197]="LTReactionLuminol",t[t.LTReactionSalt=198]="LTReactionSalt",t[t.LTReactionFertilizer=199]="LTReactionFertilizer",t[t.LTReactionFireball=200]="LTReactionFireball",t[t.LTReactionMagnesiumSalt=201]="LTReactionMagnesiumSalt",t[t.LTReactionMiscFire=202]="LTReactionMiscFire",t[t.LTReactionFire=203]="LTReactionFire",t[t.LTReactionMiscExplosion=204]="LTReactionMiscExplosion",t[t.LTReactionMiscMystical=205]="LTReactionMiscMystical",t[t.LTReactionMiscMystical2=206]="LTReactionMiscMystical2",t[t.LTReactionProduct=207]="LTReactionProduct",t[t.SparklerUse=208]="SparklerUse",t[t.GlowStickUse=209]="GlowStickUse",t[t.SparklerActive=210]="SparklerActive",t[t.ConvertToDrowned=211]="ConvertToDrowned",t[t.BucketFillFish=212]="BucketFillFish",t[t.BucketEmptyFish=213]="BucketEmptyFish",t[t.BubbleColumnUpwards=214]="BubbleColumnUpwards",t[t.BubbleColumnDownwards=215]="BubbleColumnDownwards",t[t.BubblePop=216]="BubblePop",t[t.BubbleUpInside=217]="BubbleUpInside",t[t.BubbleDownInside=218]="BubbleDownInside",t[t.HurtBaby=219]="HurtBaby",t[t.DeathBaby=220]="DeathBaby",t[t.StepBaby=221]="StepBaby",t[t.SpawnBaby=222]="SpawnBaby",t[t.Born=223]="Born",t[t.TurtleEggBreak=224]="TurtleEggBreak",t[t.TurtleEggCrack=225]="TurtleEggCrack",t[t.TurtleEggHatched=226]="TurtleEggHatched",t[t.LayEgg=227]="LayEgg",t[t.TurtleEggAttacked=228]="TurtleEggAttacked",t[t.BeaconActivate=229]="BeaconActivate",t[t.BeaconAmbient=230]="BeaconAmbient",t[t.BeaconDeactivate=231]="BeaconDeactivate",t[t.BeaconPower=232]="BeaconPower",t[t.ConduitActivate=233]="ConduitActivate",t[t.ConduitAmbient=234]="ConduitAmbient",t[t.ConduitAttack=235]="ConduitAttack",t[t.ConduitDeactivate=236]="ConduitDeactivate",t[t.ConduitShort=237]="ConduitShort",t[t.Swoop=238]="Swoop",t[t.BambooSaplingPlace=239]="BambooSaplingPlace",t[t.PreSneeze=240]="PreSneeze",t[t.Sneeze=241]="Sneeze",t[t.AmbientTame=242]="AmbientTame",t[t.Scared=243]="Scared",t[t.ScaffoldingClimb=244]="ScaffoldingClimb",t[t.CrossbowLoadingStart=245]="CrossbowLoadingStart",t[t.CrossbowLoadingMiddle=246]="CrossbowLoadingMiddle",t[t.CrossbowLoadingEnd=247]="CrossbowLoadingEnd",t[t.CrossbowShoot=248]="CrossbowShoot",t[t.CrossbowQuickChargeStart=249]="CrossbowQuickChargeStart",t[t.CrossbowQuickChargeMiddle=250]="CrossbowQuickChargeMiddle",t[t.CrossbowQuickChargeEnd=251]="CrossbowQuickChargeEnd",t[t.AmbientAggressive=252]="AmbientAggressive",t[t.AmbientWorried=253]="AmbientWorried",t[t.CantBreed=254]="CantBreed",t[t.ShieldBlock=255]="ShieldBlock",t[t.LecternBookPlace=256]="LecternBookPlace",t[t.GrindstoneUse=257]="GrindstoneUse",t[t.Bell=258]="Bell",t[t.CampfireCrackle=259]="CampfireCrackle",t[t.Roar=260]="Roar",t[t.Stun=261]="Stun",t[t.SweetBerryBushHurt=262]="SweetBerryBushHurt",t[t.SweetBerryBushPick=263]="SweetBerryBushPick",t[t.CartographyTableUse=264]="CartographyTableUse",t[t.StonecutterUse=265]="StonecutterUse",t[t.ComposterEmpty=266]="ComposterEmpty",t[t.ComposterFill=267]="ComposterFill",t[t.ComposterFillLayer=268]="ComposterFillLayer",t[t.ComposterReady=269]="ComposterReady",t[t.BarrelOpen=270]="BarrelOpen",t[t.BarrelClose=271]="BarrelClose",t[t.RaidHorn=272]="RaidHorn",t[t.LoomUse=273]="LoomUse",t[t.AmbientInRaid=274]="AmbientInRaid",t[t.UICartographyTableUse=275]="UICartographyTableUse",t[t.UIStonecutterUse=276]="UIStonecutterUse",t[t.UILoomUse=277]="UILoomUse",t[t.SmokerUse=278]="SmokerUse",t[t.BlastFurnaceUse=279]="BlastFurnaceUse",t[t.SmithingTableUse=280]="SmithingTableUse",t[t.Screech=281]="Screech",t[t.Sleep=282]="Sleep",t[t.FurnaceUse=283]="FurnaceUse",t[t.MooshroomConvert=284]="MooshroomConvert",t[t.MilkSuspiciously=285]="MilkSuspiciously",t[t.Celebrate=286]="Celebrate",t[t.JumpPrevent=287]="JumpPrevent",t[t.AmbientPollinate=288]="AmbientPollinate",t[t.BeehiveDrip=289]="BeehiveDrip",t[t.BeehiveEnter=290]="BeehiveEnter",t[t.BeehiveExit=291]="BeehiveExit",t[t.BeehiveWork=292]="BeehiveWork",t[t.BeehiveShear=293]="BeehiveShear",t[t.HoneybottleDrink=294]="HoneybottleDrink",t[t.AmbientCave=295]="AmbientCave",t[t.Retreat=296]="Retreat",t[t.ConvertToZombified=297]="ConvertToZombified",t[t.Admire=298]="Admire",t[t.StepLava=299]="StepLava",t[t.Tempt=300]="Tempt",t[t.Panic=301]="Panic",t[t.Angry=302]="Angry",t[t.AmbientMoodWarpedForest=303]="AmbientMoodWarpedForest",t[t.AmbientMoodSoulsandValley=304]="AmbientMoodSoulsandValley",t[t.AmbientMoodNetherWastes=305]="AmbientMoodNetherWastes",t[t.AmbientMoodBasaltDeltas=306]="AmbientMoodBasaltDeltas",t[t.AmbientMoodCrimsonForest=307]="AmbientMoodCrimsonForest",t[t.RespawnAnchorCharge=308]="RespawnAnchorCharge",t[t.RespawnAnchorDeplete=309]="RespawnAnchorDeplete",t[t.RespawnAnchorSetSpawn=310]="RespawnAnchorSetSpawn",t[t.RespawnAnchorAmbient=311]="RespawnAnchorAmbient",t[t.SoulEscapeQuiet=312]="SoulEscapeQuiet",t[t.SoulEscapeLoud=313]="SoulEscapeLoud",t[t.RecordPigstep=314]="RecordPigstep",t[t.LinkCompassToLodestone=315]="LinkCompassToLodestone",t[t.UseSmithingTable=316]="UseSmithingTable",t[t.EquipNetherite=317]="EquipNetherite",t[t.AmbientLoopWarpedForest=318]="AmbientLoopWarpedForest",t[t.AmbientLoopSoulsandValley=319]="AmbientLoopSoulsandValley",t[t.AmbientLoopNetherWastes=320]="AmbientLoopNetherWastes",t[t.AmbientLoopBasaltDeltas=321]="AmbientLoopBasaltDeltas",t[t.AmbientLoopCrimsonForest=322]="AmbientLoopCrimsonForest",t[t.AmbientAdditionWarpedForest=323]="AmbientAdditionWarpedForest",t[t.AmbientAdditionSoulsandValley=324]="AmbientAdditionSoulsandValley",t[t.AmbientAdditionNetherWastes=325]="AmbientAdditionNetherWastes",t[t.AmbientAdditionBasaltDeltas=326]="AmbientAdditionBasaltDeltas",t[t.AmbientAdditionCrimsonForest=327]="AmbientAdditionCrimsonForest",t[t.SculkSensorPowerOn=328]="SculkSensorPowerOn",t[t.SculkSensorPowerOff=329]="SculkSensorPowerOff",t[t.BucketFillPowderSnow=330]="BucketFillPowderSnow",t[t.BucketEmptyPowderSnow=331]="BucketEmptyPowderSnow",t[t.PointedDripstoneCauldronDripWater=332]="PointedDripstoneCauldronDripWater",t[t.PointedDripstoneCauldronDripLava=333]="PointedDripstoneCauldronDripLava",t[t.PointedDripstoneDripWater=334]="PointedDripstoneDripWater",t[t.PointedDripstoneDripLava=335]="PointedDripstoneDripLava",t[t.CaveVinesPickBerries=336]="CaveVinesPickBerries",t[t.BigDripleafTiltDown=337]="BigDripleafTiltDown",t[t.BigDripleafTiltUp=338]="BigDripleafTiltUp",t[t.CopperWaxOn=339]="CopperWaxOn",t[t.CopperWaxOff=340]="CopperWaxOff",t[t.Scrape=341]="Scrape",t[t.PlayerHurtDrown=342]="PlayerHurtDrown",t[t.PlayerHurtOnFire=343]="PlayerHurtOnFire",t[t.PlayerHurtFreeze=344]="PlayerHurtFreeze",t[t.UseSpyglass=345]="UseSpyglass",t[t.StopUsingSpyglass=346]="StopUsingSpyglass",t[t.AmethystBlockChime=347]="AmethystBlockChime",t[t.AmbientScreamer=348]="AmbientScreamer",t[t.HurtScreamer=349]="HurtScreamer",t[t.DeathScreamer=350]="DeathScreamer",t[t.MilkScreamer=351]="MilkScreamer",t[t.JumpToBlock=352]="JumpToBlock",t[t.PreRam=353]="PreRam",t[t.PreRamScreamer=354]="PreRamScreamer",t[t.RamImpact=355]="RamImpact",t[t.RamImpactScreamer=356]="RamImpactScreamer",t[t.SquidInkSquirt=357]="SquidInkSquirt",t[t.GlowSquidInkSquirt=358]="GlowSquidInkSquirt",t[t.ConvertToStray=359]="ConvertToStray",t[t.CakeAddCandle=360]="CakeAddCandle",t[t.ExtinguishCandle=361]="ExtinguishCandle",t[t.AmbientCandle=362]="AmbientCandle",t[t.BlockClick=363]="BlockClick",t[t.BlockClickFail=364]="BlockClickFail",t[t.SculkCatalystBloom=365]="SculkCatalystBloom",t[t.SculkShriekerShriek=366]="SculkShriekerShriek",t[t.NearbyClose=367]="NearbyClose",t[t.NearbyCloser=368]="NearbyCloser",t[t.NearbyClosest=369]="NearbyClosest",t[t.Agitated=370]="Agitated",t[t.RecordOtherside=371]="RecordOtherside",t[t.Tongue=372]="Tongue",t[t.CrackIronGolem=373]="CrackIronGolem",t[t.RepairIronGolem=374]="RepairIronGolem",t[t.Listening=375]="Listening",t[t.Heartbeat=376]="Heartbeat",t[t.HornBreak=377]="HornBreak",t[t.SculkSpread=379]="SculkSpread",t[t.SculkCharge=380]="SculkCharge",t[t.SculkSensorPlace=381]="SculkSensorPlace",t[t.SculkShriekerPlace=382]="SculkShriekerPlace",t[t.GoatCall0=383]="GoatCall0",t[t.GoatCall1=384]="GoatCall1",t[t.GoatCall2=385]="GoatCall2",t[t.GoatCall3=386]="GoatCall3",t[t.GoatCall4=387]="GoatCall4",t[t.GoatCall5=388]="GoatCall5",t[t.GoatCall6=389]="GoatCall6",t[t.GoatCall7=390]="GoatCall7",t[t.ImitateWarden=426]="ImitateWarden",t[t.ListeningAngry=427]="ListeningAngry",t[t.Item_Given=428]="Item_Given",t[t.Item_Taken=429]="Item_Taken",t[t.Disappeared=430]="Disappeared",t[t.Reappeared=431]="Reappeared",t[t.DrinkMilk=432]="DrinkMilk",t[t.FrogspawnHatched=433]="FrogspawnHatched",t[t.LaySpawn=434]="LaySpawn",t[t.FrogspawnBreak=435]="FrogspawnBreak",t[t.SonicBoom=436]="SonicBoom",t[t.SonicCharge=437]="SonicCharge",t[t.Item_Thrown=438]="Item_Thrown",t[t.Record5=439]="Record5",t[t.ConvertToFrog=440]="ConvertToFrog",t[t.RecordPlaying=441]="RecordPlaying",t[t.EnchantingTableUse=442]="EnchantingTableUse",t[t.StepSand=443]="StepSand",t[t.DashReady=444]="DashReady",t[t.BundleDropContents=445]="BundleDropContents",t[t.BundleInsert=446]="BundleInsert",t[t.BundleRemoveOne=447]="BundleRemoveOne",t[t.PressurePlateClickOff=448]="PressurePlateClickOff",t[t.PressurePlateClickOn=449]="PressurePlateClickOn",t[t.ButtonClickOff=450]="ButtonClickOff",t[t.ButtonClickOn=451]="ButtonClickOn",t[t.DoorOpen=452]="DoorOpen",t[t.DoorClose=453]="DoorClose",t[t.TrapdoorOpen=454]="TrapdoorOpen",t[t.TrapdoorClose=455]="TrapdoorClose",t[t.FenceGateOpen=456]="FenceGateOpen",t[t.FenceGateClose=457]="FenceGateClose",t[t.Insert=458]="Insert",t[t.Pickup=459]="Pickup",t[t.InsertEnchanted=460]="InsertEnchanted",t[t.PickupEnchanted=461]="PickupEnchanted",t[t.Brush=462]="Brush",t[t.BrushCompleted=463]="BrushCompleted",t[t.ShatterDecoratedPot=464]="ShatterDecoratedPot",t[t.BreakDecoratedPot=465]="BreakDecoratedPot",t[t.SnifferEggCrack=466]="SnifferEggCrack",t[t.SnifferEggHatched=467]="SnifferEggHatched",t[t.WaxedSignInteractFail=468]="WaxedSignInteractFail",t[t.RecordRelic=469]="RecordRelic",t[t.Bump=470]="Bump",t[t.PumpkinCarve=471]="PumpkinCarve",t[t.ConvertHuskToZombie=472]="ConvertHuskToZombie",t[t.PigDeath=473]="PigDeath",t[t.HoglinConvertToZombified=474]="HoglinConvertToZombified",t[t.AmbientUnderwaterEnter=475]="AmbientUnderwaterEnter",t[t.AmbientUnderwaterExit=476]="AmbientUnderwaterExit",t[t.BottleFill=477]="BottleFill",t[t.BottleEmpty=478]="BottleEmpty",t[t.CrafterCraft=479]="CrafterCraft",t[t.CrafterFail=480]="CrafterFail",t[t.DecoratedPotInsert=481]="DecoratedPotInsert",t[t.DecoratedPotInsertFail=482]="DecoratedPotInsertFail",t[t.CrafterDisableSlot=483]="CrafterDisableSlot",t[t.CopperBulbTurnOn=490]="CopperBulbTurnOn",t[t.CopperBulbTurnOff=491]="CopperBulbTurnOff",t[t.Undefined=492]="Undefined",t}(Eh||{});var vh=function(t){return t[t.Addon=1]="Addon",t[t.Cached=2]="Cached",t[t.CopyProtected=3]="CopyProtected",t[t.Behaviour=4]="Behaviour",t[t.PersonaPiece=5]="PersonaPiece",t[t.Resources=6]="Resources",t[t.Skins=7]="Skins",t[t.WorldTemplate=8]="WorldTemplate",t}(vh||{});var rr=function(t){return t[t.ContainerInventory=0]="ContainerInventory",t[t.GlobalInventory=1]="GlobalInventory",t[t.WorldInteraction=2]="WorldInteraction",t[t.CreativeInventory=3]="CreativeInventory",t[t.NonImplementedFeatureTODO=99999]="NonImplementedFeatureTODO",t}(rr||{});var tg=function(t){return t[t.Place=0]="Place",t[t.Use=1]="Use",t[t.Destroy=2]="Destroy",t}(tg||{});var eg=function(t){return t[t.Interact=0]="Interact",t[t.Attack=1]="Attack",t}(eg||{});var rg=function(t){return t[t.Release=0]="Release",t[t.Consume=1]="Consume",t}(rg||{});var ig=function(t){return t[t.Bottom=0]="Bottom",t[t.Top=1]="Top",t[t.North=2]="North",t[t.South=3]="South",t[t.West=4]="West",t[t.East=5]="East",t}(ig||{});var og=function(t){return t[t.Ascending=0]="Ascending",t[t.Descending=1]="Descending",t}(og||{});var ng=function(t){return t.List="slot",t.Sidebar="sidebar",t.BelowName="belowname",t}(ng||{});var ag=function(t){return t[t.Register=0]="Register",t[t.Clear=1]="Clear",t}(ag||{});var sg=function(t){return t[t.PaperDoll=0]="PaperDoll",t[t.Armor=1]="Armor",t[t.ToolTips=2]="ToolTips",t[t.TouchControls=3]="TouchControls",t[t.Crosshair=4]="Crosshair",t[t.HotBar=5]="HotBar",t[t.Health=6]="Health",t[t.ProgressBar=7]="ProgressBar",t[t.Hunger=8]="Hunger",t[t.AirBubbles=9]="AirBubbles",t[t.HorseHealth=10]="HorseHealth",t[t.StatusEffects=11]="StatusEffects",t[t.ItemText=12]="ItemText",t[t.Count=13]="Count",t}(sg||{});var cg=function(t){return t[t.Hide=0]="Hide",t[t.Reset=1]="Reset",t[t.Count=2]="Count",t}(cg||{});var pg=function(t){return t[t.Protection=0]="Protection",t[t.FireProtection=1]="FireProtection",t[t.FeatherFalling=2]="FeatherFalling",t[t.BlastProtection=3]="BlastProtection",t[t.ProjectileProtection=4]="ProjectileProtection",t[t.Thorns=5]="Thorns",t[t.Respiration=6]="Respiration",t[t.DepthStrider=7]="DepthStrider",t[t.AquaAffinity=8]="AquaAffinity",t[t.Sharpness=9]="Sharpness",t[t.Smite=10]="Smite",t[t.BaneOfArthropods=11]="BaneOfArthropods",t[t.Knockback=12]="Knockback",t[t.FireAspect=13]="FireAspect",t[t.Looting=14]="Looting",t[t.Efficiency=15]="Efficiency",t[t.SilkTouch=16]="SilkTouch",t[t.Unbreaking=17]="Unbreaking",t[t.Fortune=18]="Fortune",t[t.Power=19]="Power",t[t.Punch=20]="Punch",t[t.Flame=21]="Flame",t[t.Infinity=22]="Infinity",t[t.LuckOfTheSea=23]="LuckOfTheSea",t[t.Lure=24]="Lure",t[t.FrostWalker=25]="FrostWalker",t[t.Mending=26]="Mending",t[t.CurseOfBinding=27]="CurseOfBinding",t[t.CurseOfVanishing=28]="CurseOfVanishing",t[t.Impaling=29]="Impaling",t[t.Riptide=30]="Riptide",t[t.Loyalty=31]="Loyalty",t[t.Channeling=32]="Channeling",t[t.Multishot=33]="Multishot",t[t.Piercing=34]="Piercing",t[t.QuickCharge=35]="QuickCharge",t[t.SoulSpeed=36]="SoulSpeed",t[t.SweepingEdge=37]="SweepingEdge",t[t.None=38]="None",t[t.Unknown=39]="Unknown",t}(pg||{});var N=function(t){return t[t.Add=0]="Add",t[t.PlayerAdded=1]="PlayerAdded",t[t.Remove=2]="Remove",t[t.PlayerRemoved=3]="PlayerRemoved",t[t.UpdatePercent=4]="UpdatePercent",t[t.UpdateName=5]="UpdateName",t[t.UpdateProperties=6]="UpdateProperties",t[t.UpdateStyle=7]="UpdateStyle",t[t.Query=8]="Query",t}(N||{});var fg=function(t){return t[t.Pink=0]="Pink",t[t.Blue=1]="Blue",t[t.Red=2]="Red",t[t.Green=3]="Green",t[t.Yellow=4]="Yellow",t[t.Magenta=5]="Magenta",t[t.Purple=6]="Purple",t[t.White=7]="White",t}(fg||{});var dg=function(t){return t[t.Open=0]="Open",t[t.Close=1]="Close",t}(dg||{});var lg=function(t){return t[t.None=0]="None",t[t.Jump=1]="Jump",t[t.Hurt=2]="Hurt",t[t.Death=3]="Death",t[t.StartAttacking=4]="StartAttacking",t[t.StopAttacking=5]="StopAttacking",t[t.TamingFailed=6]="TamingFailed",t[t.TamingSucceeded=7]="TamingSucceeded",t[t.ShakeWetness=8]="ShakeWetness",t[t.EatGrass=10]="EatGrass",t[t.FishhookBubble=11]="FishhookBubble",t[t.FishhookFishPos=12]="FishhookFishPos",t[t.FishhookHookTime=13]="FishhookHookTime",t[t.FishhookTease=14]="FishhookTease",t[t.SquidFleeing=15]="SquidFleeing",t[t.ZombieConverting=16]="ZombieConverting",t[t.PlayAmbient=17]="PlayAmbient",t[t.SpawnAlive=18]="SpawnAlive",t[t.StartOfferFlower=19]="StartOfferFlower",t[t.StopOfferFlower=20]="StopOfferFlower",t[t.LoveHearts=21]="LoveHearts",t[t.VillagerAngry=22]="VillagerAngry",t[t.VillagerHappy=23]="VillagerHappy",t[t.WitchHatMagic=24]="WitchHatMagic",t[t.FireworksExplode=25]="FireworksExplode",t[t.InLoveHearts=26]="InLoveHearts",t[t.SilverfishMergeAnim=27]="SilverfishMergeAnim",t[t.GuardianAttackSound=28]="GuardianAttackSound",t[t.DrinkPotion=29]="DrinkPotion",t[t.ThrowPotion=30]="ThrowPotion",t[t.PrimeTntCart=31]="PrimeTntCart",t[t.PrimeCreeper=32]="PrimeCreeper",t[t.AirSupply=33]="AirSupply",t[t.AddPlayerLevels=34]="AddPlayerLevels",t[t.GuardianMiningFatigue=35]="GuardianMiningFatigue",t[t.AgentSwingArm=36]="AgentSwingArm",t[t.DragonStartDeathAnim=37]="DragonStartDeathAnim",t[t.GroundDust=38]="GroundDust",t[t.Shake=39]="Shake",t[t.Feed=57]="Feed",t[t.BabyAge=60]="BabyAge",t[t.InstantDeath=61]="InstantDeath",t[t.NotifyTrade=62]="NotifyTrade",t[t.LeashDestroyed=63]="LeashDestroyed",t[t.CaravanUpdated=64]="CaravanUpdated",t[t.TalismanActivate=65]="TalismanActivate",t[t.DeprecatedUpdateStructureFeature=66]="DeprecatedUpdateStructureFeature",t[t.PlayerSpawnedMob=67]="PlayerSpawnedMob",t[t.Puke=68]="Puke",t[t.UpdateStackSize=69]="UpdateStackSize",t[t.StartSwimming=70]="StartSwimming",t[t.BalloonPop=71]="BalloonPop",t[t.TreasureHunt=72]="TreasureHunt",t[t.SummonAgent=73]="SummonAgent",t[t.FinishedChargingItem=74]="FinishedChargingItem",t[t.ActorGrowUp=76]="ActorGrowUp",t[t.VibrationDetected=77]="VibrationDetected",t[t.DrinkMilk=78]="DrinkMilk",t}(lg||{});var mg=function(t){return t[t.SERVER=0]="SERVER",t[t.MUTE_CHAT=1]="MUTE_CHAT",t}(mg||{});var ug=function(t){return t[t.Head=0]="Head",t[t.Chest=1]="Chest",t[t.Legs=2]="Legs",t[t.Feet=3]="Feet",t}(ug||{});var hg=function(t){return t[t.Speed=1]="Speed",t[t.Slowness=2]="Slowness",t[t.Haste=3]="Haste",t[t.MiningFatigue=4]="MiningFatigue",t[t.Strength=5]="Strength",t[t.InstantHealth=6]="InstantHealth",t[t.InstantDamage=7]="InstantDamage",t[t.JumpBoost=8]="JumpBoost",t[t.Nausea=9]="Nausea",t[t.Regeneration=10]="Regeneration",t[t.Resistance=11]="Resistance",t[t.FireResistance=12]="FireResistance",t[t.WaterBreathing=13]="WaterBreathing",t[t.Invisibility=14]="Invisibility",t[t.Blindness=15]="Blindness",t[t.NightVision=16]="NightVision",t[t.Hunger=17]="Hunger",t[t.Weakness=18]="Weakness",t[t.Poison=19]="Poison",t[t.Wither=20]="Wither",t[t.HealthBoost=21]="HealthBoost",t[t.Absorption=22]="Absorption",t[t.Saturation=23]="Saturation",t[t.Levitation=24]="Levitation",t[t.FatalPoison=25]="FatalPoison",t[t.ConduitPower=26]="ConduitPower",t[t.SlowFalling=27]="SlowFalling",t[t.BadOmen=28]="BadOmen",t[t.HeroOfTheVillage=29]="HeroOfTheVillage",t[t.Darkness=30]="Darkness",t[t.TrialOmen=31]="TrialOmen",t[t.WindCharged=32]="WindCharged",t[t.Weaving=33]="Weaving",t[t.Oozing=34]="Oozing",t[t.Infested=35]="Infested",t}(hg||{});var gg=function(t){return t[t.EffectAdd=1]="EffectAdd",t[t.EffectModify=2]="EffectModify",t[t.EffectRemove=3]="EffectRemove",t}(gg||{});var yg=function(t){return t[t.NONE=0]="NONE",t[t.SURVIVAL=1]="SURVIVAL",t[t.RECIPE_BOOK=2]="RECIPE_BOOK",t[t.CREATIVE=3]="CREATIVE",t}(yg||{});var wg=function(t){return t[t.NONE=0]="NONE",t[t.CONSTRUCTION=1]="CONSTRUCTION",t[t.EQUIPMENT=2]="EQUIPMENT",t[t.ITEMS=3]="ITEMS",t[t.NATURE=4]="NATURE",t[t.SEARCH=5]="SEARCH",t[t.SURVIVAL=6]="SURVIVAL",t}(wg||{});var bg=function(t){return t[t.NONE=0]="NONE",t[t.FULL_SCREEN=1]="FULL_SCREEN",t[t.CRAFTING=2]="CRAFTING",t[t.ARMOR=3]="ARMOR",t}(bg||{});var ro=function(t){return t[t.Reserved0=0]="Reserved0",t[t.StructuralIntegrity=1]="StructuralIntegrity",t[t.Variant=2]="Variant",t[t.ColorIndex=3]="ColorIndex",t[t.Name=4]="Name",t[t.Owner=5]="Owner",t[t.Target=6]="Target",t[t.AirSupply=7]="AirSupply",t[t.EffectColor=8]="EffectColor",t[t.Reserved009=9]="Reserved009",t[t.Reserved010=10]="Reserved010",t[t.Hurt=11]="Hurt",t[t.HurtDirection=12]="HurtDirection",t[t.RowTimeLeft=13]="RowTimeLeft",t[t.RowTimeRight=14]="RowTimeRight",t[t.Value=15]="Value",t[t.DisplayTileRuntimeId=16]="DisplayTileRuntimeId",t[t.DisplayOffset=17]="DisplayOffset",t[t.CustomDisplay=18]="CustomDisplay",t[t.Swell=19]="Swell",t[t.OldSwell=20]="OldSwell",t[t.SwellDirection=21]="SwellDirection",t[t.ChargeAmount=22]="ChargeAmount",t[t.CarryBlockRuntimeId=23]="CarryBlockRuntimeId",t[t.ClientEvent=24]="ClientEvent",t[t.UsingItem=25]="UsingItem",t[t.PlayerFlags=26]="PlayerFlags",t[t.PlayerIndex=27]="PlayerIndex",t[t.BedPosition=28]="BedPosition",t[t.XPower=29]="XPower",t[t.YPower=30]="YPower",t[t.ZPower=31]="ZPower",t[t.AuxPower=32]="AuxPower",t[t.Fishx=33]="Fishx",t[t.Fishz=34]="Fishz",t[t.Fishangle=35]="Fishangle",t[t.AuxValueData=36]="AuxValueData",t[t.LeashHolder=37]="LeashHolder",t[t.Reserved038=38]="Reserved038",t[t.HasNpc=39]="HasNpc",t[t.NpcData=40]="NpcData",t[t.Actions=41]="Actions",t[t.AirSupplyMax=42]="AirSupplyMax",t[t.MarkVariant=43]="MarkVariant",t[t.ContainerType=44]="ContainerType",t[t.ContainerSize=45]="ContainerSize",t[t.ContainerStrengthModifier=46]="ContainerStrengthModifier",t[t.BlockTarget=47]="BlockTarget",t[t.Inv=48]="Inv",t[t.TargetA=49]="TargetA",t[t.TargetB=50]="TargetB",t[t.TargetC=51]="TargetC",t[t.AerialAttack=52]="AerialAttack",t[t.Reserved053=53]="Reserved053",t[t.Reserved054=54]="Reserved054",t[t.FuseTime=55]="FuseTime",t[t.Reserved056=56]="Reserved056",t[t.SeatLockPassengerRotation=57]="SeatLockPassengerRotation",t[t.SeatLockPassengerRotationDegrees=58]="SeatLockPassengerRotationDegrees",t[t.SeatRotationOffset=59]="SeatRotationOffset",t[t.SeatRotationOffsetDegrees=60]="SeatRotationOffsetDegrees",t[t.DataRadius=61]="DataRadius",t[t.DataWaiting=62]="DataWaiting",t[t.DataParticle=63]="DataParticle",t[t.PeekId=64]="PeekId",t[t.AttachFace=65]="AttachFace",t[t.Attached=66]="Attached",t[t.AttachPos=67]="AttachPos",t[t.TradeTarget=68]="TradeTarget",t[t.Career=69]="Career",t[t.HasCommandBlock=70]="HasCommandBlock",t[t.CommandName=71]="CommandName",t[t.LastCommandOutput=72]="LastCommandOutput",t[t.TrackCommandOutput=73]="TrackCommandOutput",t[t.Reserved074=74]="Reserved074",t[t.Strength=75]="Strength",t[t.StrengthMax=76]="StrengthMax",t[t.DataSpellCastingColor=77]="DataSpellCastingColor",t[t.DataLifetimeTicks=78]="DataLifetimeTicks",t[t.PoseIndex=79]="PoseIndex",t[t.DataTickOffset=80]="DataTickOffset",t[t.NametagAlwaysShow=81]="NametagAlwaysShow",t[t.Color2Index=82]="Color2Index",t[t.NameAuthor=83]="NameAuthor",t[t.Score=84]="Score",t[t.BalloonAnchor=85]="BalloonAnchor",t[t.PuffedState=86]="PuffedState",t[t.BubbleTime=87]="BubbleTime",t[t.Agent=88]="Agent",t[t.SittingAmount=89]="SittingAmount",t[t.SittingAmountPrevious=90]="SittingAmountPrevious",t[t.EatingCounter=91]="EatingCounter",t[t.Reserved092=92]="Reserved092",t[t.LayingAmount=93]="LayingAmount",t[t.LayingAmountPrevious=94]="LayingAmountPrevious",t[t.DataDuration=95]="DataDuration",t[t.DataSpawnTimeDeprecated=96]="DataSpawnTimeDeprecated",t[t.DataChangeRate=97]="DataChangeRate",t[t.DataChangeOnPickup=98]="DataChangeOnPickup",t[t.DataPickupCount=99]="DataPickupCount",t[t.InteractText=100]="InteractText",t[t.TradeTier=101]="TradeTier",t[t.MaxTradeTier=102]="MaxTradeTier",t[t.TradeExperience=103]="TradeExperience",t[t.SkinId=104]="SkinId",t[t.SpawningFrames=105]="SpawningFrames",t[t.CommandBlockTickDelay=106]="CommandBlockTickDelay",t[t.CommandBlockExecuteOnFirstTick=107]="CommandBlockExecuteOnFirstTick",t[t.AmbientSoundInterval=108]="AmbientSoundInterval",t[t.AmbientSoundIntervalRange=109]="AmbientSoundIntervalRange",t[t.AmbientSoundEventName=110]="AmbientSoundEventName",t[t.FallDamageMultiplier=111]="FallDamageMultiplier",t[t.NameRawText=112]="NameRawText",t[t.CanRideTarget=113]="CanRideTarget",t[t.LowTierCuredTradeDiscount=114]="LowTierCuredTradeDiscount",t[t.HighTierCuredTradeDiscount=115]="HighTierCuredTradeDiscount",t[t.NearbyCuredTradeDiscount=116]="NearbyCuredTradeDiscount",t[t.NearbyCuredDiscountTimeStamp=117]="NearbyCuredDiscountTimeStamp",t[t.Hitbox=118]="Hitbox",t[t.IsBuoyant=119]="IsBuoyant",t[t.FreezingEffectStrength=120]="FreezingEffectStrength",t[t.BuoyancyData=121]="BuoyancyData",t[t.GoatHornCount=122]="GoatHornCount",t[t.BaseRuntimeId=123]="BaseRuntimeId",t[t.MovementSoundDistanceOffset=124]="MovementSoundDistanceOffset",t[t.HeartbeatIntervalTicks=125]="HeartbeatIntervalTicks",t[t.HeartbeatSoundEvent=126]="HeartbeatSoundEvent",t[t.PlayerLastDeathPos=127]="PlayerLastDeathPos",t[t.PlayerLastDeathDimension=128]="PlayerLastDeathDimension",t[t.PlayerHasDied=129]="PlayerHasDied",t[t.CollisionBox=130]="CollisionBox",t[t.VisibleMobEffects=131]="VisibleMobEffects",t[t.Count=132]="Count",t}(ro||{});var Pg=function(t){return t[t.Unknown=-1]="Unknown",t[t.OnFire=0]="OnFire",t[t.Sneaking=1]="Sneaking",t[t.Riding=2]="Riding",t[t.Sprinting=3]="Sprinting",t[t.UsingItem=4]="UsingItem",t[t.Invisible=5]="Invisible",t[t.Tempted=6]="Tempted",t[t.InLove=7]="InLove",t[t.Saddled=8]="Saddled",t[t.Powered=9]="Powered",t[t.Ignited=10]="Ignited",t[t.Baby=11]="Baby",t[t.Converting=12]="Converting",t[t.Critical=13]="Critical",t[t.CanShowName=14]="CanShowName",t[t.AlwaysShowName=15]="AlwaysShowName",t[t.NoAi=16]="NoAi",t[t.Silent=17]="Silent",t[t.WallClimbing=18]="WallClimbing",t[t.CanClimb=19]="CanClimb",t[t.CanSwim=20]="CanSwim",t[t.CanFly=21]="CanFly",t[t.CanWalk=22]="CanWalk",t[t.Resting=23]="Resting",t[t.Sitting=24]="Sitting",t[t.Angry=25]="Angry",t[t.Interested=26]="Interested",t[t.Charged=27]="Charged",t[t.Tamed=28]="Tamed",t[t.Orphaned=29]="Orphaned",t[t.Leashed=30]="Leashed",t[t.Sheared=31]="Sheared",t[t.Gliding=32]="Gliding",t[t.Elder=33]="Elder",t[t.Moving=34]="Moving",t[t.Breathing=35]="Breathing",t[t.Chested=36]="Chested",t[t.Stackable=37]="Stackable",t[t.ShowBottom=38]="ShowBottom",t[t.Standing=39]="Standing",t[t.Shaking=40]="Shaking",t[t.Idling=41]="Idling",t[t.Casting=42]="Casting",t[t.Charging=43]="Charging",t[t.WasdControlled=44]="WasdControlled",t[t.CanPowerJump=45]="CanPowerJump",t[t.CanDash=46]="CanDash",t[t.Lingering=47]="Lingering",t[t.HasCollision=48]="HasCollision",t[t.HasGravity=49]="HasGravity",t[t.FireImmune=50]="FireImmune",t[t.Dancing=51]="Dancing",t[t.Enchanted=52]="Enchanted",t[t.ReturnTrident=53]="ReturnTrident",t[t.ContainerIsPrivate=54]="ContainerIsPrivate",t[t.IsTransforming=55]="IsTransforming",t[t.DamageNearbyMobs=56]="DamageNearbyMobs",t[t.Swimming=57]="Swimming",t[t.Bribed=58]="Bribed",t[t.IsPregnant=59]="IsPregnant",t[t.LayingEgg=60]="LayingEgg",t[t.PassengerCanPick=61]="PassengerCanPick",t[t.TransitionSitting=62]="TransitionSitting",t[t.Eating=63]="Eating",t[t.LayingDown=64]="LayingDown",t[t.Sneezing=65]="Sneezing",t[t.Trusting=66]="Trusting",t[t.Rolling=67]="Rolling",t[t.Scared=68]="Scared",t[t.InScaffolding=69]="InScaffolding",t[t.OverScaffolding=70]="OverScaffolding",t[t.DescendThroughBlock=71]="DescendThroughBlock",t[t.Blocking=72]="Blocking",t[t.TransitionBlocking=73]="TransitionBlocking",t[t.BlockedUsingShield=74]="BlockedUsingShield",t[t.BlockedUsingDamagedShield=75]="BlockedUsingDamagedShield",t[t.Sleeping=76]="Sleeping",t[t.WantsToWake=77]="WantsToWake",t[t.TradeInterest=78]="TradeInterest",t[t.DoorBreaker=79]="DoorBreaker",t[t.BreakingObstruction=80]="BreakingObstruction",t[t.DoorOpener=81]="DoorOpener",t[t.IsIllagerCaptain=82]="IsIllagerCaptain",t[t.Stunned=83]="Stunned",t[t.Roaring=84]="Roaring",t[t.DelayedAttack=85]="DelayedAttack",t[t.IsAvoidingMobs=86]="IsAvoidingMobs",t[t.IsAvoidingBlock=87]="IsAvoidingBlock",t[t.FacingTargetToRangeAttack=88]="FacingTargetToRangeAttack",t[t.HiddenWhenInvisible=89]="HiddenWhenInvisible",t[t.IsInUi=90]="IsInUi",t[t.Stalking=91]="Stalking",t[t.Emoting=92]="Emoting",t[t.Celebrating=93]="Celebrating",t[t.Admiring=94]="Admiring",t[t.CelebratingSpecial=95]="CelebratingSpecial",t[t.OutOfControl=96]="OutOfControl",t[t.RamAttack=97]="RamAttack",t[t.PlayingDead=98]="PlayingDead",t[t.InAscendableBlock=99]="InAscendableBlock",t[t.OverDescendableBlock=100]="OverDescendableBlock",t[t.Croaking=101]="Croaking",t[t.EatMob=102]="EatMob",t[t.JumpGoalJump=103]="JumpGoalJump",t[t.Emerging=104]="Emerging",t[t.Sniffing=105]="Sniffing",t[t.Digging=106]="Digging",t[t.SonicBoom=107]="SonicBoom",t[t.HasDashCooldown=108]="HasDashCooldown",t[t.PushTowardsClosestSpace=109]="PushTowardsClosestSpace",t[t.Deprecated1=110]="Deprecated1",t[t.Deprecated2=111]="Deprecated2",t[t.Deprecated3=112]="Deprecated3",t[t.Searching=113]="Searching",t[t.Crawling=114]="Crawling",t[t.TimerFlag1=115]="TimerFlag1",t[t.TimerFlag2=116]="TimerFlag2",t[t.TimerFlag3=117]="TimerFlag3",t[t.BodyRotationBlocked=118]="BodyRotationBlocked",t[t.Count=119]="Count",t}(Pg||{});var Z=function(t){return t[t.Byte=0]="Byte",t[t.Short=1]="Short",t[t.Int=2]="Int",t[t.Float=3]="Float",t[t.String=4]="String",t[t.CompoundTag=5]="CompoundTag",t[t.BlockPos=6]="BlockPos",t[t.Long=7]="Long",t[t.Vec3=8]="Vec3",t}(Z||{});var xg=function(t){return t[t.None=-1]="None",t[t.Override=0]="Override",t[t.Contact=1]="Contact",t[t.EntityAttack=2]="EntityAttack",t[t.Projectile=3]="Projectile",t[t.Suffocation=4]="Suffocation",t[t.Fall=5]="Fall",t[t.Fire=6]="Fire",t[t.FireTick=7]="FireTick",t[t.Lava=8]="Lava",t[t.Drowning=9]="Drowning",t[t.BlockExplosion=10]="BlockExplosion",t[t.EntityExplosion=11]="EntityExplosion",t[t.Void=12]="Void",t[t.SelfDestruct=13]="SelfDestruct",t[t.Magic=14]="Magic",t[t.Wither=15]="Wither",t[t.Starve=16]="Starve",t[t.Anvil=17]="Anvil",t[t.Thorns=18]="Thorns",t[t.FallingBlock=19]="FallingBlock",t[t.Piston=20]="Piston",t[t.FlyIntoWall=21]="FlyIntoWall",t[t.Magma=22]="Magma",t[t.Fireworks=23]="Fireworks",t[t.Lightning=24]="Lightning",t[t.Charging=25]="Charging",t[t.Temperature=26]="Temperature",t[t.Freezing=27]="Freezing",t[t.Stalactite=28]="Stalactite",t[t.Stalagmite=29]="Stalagmite",t[t.RamAttack=30]="RamAttack",t[t.SonicBoom=31]="SonicBoom",t[t.Campfire=32]="Campfire",t[t.SoulCampfire=33]="SoulCampfire",t[t.All=34]="All",t}(xg||{});var Ig=function(t){return t[t.Unknown=-1]="Unknown",t[t.EquipArmor=0]="EquipArmor",t[t.Eat=1]="Eat",t[t.Attack=2]="Attack",t[t.Consume=3]="Consume",t[t.Throw=4]="Throw",t[t.Shoot=5]="Shoot",t[t.Place=6]="Place",t[t.FillBottle=7]="FillBottle",t[t.FillBucket=8]="FillBucket",t[t.PourBucket=9]="PourBucket",t[t.UseTool=10]="UseTool",t[t.Interact=11]="Interact",t[t.Retrieved=12]="Retrieved",t[t.Dyed=13]="Dyed",t[t.Traded=14]="Traded",t[t.BrushingCompleted=15]="BrushingCompleted",t[t.OpenedVault=16]="OpenedVault",t[t._Count=17]="_Count",t}(Ig||{});var Rg=function(t){return t[t.SetActions=0]="SetActions",t[t.ExecuteAction=1]="ExecuteAction",t[t.ExecuteClosingCommands=2]="ExecuteClosingCommands",t[t.SetName=3]="SetName",t[t.SetSkin=4]="SetSkin",t[t.SetInteractText=5]="SetInteractText",t[t.ExecuteOpeningCommands=6]="ExecuteOpeningCommands",t}(Rg||{});var kg=function(t){return t[t.Unknown=0]="Unknown",t[t.StartLoadingScreen=1]="StartLoadingScreen",t[t.EndLoadingScreen=2]="EndLoadingScreen",t}(kg||{});var Sg=function(t){return t[t.Positional=0]="Positional",t[t.Rotational=1]="Rotational",t}(Sg||{});var Bg=function(t){return t[t.Add=0]="Add",t[t.Stop=1]="Stop",t}(Bg||{});var yt=function(t){return t[t.ReplacePage=0]="ReplacePage",t[t.AddPage=1]="AddPage",t[t.DeletePage=2]="DeletePage",t[t.SwapPage=3]="SwapPage",t[t.Finalize=4]="Finalize",t}(yt||{});var Og=function(t){return t[t.Camera=0]="Camera",t[t.Player=1]="Player",t}(Og||{});var Cg=function(t){return t[t.Linear=0]="Linear",t[t.Spring=1]="Spring",t[t.InQuad=2]="InQuad",t[t.OutQuad=3]="OutQuad",t[t.InOutQuad=4]="InOutQuad",t[t.InCubic=5]="InCubic",t[t.OutCubic=6]="OutCubic",t[t.InOutCubic=7]="InOutCubic",t[t.InQuart=8]="InQuart",t[t.OutQuart=9]="OutQuart",t[t.InOutQuart=10]="InOutQuart",t[t.InQuint=11]="InQuint",t[t.OutQuint=12]="OutQuint",t[t.InOutQuint=13]="InOutQuint",t[t.InSine=14]="InSine",t[t.OutSine=15]="OutSine",t[t.InOutSine=16]="InOutSine",t[t.InExpo=17]="InExpo",t[t.OutExpo=18]="OutExpo",t[t.InOutExpo=19]="InOutExpo",t[t.InCirc=20]="InCirc",t[t.OutCirc=21]="OutCirc",t[t.InOutCirc=22]="InOutCirc",t[t.InBounce=23]="InBounce",t[t.OutBounce=24]="OutBounce",t[t.InOutBounce=25]="InOutBounce",t[t.InBack=26]="InBack",t[t.OutBack=27]="OutBack",t[t.InOutBack=28]="InOutBack",t[t.InElastic=29]="InElastic",t[t.OutElastic=30]="OutElastic",t[t.InOutElastic=31]="InOutElastic",t}(Cg||{});var M=function(t){return t[t.ShapelessRecipe=0]="ShapelessRecipe",t[t.ShapedRecipe=1]="ShapedRecipe",t[t.FurnaceRecipe=2]="FurnaceRecipe",t[t.FurnaceAuxRecipe=3]="FurnaceAuxRecipe",t[t.MultiRecipe=4]="MultiRecipe",t[t.UserDataShapelessRecipe=5]="UserDataShapelessRecipe",t[t.ShapelessChemistryRecipe=6]="ShapelessChemistryRecipe",t[t.ShapedChemistryRecipe=7]="ShapedChemistryRecipe",t[t.SmithingTransformRecipe=8]="SmithingTransformRecipe",t[t.SmithingTrimRecipe=9]="SmithingTrimRecipe",t[t.COUNT=10]="COUNT",t}(M||{});var tt=function(t){return t[t.Invalid=0]="Invalid",t[t.Default=1]="Default",t[t.Molang=2]="Molang",t[t.ItemTag=3]="ItemTag",t[t.Deferred=4]="Deferred",t[t.ComplexAlias=5]="ComplexAlias",t}(tt||{});var Fn=function(t){return t[t.None=0]="None",t[t.AlwaysUnlocked=1]="AlwaysUnlocked",t[t.PlayerInWater=2]="PlayerInWater",t[t.PlayerHasManyItems=3]="PlayerHasManyItems",t}(Fn||{});var Vg=function(t){return t[t.FurnanceTickCount=0]="FurnanceTickCount",t[t.FurnaceLitTime=1]="FurnaceLitTime",t[t.FurnaceLitDuration=2]="FurnaceLitDuration",t[t.FurnaceStoredXp=3]="FurnaceStoredXp",t[t.FurnaceFuelAux=4]="FurnaceFuelAux",t[t.BrewTime=5]="BrewTime",t[t.BrewFuelAmount=6]="BrewFuelAmount",t[t.BrewFuelTotal=7]="BrewFuelTotal",t}(Vg||{});var ke=function(t){return t[t.Invalid=0]="Invalid",t[t.Player=1]="Player",t[t.Entity=2]="Entity",t[t.FakePlayer=3]="FakePlayer",t}(ke||{});var Tn=function(t){return t[t.Change=0]="Change",t[t.Remove=1]="Remove",t}(Tn||{});var jg=function(t){return t[t.Legacy=0]="Legacy",t[t.Overworld=1]="Overworld",t[t.Flat=2]="Flat",t[t.Nether=3]="Nether",t[t.TheEnd=4]="TheEnd",t[t.Void=5]="Void",t}(jg||{});var _g=function(t){return t[t.Unknown=0]="Unknown",t[t.PlayerInput=1]="PlayerInput",t[t.SimulationTick=2]="SimulationTick",t}(_g||{});var X=function(t){return t[t.Ascend=0]="Ascend",t[t.Descend=1]="Descend",t[t.NorthJump_DEPRECATED=2]="NorthJump_DEPRECATED",t[t.JumpDown=3]="JumpDown",t[t.SprintDown=4]="SprintDown",t[t.ChangeHeight=5]="ChangeHeight",t[t.Jumping=6]="Jumping",t[t.AutoJumpingInWater=7]="AutoJumpingInWater",t[t.Sneaking=8]="Sneaking",t[t.SneakDown=9]="SneakDown",t[t.Up=10]="Up",t[t.Down=11]="Down",t[t.Left=12]="Left",t[t.Right=13]="Right",t[t.UpLeft=14]="UpLeft",t[t.UpRight=15]="UpRight",t[t.WantUp=16]="WantUp",t[t.WantDown=17]="WantDown",t[t.WantDownSlow=18]="WantDownSlow",t[t.WantUpSlow=19]="WantUpSlow",t[t.Sprinting=20]="Sprinting",t[t.AscendBlock=21]="AscendBlock",t[t.DescendBlock=22]="DescendBlock",t[t.SneakToggleDown=23]="SneakToggleDown",t[t.PersistSneak=24]="PersistSneak",t[t.StartSprinting=25]="StartSprinting",t[t.StopSprinting=26]="StopSprinting",t[t.StartSneaking=27]="StartSneaking",t[t.StopSneaking=28]="StopSneaking",t[t.StartSwimming=29]="StartSwimming",t[t.StopSwimming=30]="StopSwimming",t[t.StartJumping=31]="StartJumping",t[t.StartGliding=32]="StartGliding",t[t.StopGliding=33]="StopGliding",t[t.PerformItemInteraction=34]="PerformItemInteraction",t[t.PerformBlockActions=35]="PerformBlockActions",t[t.PerformItemStackRequest=36]="PerformItemStackRequest",t[t.HandledTeleport=37]="HandledTeleport",t[t.Emoting=38]="Emoting",t[t.MissedSwing=39]="MissedSwing",t[t.StartCrawling=40]="StartCrawling",t[t.StopCrawling=41]="StopCrawling",t[t.StartFlying=42]="StartFlying",t[t.StopFlying=43]="StopFlying",t[t.ClientAckServerData=44]="ClientAckServerData",t[t.IsInClientPredictedVehicle=45]="IsInClientPredictedVehicle",t[t.PaddlingLeft=46]="PaddlingLeft",t[t.PaddlingRight=47]="PaddlingRight",t[t.BlockBreakingDelayEnabled=48]="BlockBreakingDelayEnabled",t[t.HorizontalCollision=49]="HorizontalCollision",t[t.VerticalCollision=50]="VerticalCollision",t[t.DownLeft=51]="DownLeft",t[t.DownRight=52]="DownRight",t[t.StartUsingItem=53]="StartUsingItem",t[t.IsCameraRelativeMovementEnabled=54]="IsCameraRelativeMovementEnabled",t[t.IsRotControlledByMoveDirection=55]="IsRotControlledByMoveDirection",t[t.StartSpinAttack=56]="StartSpinAttack",t[t.StopSpinAttack=57]="StopSpinAttack",t[t.IsHotbarOnlyTouch=58]="IsHotbarOnlyTouch",t[t.JumpReleasedRaw=59]="JumpReleasedRaw",t[t.JumpPressedRaw=60]="JumpPressedRaw",t[t.JumpCurrentRaw=61]="JumpCurrentRaw",t[t.SneakReleasedRaw=62]="SneakReleasedRaw",t[t.SneakPressedRaw=63]="SneakPressedRaw",t[t.SneakCurrentRaw=64]="SneakCurrentRaw",t}(X||{});var Ug=function(t){return t[t.Normal=0]="Normal",t[t.Teaser=1]="Teaser",t[t.Screen=2]="Screen",t[t.Viewer=3]="Viewer",t[t.Reality=4]="Reality",t[t.Placement=5]="Placement",t[t.LivingRoom=6]="LivingRoom",t[t.ExitLevel=7]="ExitLevel",t[t.ExitLevelLivingRoom=8]="ExitLevelLivingRoom",t[t.NumberModes=9]="NumberModes",t}(Ug||{});var Dg=function(t){return t[t.Unknown=0]="Unknown",t[t.Mouse=1]="Mouse",t[t.Touch=2]="Touch",t[t.GamePad=3]="GamePad",t[t.MotionController=4]="MotionController",t}(Dg||{});var Ng=function(t){return t[t.Touch=0]="Touch",t[t.Crosshair=1]="Crosshair",t[t.Classic=2]="Classic",t}(Ng||{});var Zg=function(t){return t[t.Sound=0]="Sound",t[t.ChangeState=1]="ChangeState",t}(Zg||{});var Mg=function(t){return t[t.None=0]="None",t[t.Camera=2]="Camera",t[t.Movement=4]="Movement",t}(Mg||{});var zg=function(t){return t[t.Remove=0]="Remove",t[t.Rider=1]="Rider",t[t.Passenger=2]="Passenger",t}(zg||{});var Fg=function(t){return t[t.Initial=1]="Initial",t[t.SupportTargetModuleUuid=2]="SupportTargetModuleUuid",t[t.SupportTargetSelection=3]="SupportTargetSelection",t[t.SupportPasscode=4]="SupportPasscode",t}(Fg||{});var Tg=function(t){return t[t.HasX=1]="HasX",t[t.HasY=2]="HasY",t[t.HasZ=4]="HasZ",t[t.HasRotationX=8]="HasRotationX",t[t.HasRotationY=16]="HasRotationY",t[t.HasRotationZ=32]="HasRotationZ",t[t.OnGround=64]="OnGround",t[t.Teleport=128]="Teleport",t[t.ForceMove=256]="ForceMove",t[t.All=63]="All",t}(Tg||{});var x=function(t){return t[t.AchievementAwarded=0]="AchievementAwarded",t[t.EntityInteract=1]="EntityInteract",t[t.PortalBuilt=2]="PortalBuilt",t[t.PortalUsed=3]="PortalUsed",t[t.MobKilled=4]="MobKilled",t[t.CauldronUsed=5]="CauldronUsed",t[t.PlayerDeath=6]="PlayerDeath",t[t.BossKilled=7]="BossKilled",t[t.AgentCommand=8]="AgentCommand",t[t.AgentCreated=9]="AgentCreated",t[t.BannerPatternRemoved=10]="BannerPatternRemoved",t[t.CommandExecuted=11]="CommandExecuted",t[t.FishBucketed=12]="FishBucketed",t[t.MobBorn=13]="MobBorn",t[t.PetDied=14]="PetDied",t[t.CauldronBlockUsed=15]="CauldronBlockUsed",t[t.ComposterBlockUsed=16]="ComposterBlockUsed",t[t.BellBlockUsed=17]="BellBlockUsed",t[t.ActorDefinition=18]="ActorDefinition",t[t.RaidUpdate=19]="RaidUpdate",t[t.PlayerMovementAnomaly=20]="PlayerMovementAnomaly",t[t.PlayerMovementCorrected=21]="PlayerMovementCorrected",t[t.HoneyHarvested=22]="HoneyHarvested",t[t.TargetBlockHit=23]="TargetBlockHit",t[t.PiglinBarter=24]="PiglinBarter",t[t.WaxedOrUnwaxedCopper=25]="WaxedOrUnwaxedCopper",t[t.CodeBuilderRuntimeAction=26]="CodeBuilderRuntimeAction",t[t.CodeBuilderScoreboard=27]="CodeBuilderScoreboard",t[t.StriderRiddenInLavaInOverworld=28]="StriderRiddenInLavaInOverworld",t[t.SneakCloseToSculkSensor=29]="SneakCloseToSculkSensor",t[t.CarefulRestoration=30]="CarefulRestoration",t[t.ItemUsed=31]="ItemUsed",t}(x||{});var qn=function(t){return t[t.Player=0]="Player",t[t.World=1]="World",t}(qn||{});var Hn=function(t){return t[t.LegacyClientAuthoritativeV1=0]="LegacyClientAuthoritativeV1",t[t.ClientAuthoritativeV2=1]="ClientAuthoritativeV2",t[t.ServerAuthoritativeV3=2]="ServerAuthoritativeV3",t}(Hn||{});var qg=function(t){return t[t.Undetermined=0]="Undetermined",t[t.SuperLow=1]="SuperLow",t[t.Low=2]="Low",t[t.Mid=3]="Mid",t[t.Hight=4]="Hight",t[t.SuperHigh=5]="SuperHigh",t}(qg||{});var Hg=function(t){return t[t.Build=1]="Build",t[t.Mine=2]="Mine",t[t.DoorsAndSwitches=4]="DoorsAndSwitches",t[t.OpenContainers=8]="OpenContainers",t[t.AttackPlayers=16]="AttackPlayers",t[t.AttackMobs=32]="AttackMobs",t[t.OperatorCommands=64]="OperatorCommands",t[t.Teleport=128]="Teleport",t}(Hg||{});var Wg=function(t){return t[t.Impulse=0]="Impulse",t[t.Repeating=1]="Repeating",t[t.Chain=2]="Chain",t}(Wg||{});var Wn=function(t){return t[t.Player=0]="Player",t[t.Vehicle=1]="Vehicle",t}(Wn||{});var Gn=function(t){return t[t.GlideBoost=0]="GlideBoost",t}(Gn||{});var Gg=function(t){return t[t.Entity=0]="Entity",t[t.BlockEntity=1]="BlockEntity",t[t.Other=2]="Other",t}(Gg||{});var Ag=function(t){return t[t.MarkerWhite=0]="MarkerWhite",t[t.MarkerGreen=1]="MarkerGreen",t[t.MarkerRed=2]="MarkerRed",t[t.MarkerBlue=3]="MarkerBlue",t[t.XWhite=4]="XWhite",t[t.TriangleRed=5]="TriangleRed",t[t.SquareWhite=6]="SquareWhite",t[t.MarkerSign=7]="MarkerSign",t[t.MarkerPink=8]="MarkerPink",t[t.MarkerOrange=9]="MarkerOrange",t[t.MarkerYellow=10]="MarkerYellow",t[t.MarkerTeal=11]="MarkerTeal",t[t.TriangleGreen=12]="TriangleGreen",t[t.SmallSquareWhite=13]="SmallSquareWhite",t[t.Mansion=14]="Mansion",t[t.Monument=15]="Monument",t[t.NoDraw=16]="NoDraw",t[t.VillageDesert=17]="VillageDesert",t[t.VillagePlains=18]="VillagePlains",t[t.VillageSavanna=19]="VillageSavanna",t[t.VillageSnowy=20]="VillageSnowy",t[t.VillageTaiga=21]="VillageTaiga",t[t.JungleTemple=22]="JungleTemple",t[t.WitchHut=23]="WitchHut",t[t.TrialChambers=24]="TrialChambers",t[t.Count=25]="Count",t[t.Player=0]="Player",t[t.PlayerOffMap=6]="PlayerOffMap",t[t.PlayerOffLimits=13]="PlayerOffLimits",t[t.PlayerHidden=16]="PlayerHidden",t[t.ItemFrame=1]="ItemFrame",t}(Ag||{});var Jg=function(t){return t[t.Failure=0]="Failure",t[t.Success=1]="Success",t}(Jg||{});var Yg=function(t){return t.CommandBlockOutput="commandBlockOutput",t.DoDaylightCycle="doDayLightCycle",t.DoEntityDrops="doEntityDrops",t.DoFireTick="doFireTick",t.RecipesUnlock="recipesUnlock",t.DoLimitedCrafting="doLimitedCrafting",t.DoMobLoot="doMobLoot",t.DoMobSpawning="doMobSpawning",t.DoTileDrops="doTileDrops",t.DoWeatherCycle="doWeatherCycle",t.DrowningDamage="drowningDamage",t.FallDamage="fallDamage",t.FireDamage="fireDamage",t.KeepInventory="keepInventory",t.MobGriefing="mobGriefing",t.PvP="pvp",t.ShowCoordinates="showCoordinates",t.ShowDaysPlayed="showDaysPlayed",t.NaturalRegeneration="naturalRegeneration",t.TNTExplodes="tntExplodes",t.SendCommandFeedback="sendCommandFeedback",t.DoInsomnia="doInsomnia",t.CommandBlocksEnabled="commandBlocksEnabled",t.DoImmediateRespawn="doImmediateRespawn",t.ShowDeathMessages="showDeathMessages",t.ShowTags="showTags",t.FreezeDamage="freezeDamage",t.RespawnBlocksExplode="respawnBlocksExplode",t.ShowBorderEffect="showBorderEffect",t.ShowRecipeMessages="showRecipeMessages",t.ProjectilesCanBreakBlocks="projectilesCanBreakBlocks",t.TNTExplosionDropDecay="tntExplosionDropDecay",t}(Yg||{});var Kg=function(t){return t.AlphaTest="alpha_test",t.AlphaTestSingleSided="alpha_test_single_sided",t.Blend="blend",t.DoubleSided="double_sided",t.Opaque="opaque",t}(Kg||{});import{Endianness as _a,Float32 as Ua,VarLong as $b,VarString as Xb,ZigZong as Lb}from"@serenityjs/binarystream";import{Serialize as dt,Proto as Eb}from"@serenityjs/raknet";import{Endianness as An}from"@serenityjs/binarystream";import{DataType as Qg}from"@serenityjs/raknet";var Jn=class of extends Qg{static{s(this,"LoginTokens")}client;identity;constructor(e,r){super(),this.client=e,this.identity=r}static read(e){e.readVarInt();let r=e.readString32(An.Little),o=e.readString32(An.Little);return new of(o,r)}static write(e,r){e.writeVarInt(r.identity.length+r.client.length+8),e.writeString32(r.identity,An.Little),e.writeString32(r.client,An.Little)}};import{Endianness as Yn}from"@serenityjs/binarystream";import{DataType as $g}from"@serenityjs/raknet";var nC=class nf extends $g{static{s(this,"BehaviorPackInfo")}contentIdentity;contentKey;hasScripts;size;subpackName;uuid;version;addonPack;constructor(e,r,o,n,i,a,c,d){super(),this.contentIdentity=e,this.contentKey=r,this.hasScripts=o,this.size=n,this.subpackName=i,this.uuid=a,this.version=c,this.addonPack=d}static read(e){let r=[],o=e.readInt16(Yn.Little);for(let n=0;n<o;n++){let i=e.readVarString(),a=e.readVarString(),c=e.readUint32(Yn.Little),d=e.readVarString(),u=e.readVarString(),w=e.readVarString(),P=e.readBool(),R=e.readBool();r.push(new nf(w,d,P,c,u,i,a,R))}return r}static write(e,r){e.writeInt16(r.length,Yn.Little);for(let o of r)e.writeVarString(o.uuid),e.writeVarString(o.version),e.writeUint32(o.size,Yn.Little),e.writeVarString(o.contentKey),e.writeVarString(o.subpackName),e.writeVarString(o.contentIdentity),e.writeBool(o.hasScripts),e.writeBool(o.addonPack)}};import{Endianness as Kn}from"@serenityjs/binarystream";import{DataType as Xg}from"@serenityjs/raknet";var af=class extends Xg{static{s(this,"TexturePackInfo")}contentIdentity;contentKey;hasScripts;rtxEnabled;size;subpackName;uuid;version;addonPack;cdnLink;constructor(e,r,o,n,i,a,c,d,u,w){super(),this.contentIdentity=e,this.contentKey=r,this.hasScripts=o,this.rtxEnabled=n,this.size=i,this.subpackName=a,this.uuid=c,this.version=d,this.addonPack=u,this.cdnLink=w}static read(e){let r=[],o=e.readInt16(Kn.Little);for(let n=0;n<o;n++){let i=e.readUuid(),a=e.readVarString(),c=e.readUint64(Kn.Little),d=e.readVarString(),u=e.readVarString(),w=e.readVarString(),P=e.readBool(),R=e.readBool(),O=e.readBool(),S=e.readVarString();r.push(new this(w,d,P,O,c,u,i,a,R,S))}return r}static write(e,r){e.writeInt16(r.length,Kn.Little);for(let o of r)e.writeUuid(o.uuid),e.writeVarString(o.version),e.writeUint64(o.size,Kn.Little),e.writeVarString(o.contentKey),e.writeVarString(o.subpackName),e.writeVarString(o.contentIdentity),e.writeBool(o.hasScripts),e.writeBool(o.rtxEnabled),e.writeBool(o.addonPack),e.writeVarString(o.cdnLink)}};import{DataType as Lg}from"@serenityjs/raknet";var uC=class sf extends Lg{static{s(this,"PackLinks")}id;url;constructor(e,r){super(),this.id=e,this.url=r}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readVarString(),a=e.readVarString();r.push(new sf(i,a))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeVarString(o.id),e.writeVarString(o.url)}};import{Endianness as cf}from"@serenityjs/binarystream";import{DataType as Eg}from"@serenityjs/raknet";var pf=class extends Eg{static{s(this,"ResourcePackIds")}static read(e){let r=[],o=e.readInt16(cf.Little);for(let n=0;n<o;n++){let i=e.readVarString();r.push(i)}return r}static write(e,r){e.writeInt16(r.length,cf.Little);for(let o of r)e.writeVarString(o)}};import{DataType as vg}from"@serenityjs/raknet";var Xs=class ff extends vg{static{s(this,"ResourceIdVersions")}name;uuid;version;constructor(e,r,o){super(),this.name=e,this.uuid=r,this.version=o}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readVarString(),a=e.readVarString(),c=e.readVarString();r.push(new ff(c,i,a))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeVarString(o.uuid),e.writeVarString(o.version),e.writeVarString(o.name)}};import{Endianness as df}from"@serenityjs/binarystream";import{DataType as ty}from"@serenityjs/raknet";var Qn=class lf extends ty{static{s(this,"Experiments")}enabled;name;constructor(e,r){super(),this.name=e,this.enabled=r}static read(e){let r=[],o=e.readInt32(df.Little);for(let n=0;n<o;n++){let i=e.readVarString(),a=e.readBool();r.push(new lf(i,a))}return r}static write(e,r){e.writeInt32(r.length,df.Little);for(let o of r)e.writeVarString(o.name),e.writeBool(o.enabled)}};import{Endianness as Hr}from"@serenityjs/binarystream";import{DataType as ey}from"@serenityjs/raknet";var l=class L extends ey{static{s(this,"Vector3f")}x;y;z;constructor(e,r,o){super(),this.x=e,this.y=r,this.z=o}set(e){this.x=e.x,this.y=e.y,this.z=e.z}round(){let e=Math.round(this.x),r=Math.round(this.y),o=Math.round(this.z);return new L(e,r,o)}ceil(){let e=Math.ceil(this.x),r=Math.ceil(this.y),o=Math.ceil(this.z);return new L(e,r,o)}floor(){let e=Math.floor(this.x),r=Math.floor(this.y),o=Math.floor(this.z);return new L(e,r,o)}add(e){return new L(this.x+e.x,this.y+e.y,this.z+e.z)}subtract(e){return new L(this.x-e.x,this.y-e.y,this.z-e.z)}multiply(e){return new L(this.x*e,this.y*e,this.z*e)}divide(e){return new L(this.x/e,this.y/e,this.z/e)}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}cross(e){let r=this.y*e.z-this.z*e.y,o=this.z*e.x-this.x*e.z,n=this.x*e.y-this.y*e.x;return new L(r,o,n)}length(){return Math.hypot(this.x,this.y,this.z)}lengthSqrt(){return this.x*this.x+this.y*this.y+this.z*this.z}normalize(){let e=this.length();return new L(this.x/e,this.y/e,this.z/e)}lerp(e,r){return new L(this.x+(e.x-this.x)*r,this.y+(e.y-this.y)*r,this.z+(e.z-this.z)*r)}slerp(e,r){let o=this.dot(e),n=Math.acos(o),i=Math.sin(n),a=Math.sin((1-r)*n)/i,c=Math.sin(r*n)/i;return this.multiply(a).add(e.multiply(c))}equals(e){return this.x===e.x&&this.y===e.y&&this.z===e.z}distance(e){return Math.hypot(this.x-e.x,this.y-e.y,this.z-e.z)}distanceManhattan(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}absolute(){return new L(Math.abs(this.x),Math.abs(this.y),Math.abs(this.z))}isZero(){return Math.abs(this.x)<Number.EPSILON&&Math.abs(this.y)<Number.EPSILON&&Math.abs(this.z)<Number.EPSILON}clone(){return new L(this.x,this.y,this.z)}static fromArray(e){return new L(e[0],e[1],e[2])}static read(e){let r=e.readFloat32(Hr.Little),o=e.readFloat32(Hr.Little),n=e.readFloat32(Hr.Little);return new L(r,o,n)}static write(e,r){e.writeFloat32(r.x,Hr.Little),e.writeFloat32(r.y,Hr.Little),e.writeFloat32(r.z,Hr.Little)}};import{Endianness as $n}from"@serenityjs/binarystream";import{DataType as ry}from"@serenityjs/raknet";var V=class mf extends ry{static{s(this,"Vector2f")}x;y;constructor(e,r){super(),this.x=e,this.y=r}static read(e){let r=e.readFloat32($n.Little),o=e.readFloat32($n.Little);return new mf(r,o)}static write(e,r){e.writeFloat32(r.x,$n.Little),e.writeFloat32(r.y,$n.Little)}};import{DataType as iy}from"@serenityjs/raknet";import{BinaryStream as uf}from"@serenityjs/binarystream";var b=class E extends iy{static{s(this,"BlockPosition")}x;y;z;constructor(e,r,o){super(),this.x=e,this.y=r,this.z=o}round(){let e=Math.round(this.x),r=Math.round(this.y),o=Math.round(this.z);return new E(e,r,o)}ceil(){let e=Math.ceil(this.x),r=Math.ceil(this.y),o=Math.ceil(this.z);return new E(e,r,o)}floor(){let e=Math.floor(this.x),r=Math.floor(this.y),o=Math.floor(this.z);return new E(e,r,o)}add(e){return new E(this.x+e.x,this.y+e.y,this.z+e.z)}subtract(e){return new E(this.x-e.x,this.y-e.y,this.z-e.z)}multiply(e){return new E(this.x*e,this.y*e,this.z*e)}divide(e){return new E(this.x/e,this.y/e,this.z/e)}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}cross(e){let r=this.y*e.z-this.z*e.y,o=this.z*e.x-this.x*e.z,n=this.x*e.y-this.y*e.x;return new E(r,o,n)}length(){return Math.hypot(this.x,this.y,this.z)}lengthSqrt(){return this.x*this.x+this.y*this.y+this.z*this.z}normalize(){let e=this.length();return new E(this.x/e,this.y/e,this.z/e)}lerp(e,r){return new E(this.x+(e.x-this.x)*r,this.y+(e.y-this.y)*r,this.z+(e.z-this.z)*r)}slerp(e,r){let o=this.dot(e),n=Math.acos(o),i=Math.sin(n),a=Math.sin((1-r)*n)/i,c=Math.sin(r*n)/i;return this.multiply(a).add(e.multiply(c))}equals(e){return this.x===e.x&&this.y===e.y&&this.z===e.z}distance(e){return Math.hypot(this.x-e.x,this.y-e.y,this.z-e.z)}distanceManhattan(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}absolute(){return new E(Math.abs(this.x),Math.abs(this.y),Math.abs(this.z))}static read(e){let r=e.readZigZag(),o=e.readVarInt(),n=e.readZigZag();return o=4294967231>=o?o:o-4294967296,new E(r,o,n)}static write(e,r){let o=r.y<0?4294967296+r.y:r.y;e.writeZigZag(r.x),e.writeVarInt(o),e.writeZigZag(r.z)}static fromVector3f(e){return new E(Math.floor(e.x),Math.floor(e.y),Math.floor(e.z))}static from(e){return new E(Math.floor(e.x),Math.floor(e.y),Math.floor(e.z))}static toVector3f(e){return new l(e.x,e.y,e.z)}static hash(e){let r=new uf;this.write(r,e);let o=0n;for(let n of r.getBuffer())o=o<<8n|BigInt(n);return o}static unhash(e){let r=[];for(;e>0;)r.push(Number(e&0xffn)),e>>=8n;let o=Buffer.from(r.reverse()),n=new uf(o);return this.read(n)}};import{Endianness as hf}from"@serenityjs/binarystream";import{DataType as oy}from"@serenityjs/raknet";var Wr=class gf extends oy{static{s(this,"GameRules")}editable;name;type;value;constructor(e,r,o,n){super(),this.editable=e,this.name=r,this.type=o,this.value=n}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readVarString(),a=e.readBool(),c=e.readVarInt(),d;switch(c){default:throw new Error(`Reading unknown GameRuleType: ${c}`);case Re.Bool:{d=e.readBool();break}case Re.Int:{d=e.readZigZag();break}case Re.Float:{d=e.readFloat32(hf.Little);break}}r.push(new gf(a,i,c,d))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)switch(e.writeVarString(o.name),e.writeBool(o.editable),e.writeVarInt(o.type),o.type){default:throw new Error(`Writing unknown GameRuleType: ${o.type}`);case Re.Bool:{e.writeBool(o.value);break}case Re.Int:{e.writeZigZag(o.value);break}case Re.Float:{e.writeFloat32(o.value,hf.Little);break}}}};import{DataType as ny}from"@serenityjs/raknet";import{CompoundTag as yf}from"@serenityjs/nbt";var wf=class extends ny{static{s(this,"NetworkBlockTypeDefinition")}identifier;nbt;constructor(e,r){super(),this.identifier=e,this.nbt=r}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readVarString(),a=yf.read(e,!0);r.push(new this(i,a))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeVarString(o.identifier),yf.write(e,o.nbt,!0)}};import{Endianness as bf}from"@serenityjs/binarystream";import{DataType as ay}from"@serenityjs/raknet";var Pf=class xf extends ay{static{s(this,"ItemData")}componentBased;name;networkId;constructor(e,r,o){super(),this.componentBased=e,this.name=r,this.networkId=o}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readVarString(),a=e.readInt16(bf.Little),c=e.readBool();r.push(new xf(c,i,a))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeVarString(o.name),e.writeInt16(o.networkId,bf.Little),e.writeBool(o.componentBased)}};import{DataType as sy}from"@serenityjs/raknet";var If=class Rf extends sy{static{s(this,"TeleportCause")}cause;sourceEntityType;constructor(e,r){super(),this.cause=e,this.sourceEntityType=r}static read(e,r,o){if(o===Dn.Teleport){let n=e.readInt32(r),i=e.readInt32(r);return new Rf(n,i)}else return null}static write(e,r,o,n){n===Dn.Teleport&&(e.writeInt32(r.cause,o),e.writeInt32(r.sourceEntityType,o))}};import{DataType as my}from"@serenityjs/raknet";import{Endianness as Vf}from"@serenityjs/binarystream";import{DataType as ly}from"@serenityjs/raknet";import{Endianness as Ar}from"@serenityjs/binarystream";import{DataType as cy}from"@serenityjs/raknet";import{Endianness as Xn}from"@serenityjs/binarystream";var ct=class kf extends cy{static{s(this,"SkinImage")}width;height;data;constructor(e,r,o){super(),this.width=e,this.height=r,this.data=o}static read(e){let r=e.readUint32(Xn.Little),o=e.readUint32(Xn.Little),n=e.readVarInt(),i=e.readBuffer(n);return new kf(r,o,i)}static write(e,r){e.writeUint32(r.width,Xn.Little),e.writeUint32(r.height,Xn.Little),e.writeVarInt(r.data.length),e.writeBuffer(r.data)}};import{DataType as py}from"@serenityjs/raknet";import{Endianness as Gr}from"@serenityjs/binarystream";var Ln=class Sf extends py{static{s(this,"SkinAnimation")}image;type;frames;expression;constructor(e,r,o,n){super(),this.image=e,this.type=r,this.frames=o,this.expression=n}static read(e){let r=ct.read(e),o=e.readUint32(Gr.Little),n=e.readFloat32(Gr.Little),i=e.readUint32(Gr.Little);return new Sf(r,o,n,i)}static write(e,r){ct.write(e,r.image),e.writeUint32(r.type,Gr.Little),e.writeFloat32(r.frames,Gr.Little),e.writeUint32(r.expression,Gr.Little)}};import{DataType as fy}from"@serenityjs/raknet";var En=class Bf extends fy{static{s(this,"SkinPersonaPiece")}identifier;type;packIdentifier;isDefault;productIdentifier;constructor(e,r,o,n,i){super(),this.identifier=e,this.type=r,this.packIdentifier=o,this.isDefault=n,this.productIdentifier=i}static read(e){let r=e.readVarString(),o=e.readVarString(),n=e.readVarString(),i=e.readBool(),a=e.readVarString();return new Bf(r,o,n,i,a)}static write(e,r){e.writeVarString(r.identifier),e.writeVarString(r.type),e.writeVarString(r.packIdentifier),e.writeBool(r.isDefault),e.writeVarString(r.productIdentifier)}};import{DataType as dy}from"@serenityjs/raknet";import{Endianness as Of}from"@serenityjs/binarystream";var vn=class Cf extends dy{static{s(this,"SkinPersonaTintPiece")}type;colors;constructor(e,r){super(),this.type=e,this.colors=r}static read(e){let r=e.readVarString(),o=e.readUint32(Of.Little),n=[];for(let i=0;i<o;i++)n.push(e.readVarString());return new Cf(r,n)}static write(e,r){e.writeVarString(r.type),e.writeUint32(r.colors.length,Of.Little);for(let o of r.colors)e.writeVarString(o)}};var ir=class Ls extends ly{static{s(this,"SerializedSkin")}identifier;playFabIdentifier;resourcePatch;skinImage;animations;capeImage;geometryData;geometryVersion;animationData;capeIdentifier;fullIdentifier;armSize;skinColor;personaPieces;tintPieces;isPremium;isPersona;isPersonaCapeOnClassic;isPrimaryUser;overridingPlayerAppearance;constructor(e,r,o,n,i,a,c,d,u,w,P,R,O,S,F,ht,be,Pe,xe,eo){super(),this.identifier=e,this.playFabIdentifier=r,this.resourcePatch=o,this.skinImage=n,this.animations=i,this.capeImage=a,this.geometryData=c,this.geometryVersion=d,this.animationData=u,this.capeIdentifier=w,this.fullIdentifier=P,this.armSize=R,this.skinColor=O,this.personaPieces=S,this.tintPieces=F,this.isPremium=ht,this.isPersona=be,this.isPersonaCapeOnClassic=Pe,this.isPrimaryUser=xe,this.overridingPlayerAppearance=eo}static read(e){let r=e.readVarString(),o=e.readVarString(),n=e.readVarString(),i=ct.read(e),a=e.readUint32(Ar.Little),c=[];for(let Ie=0;Ie<a;Ie++)c.push(Ln.read(e));let d=ct.read(e),u=e.readVarString(),w=e.readVarString(),P=e.readVarString(),R=e.readVarString(),O=e.readVarString(),S=e.readVarString(),F=e.readVarString(),ht=e.readUint32(Ar.Little),be=[];for(let Ie=0;Ie<ht;Ie++)be.push(En.read(e));let Pe=e.readUint32(Ar.Little),xe=[];for(let Ie=0;Ie<Pe;Ie++)xe.push(vn.read(e));let eo=e.readBool(),Qs=e.readBool(),$s=e.readBool(),Sh=e.readBool(),Bh=e.readBool();return new Ls(r,o,n,i,c,d,u,w,P,R,O,S,F,be,xe,eo,Qs,$s,Sh,Bh)}static write(e,r){e.writeVarString(r.identifier),e.writeVarString(r.playFabIdentifier),e.writeVarString(r.resourcePatch),ct.write(e,r.skinImage),e.writeUint32(r.animations.length,Ar.Little);for(let o of r.animations)Ln.write(e,o);ct.write(e,r.capeImage),e.writeVarString(r.geometryData),e.writeVarString(r.geometryVersion),e.writeVarString(r.animationData),e.writeVarString(r.capeIdentifier),e.writeVarString(r.fullIdentifier),e.writeVarString(r.armSize),e.writeVarString(r.skinColor),e.writeUint32(r.personaPieces.length,Ar.Little);for(let o of r.personaPieces)En.write(e,o);e.writeUint32(r.tintPieces.length,Ar.Little);for(let o of r.tintPieces)vn.write(e,o);e.writeBool(r.isPremium),e.writeBool(r.isPersona),e.writeBool(r.isPersonaCapeOnClassic),e.writeBool(r.isPrimaryUser),e.writeBool(r.overridingPlayerAppearance)}static from(e){return{identifier:e.SkinId,playFabIdentifier:e.PlayFabId,resourcePatch:Buffer.from(e.SkinResourcePatch,"base64").toString("utf8"),skinImage:new ct(e.SkinImageWidth,e.SkinImageHeight,Buffer.from(e.SkinData,"base64")),animations:e.AnimatedImageData.map(r=>new Ln(new ct(r.ImageWidth,r.ImageHeight,Buffer.from(r.Image,"base64")),r.Frames,r.AnimationExpression,r.Type)),capeImage:new ct(e.CapeImageWidth,e.CapeImageHeight,Buffer.from(e.CapeData,"base64")),geometryData:Buffer.from(e.SkinGeometryData,"base64").toString("utf8"),geometryVersion:Buffer.from(e.SkinGeometryDataEngineVersion,"base64").toString("utf8"),animationData:e.SkinAnimationData,capeIdentifier:e.CapeId,fullIdentifier:e.SkinId+e.CapeId,armSize:e.ArmSize,skinColor:e.SkinColor,personaPieces:e.PersonaPieces.map(r=>new En(r.PieceId,r.PieceType,r.PackId,r.IsDefault,r.ProductId)),tintPieces:e.PieceTintColors.map(r=>new vn(r.PieceType,r.Colors)),isPremium:e.PremiumSkin,isPersona:e.PersonaSkin,isPersonaCapeOnClassic:e.CapeOnClassicSkin,isPrimaryUser:e.TrustedSkin,overridingPlayerAppearance:e.OverrideSkin}}static empty(){return new Ls("","","",new ct(0,0,Buffer.alloc(0)),[],new ct(0,0,Buffer.alloc(0)),"","","","","","","",[],[],!1,!1,!1,!1,!1)}};var jf=class Es extends my{static{s(this,"PlayerListRecord")}uuid;uniqueId;username;xuid;platformChatIdentifier;platformBuild;skin;isTeacher;isHost;isVisitor;constructor(e,r,o,n,i,a,c,d,u,w){super(),this.uuid=e,this.uniqueId=r??null,this.username=o??null,this.xuid=n??null,this.platformChatIdentifier=i??null,this.platformBuild=a??null,this.skin=c??null,this.isTeacher=d??null,this.isHost=u??null,this.isVisitor=w??null}static read(e,r,o){if(o===Nn.Remove){let a=e.readVarInt(),c=[];for(let d=0;d<a;d++)c.push(new Es(e.readUuid()));return c}let n=e.readVarInt(),i=[];for(let a=0;a<n;a++){let c=e.readUuid(),d=e.readZigZong(),u=e.readVarString(),w=e.readVarString(),P=e.readVarString(),R=e.readInt32(Vf.Little),O=ir.read(e),S=e.readBool(),F=e.readBool(),ht=e.readBool();i.push(new Es(c,d,u,w,P,R,O,S,F,ht))}for(let a=0;a<n;a++)e.readBool();return i}static write(e,r,o,n){if(e.writeVarInt(r.length),n===Nn.Remove){for(let i of r)e.writeUuid(i.uuid);return}for(let i of r)e.writeUuid(i.uuid),e.writeZigZong(i.uniqueId),e.writeVarString(i.username),e.writeVarString(i.xuid),e.writeVarString(i.platformChatIdentifier),e.writeInt32(i.platformBuild,Vf.Little),ir.write(e,i.skin),e.writeBool(i.isTeacher),e.writeBool(i.isHost),e.writeBool(i.isVisitor);for(let i=0;i<r.length;i++)e.writeBool(!0)}};import{Endianness as Jr}from"@serenityjs/binarystream";import{DataType as hy}from"@serenityjs/raknet";import{DataType as uy}from"@serenityjs/raknet";import{Endianness as ta}from"@serenityjs/binarystream";var vs=class _f extends uy{static{s(this,"AbilitySet")}ability;value;constructor(e,r){super(),this.ability=e,this.value=r}static read(e){let r=[],o=e.readUint32(ta.Little),n=e.readUint32(ta.Little);for(let i of Object.values(j)){if(!(o&1<<i))continue;let a=(n&1<<i)!==0;r.push(new _f(i,a))}return r}static write(e,r){let o=0,n=0;for(let{ability:i,value:a}of r)o|=1<<i,n|=a?1<<i:0;e.writeUint32(o,ta.Little),e.writeUint32(n,ta.Little)}};var ea=class Uf extends hy{static{s(this,"AbilityLayer")}type;abilities;flySpeed;walkSpeed;constructor(e,r,o,n){super(),this.type=e,this.abilities=r,this.flySpeed=o,this.walkSpeed=n}static read(e){let r=[],o=e.readUint8();for(let n=0;n<o;n++){let i=e.readUint16(Jr.Little),a=vs.read(e),c=e.readFloat32(Jr.Little),d=e.readFloat32(Jr.Little);r.push(new Uf(i,a,c,d))}return r}static write(e,r){e.writeUint8(r.length);for(let o of r)e.writeUint16(o.type,Jr.Little),vs.write(e,o.abilities),e.writeFloat32(o.flySpeed,Jr.Little),e.writeFloat32(o.walkSpeed,Jr.Little)}};import{DataType as gy}from"@serenityjs/raknet";var Df=class extends gy{static{s(this,"TextSource")}static read(e,r,o){return o===$.Chat||o===$.Whisper||o===$.Announcement?e.readVarString():null}static write(e,r,o,n){(n===$.Chat||n===$.Whisper||n===$.Announcement)&&e.writeVarString(r)}};import{DataType as yy}from"@serenityjs/raknet";var Nf=class extends yy{static{s(this,"TextParameters")}static read(e,r,o){if(o===$.Translation||o===$.Popup||o===$.JukeboxPopup){let n=[],i=e.readVarInt();for(let a=0;a<i;a++)n.push(e.readVarString());return n}else return null}static write(e,r,o,n){if(n===$.Translation||n===$.Popup||n===$.JukeboxPopup){e.writeVarInt(r.length);for(let i of r)e.writeVarString(i)}}};import{DataType as wy}from"@serenityjs/raknet";var Zf=class extends wy{static{s(this,"InteractPosition")}static read(e,r,o){return o===qr.InteractUpdate||o===qr.StopRiding?l.read(e):null}static write(e,r,o,n){(n===qr.InteractUpdate||n===qr.StopRiding)&&l.write(e,r)}};import{Endianness as wt}from"@serenityjs/binarystream";import{DataType as Py}from"@serenityjs/raknet";import{Endianness as Yr}from"@serenityjs/binarystream";import{DataType as by}from"@serenityjs/raknet";var tc=class extends by{static{s(this,"AttributeModifier")}id;name;amount;operation;operand;serializable;constructor(e,r,o,n,i,a){super(),this.id=e,this.name=r,this.amount=o,this.operation=n,this.operand=i,this.serializable=a}static read(e){let r=e.readVarString(),o=e.readVarString(),n=e.readInt32(Yr.Little),i=e.readInt32(Yr.Little),a=e.readFloat32(Yr.Little),c=e.readBool();return new this(r,o,n,i,a,c)}static write(e,r){e.writeVarString(r.id),e.writeVarString(r.name),e.writeInt32(r.amount,Yr.Little),e.writeInt32(r.operation,Yr.Little),e.writeFloat32(r.operand,Yr.Little),e.writeBool(r.serializable)}};var Mf=class zf extends Py{static{s(this,"Attribute")}min;max;current;defaultMin;defaultMax;default;name;modifiers;constructor(e,r,o,n,i,a,c,d){super(),this.min=e,this.max=r,this.current=o,this.defaultMin=n,this.defaultMax=i,this.default=a,this.name=c,this.modifiers=d}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readFloat32(wt.Little),a=e.readFloat32(wt.Little),c=e.readFloat32(wt.Little),d=e.readFloat32(wt.Little),u=e.readFloat32(wt.Little),w=e.readFloat32(wt.Little),P=e.readVarString(),R=[],O=e.readVarInt();for(let S=0;S<O;S++)R.push(tc.read(e));r.push(new this(i,a,c,d,u,w,P,R))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r){e.writeFloat32(o.min,wt.Little),e.writeFloat32(o.max,wt.Little),e.writeFloat32(o.current,wt.Little),e.writeFloat32(o.defaultMin,wt.Little),e.writeFloat32(o.defaultMax,wt.Little),e.writeFloat32(o.default,wt.Little),e.writeVarString(o.name),e.writeVarInt(o.modifiers.length);for(let n of o.modifiers)tc.write(e,n)}}static create(e,r,o,n,i){return new zf(r,o,n??o,r,o,i??o,e,[])}};import{Endianness as Ff}from"@serenityjs/binarystream";import{DataType as xy}from"@serenityjs/raknet";var Tf=class ec extends xy{static{s(this,"ChunkCoords")}x;z;constructor(e,r){super(),this.x=e,this.z=r}static read(e){let r=[],o=e.readUint32(Ff.Little);for(let n=0;n<o;n++){let i=e.readZigZag(),a=e.readZigZag();r.push(new ec(i,a))}return r}static write(e,r){e.writeUint32(r.length,Ff.Little);for(let o of r)e.writeZigZag(o.x),e.writeZigZag(o.z)}static hash(e){let r=BigInt(e.x),o=BigInt(e.z);return r<<32n|o&0xffffffffn}static unhash(e){let r=Number(e>>32n),o=e&0xffffffffn,n=Number(o>=0x80000000n?o-0x100000000n:o);return new ec(r,n)}};import{DataType as Iy}from"@serenityjs/raknet";var ra=class qf extends Iy{static{s(this,"Links")}immediate;riddenEntityId;riderEntityId;riderInitiated;type;constructor(e,r,o,n,i){super(),this.immediate=e,this.riddenEntityId=r,this.riderEntityId=o,this.riderInitiated=n,this.type=i}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readZigZong(),a=e.readZigZong(),c=e.readUint8(),d=e.readBool(),u=e.readBool();r.push(new qf(d,i,a,u,c))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeZigZong(o.riddenEntityId),e.writeZigZong(o.riderEntityId),e.writeUint8(o.type),e.writeBool(o.immediate),e.writeBool(o.riderInitiated)}};import{DataType as Ry}from"@serenityjs/raknet";var Hf=class extends Ry{static{s(this,"ModalFormData")}static read(e,r,o){return o?e.readVarString():null}static write(e,r,o,n){n&&e.writeVarString(r)}};import{DataType as ky}from"@serenityjs/raknet";var Wf=class extends ky{static{s(this,"ModalFormCanceled")}static read(e,r,o){return o?e.readUint8():null}static write(e,r,o,n){n&&e.writeUint8(r)}};import{Endianness as Kr}from"@serenityjs/binarystream";import{DataType as Sy}from"@serenityjs/raknet";var Gf=class Af extends Sy{static{s(this,"EntityAttributes")}name;min;value;max;constructor(e,r,o,n){super(),this.name=e,this.min=r,this.value=o,this.max=n}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readVarString(),a=e.readFloat32(Kr.Little),c=e.readFloat32(Kr.Little),d=e.readFloat32(Kr.Little);r.push(new Af(i,a,c,d))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeVarString(o.name),e.writeFloat32(o.min,Kr.Little),e.writeFloat32(o.value,Kr.Little),e.writeFloat32(o.max,Kr.Little)}};import{DataType as Oy}from"@serenityjs/raknet";import{DataType as By}from"@serenityjs/raknet";import{Endianness as Jf}from"@serenityjs/binarystream";var St=class Yf extends By{static{s(this,"FullContainerName")}identifier;dynamicIdentifier;constructor(e,r){super(),this.identifier=e,this.dynamicIdentifier=r}static read(e){let r=e.readUint8(),n=e.readBool()?e.readUint32(Jf.Little):void 0;return new Yf(r,n)}static write(e,r){e.writeUint8(r.identifier),r.dynamicIdentifier?(e.writeBool(!0),e.writeUint32(r.dynamicIdentifier,Jf.Little)):e.writeBool(!1)}};var K=class Kf extends Oy{static{s(this,"ItemStackRequestSlotInfo")}container;slot;stackId;constructor(e,r,o){super(),this.container=e,this.slot=r,this.stackId=o}static read(e){let r=St.read(e),o=e.readUint8(),n=e.readZigZag();return new Kf(r,o,n)}static write(e,r){St.write(e,r.container),e.writeUint8(r.slot),e.writeZigZag(r.stackId)}};import{DataType as Cy}from"@serenityjs/raknet";var Qf=class rc extends Cy{static{s(this,"ItemStackResponses")}status;id;containers;constructor(e,r,o){super(),this.status=e,this.id=r,this.containers=o}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readUint8(),a=e.readZigZag();if(i>0)r.push(new rc(i,a));else{let c=e.readVarInt(),d=[],u=e.readUint8(),w=e.readVarInt(),P=[];for(let R=0;R<w;R++)for(let O=0;O<c;O++){let S=e.readUint8(),F=e.readUint8(),ht=e.readUint8(),be=e.readZigZag(),Pe=e.readVarString(),xe=e.readZigZag();P.push({amount:ht,nametag:Pe,durabilityCorrection:xe,hotbarSlot:F,runtimeId:be,slot:S})}d.push({slots:P,type:u}),r.push(new rc(i,a,d))}}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)if(e.writeUint8(o.status),e.writeZigZag(o.id),!(o.status>0)){e.writeVarInt(o.containers.length);for(let n of o.containers){e.writeUint8(n.type),e.writeVarInt(n.slots.length);for(let i of n.slots)e.writeUint8(i.slot),e.writeUint8(i.hotbarSlot),e.writeUint8(i.amount),e.writeZigZag(i.runtimeId),e.writeVarString(i.nametag),e.writeZigZag(i.durabilityCorrection)}}}};import{DataType as Uy}from"@serenityjs/raknet";import{DataType as jy}from"@serenityjs/raknet";import{BinaryStream as _y,Endianness as ia}from"@serenityjs/binarystream";import{Endianness as pt}from"@serenityjs/binarystream";import{CompoundTag as $f}from"@serenityjs/nbt";import{DataType as Vy}from"@serenityjs/raknet";var $j={[j.Build]:!0,[j.Mine]:!0,[j.DoorsAndSwitches]:!0,[j.OpenContainers]:!0,[j.AttackPlayers]:!0,[j.AttackMobs]:!0,[j.OperatorCommands]:!1,[j.Teleport]:!1,[j.Invulnerable]:!1,[j.Flying]:!1,[j.MayFly]:!1,[j.InstantBuild]:!1,[j.Lightning]:!1,[j.FlySpeed]:!0,[j.WalkSpeed]:!0,[j.Muted]:!1,[j.WorldBuilder]:!1,[j.NoClip]:!1,[j.PrivilegedBuilder]:!1,[j.Count]:!1};var Lj=766,Ej="1.21.51",vj=50,ic=380;var Qr=class Xf extends Vy{static{s(this,"ItemInstanceUserData")}nbt;canPlaceOn;canDestroy;ticking;constructor(e,r,o,n){super(),this.nbt=e,this.canPlaceOn=r,this.canDestroy=o,this.ticking=n}static read(e,r,o){let n=e.readUint16(pt.Little),i;if(n===65535){let P=e.readInt8();switch(P){case 1:{i=$f.read(e);break}default:throw new Error(`Unsupported NBT formatting version: ${P}`)}}else i=null;let a=[],c=e.readInt32(pt.Little);for(let P=0;P<c;P++){let R=e.readString32(pt.Little);a.push(R)}let d=[],u=e.readInt32(pt.Little);for(let P=0;P<u;P++){let R=e.readString32(pt.Little);d.push(R)}let w=o===ic?e.readInt64(pt.Little):null;return new Xf(i,a,d,w)}static write(e,r,o,n){r.nbt?(e.writeUint16(65535,pt.Little),e.writeInt8(1),$f.write(e,r.nbt,!1)):e.writeUint16(0,pt.Little),e.writeInt32(r.canPlaceOn.length,pt.Little);for(let i of r.canPlaceOn)e.writeString32(i,pt.Little);e.writeInt32(r.canDestroy.length,pt.Little);for(let i of r.canDestroy)e.writeString32(i,pt.Little);n===ic&&e.writeInt64(r.ticking??BigInt(0),pt.Little)}};var I=class oc extends jy{static{s(this,"NetworkItemStackDescriptor")}network;stackSize;metadata;stackNetId;networkBlockId;extras;constructor(e,r,o,n,i,a){super(),this.network=e,this.stackSize=r??null,this.metadata=o??null,this.stackNetId=n??null,this.networkBlockId=i??null,this.extras=a??null}static read(e){let r=e.readZigZag();if(r===0)return new oc(r);let o=e.readUint16(ia.Little),n=e.readVarInt(),i=e.readBool()?e.readVarInt():null,a=e.readZigZag(),d=e.readVarInt()>0?Qr.read(e,ia.Little,r):null;return new oc(r,o,n,i,a,d)}static write(e,r){if(e.writeZigZag(r.network),r.network!==0)if(e.writeUint16(r.stackSize??0,ia.Little),e.writeVarInt(r.metadata??0),r.stackNetId?(e.writeBool(!0),e.writeVarInt(r.stackNetId)):e.writeBool(!1),e.writeZigZag(r.networkBlockId??0),r.extras){let o=new _y;Qr.write(o,r.extras,ia.Little,r.network),e.writeVarInt(o.binary.length),e.write(o.binary)}else e.writeVarInt(0)}};var Lf=class extends Uy{static{s(this,"ItemStacks")}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=I.read(e);r.push(i)}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)I.write(e,o)}};import{DataType as Dy}from"@serenityjs/raknet";var b2=class extends Dy{static{s(this,"VariableStringArray")}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++)r.push(e.readVarString());return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeVarString(o)}};import{Uint16 as Ef,Uint32 as vf,Uint8 as td}from"@serenityjs/binarystream";import{DataType as Ny}from"@serenityjs/raknet";var ed=class rd extends Ny{static{s(this,"Enums")}name;values;constructor(e,r){super(),this.name=e,this.values=r}static read(e,r,o){let n=[],i=e.readVarInt();for(let a=0;a<i;a++){let c=e.readVarString(),d=[],u=e.readVarInt();for(let w=0;w<u;w++){let P=o.length<255?td:o.length<65535?Ef:vf;d.push(P.read(e,r))}n.push(new rd(c,d))}return n}static write(e,r,o,n){e.writeVarInt(r.length);for(let i of r){e.writeVarString(i.name),e.writeVarInt(i.values.length);for(let a of i.values)(n.length<255?td:n.length<65535?Ef:vf).write(e,a,o)}}};import{Endianness as oa}from"@serenityjs/binarystream";import{DataType as Zy}from"@serenityjs/raknet";var id=class od extends Zy{static{s(this,"Subcommands")}name;values;constructor(e,r){super(),this.name=e,this.values=r}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readVarString(),a=[],c=e.readVarInt();for(let d=0;d<c;d++){let u=e.readUint16(oa.Little),w=e.readUint16(oa.Little);a.push({index:u,value:w})}r.push(new od(i,a))}return r}static write(e,r){e.writeVarInt(r.length);for(let{name:o,values:n}of r){e.writeVarString(o),e.writeVarInt(n.length);for(let{index:i,value:a}of n)e.writeUint16(i,oa.Little),e.writeUint16(a,oa.Little)}}};import{Endianness as Se}from"@serenityjs/binarystream";import{DataType as My}from"@serenityjs/raknet";var nd=class ad extends My{static{s(this,"Commands")}name;description;flags;permissionLevel;alias;subcommands;overloads;constructor(e,r,o,n,i,a,c){super(),this.name=e,this.description=r,this.flags=o,this.permissionLevel=n,this.alias=i,this.subcommands=a,this.overloads=c}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readVarString(),a=e.readVarString(),c=e.readUint16(Se.Little),d=e.readUint8(),u=e.readInt32(Se.Little),w=[],P=e.readVarInt();for(let S=0;S<P;S++)w.push(e.readUint16(Se.Little));let R=[],O=e.readVarInt();for(let S=0;S<O;S++){let F=e.readBool(),ht=[],be=e.readVarInt();for(let Pe=0;Pe<be;Pe++){let xe=e.readVarString(),eo=e.readUint32(Se.Little),Qs=e.readBool(),$s=e.readUint8();ht.push({symbol:eo,name:xe,optional:Qs,options:$s})}R.push({chaining:F,parameters:ht})}r.push(new ad(i,a,c,d,u,w,R))}return r}static write(e,r){e.writeVarInt(r.length);for(let{name:o,description:n,flags:i,permissionLevel:a,alias:c,subcommands:d,overloads:u}of r){e.writeVarString(o),e.writeVarString(n),e.writeUint16(i,Se.Little),e.writeUint8(a),e.writeInt32(c,Se.Little),e.writeVarInt(d.length);for(let w of d)e.writeUint16(w,Se.Little);e.writeVarInt(u.length);for(let{chaining:w,parameters:P}of u){e.writeBool(w),e.writeVarInt(P.length);for(let{name:R,symbol:O,optional:S,options:F}of P)e.writeVarString(R),e.writeUint32(O,Se.Little),e.writeBool(S),e.writeUint8(F)}}}};import{DataType as zy}from"@serenityjs/raknet";var sd=class cd extends zy{static{s(this,"DynamicEnums")}name;values;constructor(e,r){super(),this.name=e,this.values=r}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readVarString(),a=[],c=e.readVarInt();for(let d=0;d<c;d++)a.push(e.readVarString());r.push(new cd(i,a))}return r}static write(e,r){e.writeVarInt(r.length);for(let{name:o,values:n}of r){e.writeVarString(o),e.writeVarInt(n.length);for(let i of n)e.writeVarString(i)}}};import{DataType as Fy}from"@serenityjs/raknet";import{Endianness as na}from"@serenityjs/binarystream";var pd=class fd extends Fy{static{s(this,"EnumConstraints")}valueIndex;enumIndex;constaints;constructor(e,r,o){super(),this.valueIndex=e,this.enumIndex=r,this.constaints=o}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readUint32(na.Little),a=e.readUint32(na.Little),c=[],d=e.readVarInt();for(let u=0;u<d;u++)c.push(e.readUint8());r.push(new fd(i,a,c))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r){e.writeUint32(o.valueIndex,na.Little),e.writeUint32(o.enumIndex,na.Little),e.writeVarInt(o.constaints.length);for(let n of o.constaints)e.writeUint8(n)}}};import{Endianness as Ty}from"@serenityjs/binarystream";import{DataType as qy}from"@serenityjs/raknet";var dd=class extends qy{static{s(this,"AnimateAction")}static read(e,r,o){return o===zn.RowRight||o===zn.RowLeft?e.readFloat32(r):null}static write(e,r){r!==null&&e.writeFloat32(r,Ty.Little)}};import{DataType as Hy}from"@serenityjs/raknet";var or=class ld extends Hy{static{s(this,"CommandOriginData")}origin;uuid;requestId;playerActorUniqueId;constructor(e,r,o,n){super(),this.origin=e,this.uuid=r,this.requestId=o,this.playerActorUniqueId=n??0n}static read(e){let r=e.readVarInt(),o=e.readUuid(),n=e.readVarString(),i=0n;return(r===3||r===4)&&(i=e.readVarLong()),new ld(r,o,n,i)}static write(e,r){e.writeVarInt(r.origin),e.writeUuid(r.uuid),e.writeVarString(r.requestId),(r.origin===3||r.origin===4)&&e.writeVarLong(r.playerActorUniqueId)}};import{DataType as Gy}from"@serenityjs/raknet";import{DataType as Wy}from"@serenityjs/raknet";var nc=class md extends Wy{static{s(this,"CommandOutputMessage")}isInternal;messageId;parameters;constructor(e,r,o){super(),this.isInternal=e,this.messageId=r,this.parameters=o}static read(e){let r=e.readBool(),o=e.readVarString(),n=[],i=e.readVarInt();for(let a=0;a<i;a++)n.push(e.readVarString());return new md(r,o,n)}static write(e,r){e.writeBool(r.isInternal),e.writeVarString(r.messageId),e.writeVarInt(r.parameters.length);for(let o of r.parameters)e.writeVarString(o)}};var aa=class ud extends Gy{static{s(this,"CommandOutputData")}originData;outputType;successCount;messages;data;constructor(e,r,o,n,i){super(),this.originData=e,this.outputType=r,this.successCount=o,this.messages=n,this.data=i}static read(e){let r=or.read(e),o=e.readByte(),n=e.readVarInt(),i=e.readVarInt(),a=[];for(let d=0;d<i;d++)a.push(nc.read(e));let c="";return o===3&&(c=e.readVarString()),new ud(r,o,n,a,c)}static write(e,r){or.write(e,r.originData),e.writeByte(r.outputType),e.writeVarInt(r.successCount),e.writeVarInt(r.messages.length);for(let o of r.messages)nc.write(e,o)}};import{DataType as Ay}from"@serenityjs/raknet";var sa=class ac extends Ay{static{s(this,"Rotation")}yaw;pitch;headYaw;constructor(e,r,o){super(),this.yaw=e,this.pitch=r,this.headYaw=o}set(e){this.yaw=e.yaw,this.pitch=e.pitch,this.headYaw=e.headYaw}floor(){return this.yaw=Math.floor(this.yaw),this.pitch=Math.floor(this.pitch),this.headYaw=Math.floor(this.headYaw),this}static fromVector3f(e){let r=e.floor();return new ac(r.x,r.y,r.z)}static read(e){let r=e.readByte()*1.40625,o=e.readByte()*(360/256),n=e.readByte()*(360/256);return new ac(r,o,n)}static write(e,r){e.writeByte(Math.floor(r.pitch/(360/256))),e.writeByte(Math.floor(r.headYaw/(360/256))),e.writeByte(Math.floor(r.yaw/(360/256)))}};import{DataType as Jy}from"@serenityjs/raknet";import{BinaryStream as Yy,Endianness as ca}from"@serenityjs/binarystream";var _=class sc extends Jy{static{s(this,"NetworkItemInstanceDescriptor")}network;stackSize;metadata;networkBlockId;extras;constructor(e,r,o,n,i){super(),this.network=e,this.stackSize=r??null,this.metadata=o??null,this.networkBlockId=n??null,this.extras=i??null}static read(e){let r=e.readZigZag();if(r===0)return new sc(r);let o=e.readUint16(ca.Little),n=e.readVarInt(),i=e.readZigZag(),c=e.readVarInt()>0?Qr.read(e,ca.Little,r):null;return new sc(r,o,n,i,c)}static write(e,r){if(e.writeZigZag(r.network),r.network!==0)if(e.writeUint16(r.stackSize??0,ca.Little),e.writeVarInt(r.metadata??0),e.writeZigZag(r.networkBlockId??0),r.extras){let o=new Yy;Qr.write(o,r.extras,ca.Little,r.network),e.writeVarInt(o.binary.length),e.write(o.binary)}else e.writeVarInt(0)}};import{DataType as Ky}from"@serenityjs/raknet";var hd=class extends Ky{static{s(this,"CreativeItems")}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readVarInt(),a=_.read(e);r.push(a)}return r}static write(e,r){e.writeVarInt(r.length);for(let[o,n]of r.entries())e.writeVarInt(o),_.write(e,n)}};import{CompoundTag as gd}from"@serenityjs/nbt";import{DataType as Qy}from"@serenityjs/raknet";var yd=class wd extends Qy{static{s(this,"ComponentItem")}name;data;constructor(e,r){super(),this.name=e,this.data=r}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readVarString(),a=gd.read(e,!0);r.push(new wd(i,a))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeVarString(o.name),gd.write(e,o.data,!0)}};import{DataType as $y}from"@serenityjs/raknet";var nr=class cc extends $y{static{s(this,"LegacyTransaction")}request;actions;constructor(e,r){super(),this.request=e,this.actions=r??null}static read(e){let r=e.readZigZag();if(r===0)return new cc(r);let o=[],n=e.readVarInt();for(let i=0;i<n;i++){let a=e.readUint8(),c=[],d=e.readVarInt();for(let u=0;u<d;u++){let w=e.readUint8();c.push(w)}o.push({containerId:a,changedSlots:c})}return new cc(r,o)}static write(e,r){if(e.writeZigZag(r.request),r.request!==0){if(r.actions===null)throw new Error("actions are not present.");e.writeVarInt(r.actions.length);for(let o of r.actions){e.writeUint8(o.containerId),e.writeVarInt(o.changedSlots.length);for(let n of o.changedSlots)e.writeUint8(n)}}}};import{DataType as ew}from"@serenityjs/raknet";import{DataType as Ly}from"@serenityjs/raknet";import{DataType as Xy}from"@serenityjs/raknet";var pc=class bd extends Xy{static{s(this,"InventorySource")}type;containerId;bitFlags;constructor(e,r,o){super(),this.type=e,this.containerId=r??null,this.bitFlags=o??null}static read(e){let r=e.readVarInt(),o=null,n=null;switch(r){case rr.ContainerInventory:{o=e.readVarInt();break}case rr.WorldInteraction:{n=e.readVarInt();break}case rr.CreativeInventory:break;default:throw new Error(`Unknown/not implemented inventory source type: ${r}`)}return new bd(r,o,n)}static write(e,r){switch(e.writeVarInt(r.type),r.type){case rr.ContainerInventory:{if(r.containerId===null)throw new Error("ContainerInventory type must have a containerId value");e.writeVarInt(r.containerId);break}case rr.WorldInteraction:{if(r.bitFlags===null)throw new Error("WorldInteraction type must have a bitFlags value");e.writeVarInt(r.bitFlags);break}default:throw new Error(`Unknown/not implemented inventory source type: ${r.type}`)}}};var $r=class Pd extends Ly{static{s(this,"InventoryAction")}source;slot;oldItem;newItem;constructor(e,r,o,n){super(),this.source=e,this.slot=r,this.oldItem=o,this.newItem=n}static read(e){let r=pc.read(e),o=e.readVarInt(),n=I.read(e),i=I.read(e);return new Pd(r,o,n,i)}static write(e,r){pc.write(e,r.source),e.writeVarInt(r.slot),I.write(e,r.oldItem),I.write(e,r.newItem)}};import{DataType as Ey}from"@serenityjs/raknet";var Xr=class xd extends Ey{static{s(this,"ItemUseInventoryTransaction")}type;triggerType;blockPosition;face;slot;item;fromPosition;clickPosition;networkBlockId;clientPrediction;constructor(e,r,o,n,i,a,c,d,u,w){super(),this.type=e,this.triggerType=r,this.blockPosition=o,this.face=n,this.slot=i,this.item=a,this.fromPosition=c,this.clickPosition=d,this.networkBlockId=u,this.clientPrediction=w}static read(e){let r=e.readVarInt(),o=e.readVarInt(),n=b.read(e),i=e.readZigZag(),a=e.readZigZag(),c=I.read(e),d=l.read(e),u=l.read(e),w=e.readZigZag(),P=e.readVarInt();return new xd(r,o,n,i,a,c,d,u,w,P)}static write(e,r){e.writeVarInt(r.type),e.writeVarInt(r.triggerType),b.write(e,r.blockPosition),e.writeZigZag(r.face),e.writeZigZag(r.slot),I.write(e,r.item),l.write(e,r.fromPosition),l.write(e,r.clickPosition),e.writeZigZag(r.networkBlockId),e.writeVarInt(r.clientPrediction)}};import{DataType as vy}from"@serenityjs/raknet";var fc=class Id extends vy{static{s(this,"ItemUseOnEntityInventoryTransaction")}actorRuntimeId;type;slot;item;fromPosition;clickPosition;constructor(e,r,o,n,i,a){super(),this.actorRuntimeId=e,this.type=r,this.slot=o,this.item=n,this.fromPosition=i,this.clickPosition=a}static read(e){let r=e.readVarLong(),o=e.readVarInt(),n=e.readZigZag(),i=I.read(e),a=l.read(e),c=l.read(e);return new Id(r,o,n,i,a,c)}static write(e,r){e.writeVarLong(r.actorRuntimeId),e.writeVarInt(r.type),e.writeZigZag(r.slot),I.write(e,r.item),l.write(e,r.fromPosition),l.write(e,r.clickPosition)}};import{DataType as tw}from"@serenityjs/raknet";var dc=class Rd extends tw{static{s(this,"ItemReleaseInventoryTransaction")}type;slot;item;headPosition;constructor(e,r,o,n){super(),this.type=e,this.slot=r,this.item=o,this.headPosition=n}static read(e){let r=e.readVarInt(),o=e.readZigZag(),n=I.read(e),i=l.read(e);return new Rd(r,o,n,i)}static write(e,r){e.writeVarInt(r.type),e.writeZigZag(r.slot),I.write(e,r.item),l.write(e,r.headPosition)}};var pa=class io extends ew{static{s(this,"InventoryTransaction")}type;actions;itemUse;itemUseOnEntity;itemRelease;constructor(e,r,o,n,i){super(),this.type=e,this.actions=r,this.itemUse=o??null,this.itemUseOnEntity=n??null,this.itemRelease=i??null}static read(e){let r=e.readVarInt(),o=e.readVarInt(),n=[];for(let i=0;i<o;i++){let a=$r.read(e);n.push(a)}switch(r){default:throw new Error(`Unknown/not implemented inventory transaction type: ${r}`);case gt.NormalTransaction:case gt.InventoryMismatch:return new io(r,n);case gt.ItemUseTransaction:{let i=Xr.read(e);return new io(r,n,i)}case gt.ItemUseOnEntityTransaction:{let i=fc.read(e);return new io(r,n,null,i)}case gt.ItemReleaseTransaction:{let i=dc.read(e);return new io(r,n,null,null,i)}}}static write(e,r){e.writeVarInt(r.type),e.writeVarInt(r.actions.length);for(let o of r.actions)$r.write(e,o);switch(r.type){default:throw new Error(`Unknown/not implemented inventory transaction type: ${r.type}`);case gt.NormalTransaction:case gt.InventoryMismatch:return;case gt.ItemUseTransaction:{Xr.write(e,r.itemUse);return}case gt.ItemUseOnEntityTransaction:{fc.write(e,r.itemUseOnEntity);return}case gt.ItemReleaseTransaction:{dc.write(e,r.itemRelease);return}}}};import{DataType as rw}from"@serenityjs/raknet";var kd=class extends rw{static{s(this,"EnumValues")}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++)r.push(e.readVarString());return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeVarString(o)}};import{DataType as iw}from"@serenityjs/raknet";var Sd=class extends iw{static{s(this,"ChainedSubcommandValues")}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++)r.push(e.readVarString());return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeVarString(o)}};import{DataType as ow}from"@serenityjs/raknet";var Bd=class extends ow{static{s(this,"PostFixes")}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++)r.push(e.readVarString());return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeVarString(o)}};import{DataType as nw}from"@serenityjs/raknet";import{Endianness as Od}from"@serenityjs/binarystream";var Cd=class Vd extends nw{static{s(this,"ScoreEntry")}scoreboardId;objectiveName;score;identityType;actorUniqueId;customName;constructor(e,r,o,n,i,a){super(),this.scoreboardId=e,this.objectiveName=r,this.score=o,this.identityType=n,this.actorUniqueId=i,this.customName=a}static read(e,r,o){let n=[],i=e.readVarInt();for(let a=0;a<i;a++){let c=e.readVarLong(),d=e.readVarString(),u=e.readInt32(Od.Little),w=null,P=null,R=null;if(o===Tn.Change)switch(w=e.readByte(),w){case ke.Player:case ke.Entity:{P=e.readZigZong();break}case ke.FakePlayer:{R=e.readVarString();break}}n.push(new Vd(c,d,u,w,P,R))}return n}static write(e,r,o,n){e.writeVarInt(r.length);for(let i of r)if(e.writeVarLong(i.scoreboardId),e.writeVarString(i.objectiveName),e.writeInt32(i.score,Od.Little),n===Tn.Change)switch(e.writeByte(i.identityType),i.identityType){case ke.Player:case ke.Entity:{e.writeZigZong(i.actorUniqueId);break}case ke.FakePlayer:{e.writeVarString(i.customName);break}}}};import{DataType as aw}from"@serenityjs/raknet";var fa=class jd extends aw{static{s(this,"ScoreboardIdentity")}scoreboardId;entityUniqueId;constructor(e,r){super(),this.scoreboardId=e,this.entityUniqueId=r}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readVarLong(),a=e.readVarLong();r.push(new jd(i,a))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeVarLong(o.scoreboardId),e.writeVarLong(o.entityUniqueId)}};import{DataType as sw}from"@serenityjs/raknet";var _d=class extends sw{static{s(this,"HudElementData")}element;constructor(e){super(),this.element=e}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readUint8();r.push(new this(i))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeUint8(o.element)}};import{Endianness as da}from"@serenityjs/binarystream";import{DataType as cw}from"@serenityjs/raknet";var la=class extends cw{static{s(this,"BossEventAdd")}title;percent;darkenScreen;color;overlay;constructor(e,r,o,n,i){super(),this.title=e,this.percent=r,this.darkenScreen=o,this.color=n,this.overlay=i}static read(e,r,o){if(o===N.Add){let n=e.readVarString(),i=e.readFloat32(da.Little),a=e.readInt16(da.Little),c=e.readVarInt(),d=e.readVarInt();return new this(n,i,a,c,d)}else return null}static write(e,r,o,n){n===N.Add&&(e.writeVarString(r.title),e.writeFloat32(r.percent,da.Little),e.writeInt16(r.darkenScreen,da.Little),e.writeVarInt(r.color),e.writeVarInt(r.overlay))}};import{DataType as pw}from"@serenityjs/raknet";import{Endianness as ma}from"@serenityjs/binarystream";var ua=class extends pw{static{s(this,"BossEventUpdate")}playerUniqueId;percent;title;darkenScreen;color;overlay;constructor(e,r,o,n,i,a){super(),this.playerUniqueId=e,this.percent=r,this.title=o,this.darkenScreen=n,this.color=i,this.overlay=a}static read(e,r,o){switch(o){case N.Add:case N.Remove:return null;case N.PlayerAdded:case N.PlayerRemoved:{let n=e.readZigZong();return new this(n)}case N.UpdatePercent:{let n=e.readFloat32(ma.Little);return new this(null,n)}case N.UpdateName:{let n=e.readVarString();return new this(null,null,n)}case N.UpdateProperties:{let n=e.readInt16(ma.Little),i=e.readVarInt(),a=e.readVarInt();return new this(null,null,null,n,i,a)}case N.UpdateStyle:{let n=e.readVarInt(),i=e.readVarInt();return new this(null,null,null,null,n,i)}case N.Query:{let n=e.readZigZong();return new this(n)}}}static write(e,r,o,n){switch(n){case N.Add:case N.Remove:break;case N.PlayerAdded:case N.PlayerRemoved:{e.writeZigZong(r.playerUniqueId??BigInt(0));break}case N.UpdatePercent:{e.writeFloat32(r.percent??0,ma.Little);break}case N.UpdateName:{e.writeVarString(r.title??"");break}case N.UpdateProperties:{e.writeInt16(r.darkenScreen??0,ma.Little),e.writeVarInt(r.color??0),e.writeVarInt(r.overlay??0);break}case N.UpdateStyle:{e.writeVarInt(r.color??0),e.writeVarInt(r.overlay??0);break}case N.Query:{e.writeZigZong(r.playerUniqueId??BigInt(0));break}}}};import{DataType as fw}from"@serenityjs/raknet";var ha=class Ud extends fw{static{s(this,"AnimateEntity")}actorRuntimeId;constructor(e){super(),this.actorRuntimeId=e}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readZigZong(),a=new Ud(i);r.push(a)}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeZigZong(o.actorRuntimeId)}};import{DataType as dw}from"@serenityjs/raknet";var Dd=class Nd extends dw{static{s(this,"Emotes")}uuid;constructor(e){super(),this.uuid=e}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readUuid();r.push(new Nd(i))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeUuid(o.uuid)}};import{DataType as lw}from"@serenityjs/raknet";var Zd=class Md extends lw{static{s(this,"DeathParameters")}message;constructor(e){super(),this.message=e}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readVarString();r.push(new Md(i))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeVarString(o.message)}};import{DataType as mw}from"@serenityjs/raknet";var zd=class lc extends mw{static{s(this,"Color")}alpha;red;green;blue;constructor(e,r,o,n){super(),this.alpha=n&255,this.red=e&255,this.green=r&255,this.blue=o&255}static mix(e,r){let o=Math.round((e.alpha+r.alpha)/2),n=Math.round((e.red+r.red)/2),i=Math.round((e.green+r.green)/2),a=Math.round((e.blue+r.blue)/2);return new lc(o,n,i,a)}toInt(){return this.red|this.green<<8|this.blue<<16|this.alpha<<24}static fromInt(e){let r=e>>24&255,o=e>>16&255,n=e>>8&255,i=e&255;return new lc(r,o,n,i)}static write(e,r){e.writeUint32(r.toInt())}};import{DataType as uw}from"@serenityjs/raknet";import{Endianness as ga}from"@serenityjs/binarystream";import{CompoundTag as Fd}from"@serenityjs/nbt";var Nt=class Td extends uw{static{s(this,"DataItem")}identifier;type;value;constructor(e,r,o){super(),this.identifier=e,this.type=r,this.value=o}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readVarInt(),a=e.readVarInt(),c;switch(a){case Z.Byte:{c=e.readInt8();break}case Z.Short:{c=e.readInt16(ga.Little);break}case Z.Int:{c=e.readZigZag();break}case Z.Float:{c=e.readFloat32(ga.Little);break}case Z.String:{c=e.readVarString();break}case Z.CompoundTag:{c=Fd.read(e,!0);break}case Z.BlockPos:{c=b.read(e);break}case Z.Long:{c=e.readZigZong();break}case Z.Vec3:{c=l.read(e);break}}r.push(new Td(i,a,c))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)switch(e.writeVarInt(o.identifier),e.writeVarInt(o.type),o.type){case Z.Byte:{e.writeInt8(o.value);break}case Z.Short:{e.writeInt16(o.value,ga.Little);break}case Z.Int:{e.writeZigZag(o.value);break}case Z.Float:{e.writeFloat32(o.value,ga.Little);break}case Z.String:{e.writeVarString(o.value);break}case Z.CompoundTag:{Fd.write(e,o.value);break}case Z.BlockPos:{b.write(e,o.value);break}case Z.Long:{e.writeZigZong(o.value);break}case Z.Vec3:{l.write(e,o.value);break}}}};import{Endianness as qd}from"@serenityjs/binarystream";import{DataType as hw}from"@serenityjs/raknet";var bt=class Hd extends hw{static{s(this,"PropertySyncData")}floats;ints;constructor(e,r){super(),this.floats=e,this.ints=r}static read(e){let r=[],o=e.readVarInt();for(let a=0;a<o;a++){let c=e.readVarInt(),d=e.readZigZag();r.push({index:c,value:d})}let n=[],i=e.readVarInt();for(let a=0;a<i;a++){let c=e.readVarInt(),d=e.readFloat32(qd.Little);n.push({index:c,value:d})}return new Hd(n,r)}static write(e,r){e.writeVarInt(r.ints.length);for(let o of r.ints)e.writeVarInt(o.index),e.writeZigZag(o.value);e.writeVarInt(r.floats.length);for(let o of r.floats)e.writeVarInt(o.index),e.writeFloat32(o.value,qd.Little)}};import{DataType as gw}from"@serenityjs/raknet";var ya=class Wd extends gw{static{s(this,"BookActions")}pageIndex;pageIndexB;textA;textB;xuid;constructor(e,r,o,n,i){super(),this.pageIndex=e,this.textA=r,this.textB=o,this.xuid=n,this.pageIndexB=i}static read(e,r,o){let n=0,i=0,a="",c="",d="";switch(o){case yt.ReplacePage:case yt.AddPage:{n=e.readByte(),a=e.readVarString(),c=e.readVarString();break}case yt.DeletePage:{n=e.readByte();break}case yt.SwapPage:{n=e.readByte(),i=e.readByte();break}case yt.Finalize:a=e.readVarString(),c=e.readVarString(),d=e.readVarString()}return new Wd(n,a,c,d,i)}static write(e,r,o,n){switch(n){case yt.ReplacePage:case yt.AddPage:{e.writeByte(r.pageIndex),e.writeVarString(r.textA),e.writeVarString(r.textB);break}case yt.DeletePage:{e.writeByte(r.pageIndex);break}case yt.SwapPage:{e.writeByte(r.pageIndex),e.writeByte(r.pageIndexB);break}case yt.Finalize:{e.writeVarString(r.textA),e.writeVarString(r.textB),e.writeVarString(r.xuid);break}}}};import{DataType as yw}from"@serenityjs/raknet";import{Bool as ww,Float32 as bw,Float64 as Pw,Uint32 as xw,Uint64 as Iw,VarString as Rw,ZigZag as kw,ZigZong as Sw}from"@serenityjs/binarystream";var k=class Gd extends yw{static{s(this,"Optional")}static read(e,r,o,n){let i=e.readBool(),a=s(u=>u instanceof u,"isDataValue");if(!i)return;let c,d=n;if(d){if(a(d)){c=d.read(e,r,o);return}c=d.read(e,r,o)}return c}static write(e,r,o,n,i){let a=r!=null,c=s(u=>u instanceof u,"isDataValue");if(e.writeBool(a),!a)return;let d=i??Gd.getType(r);if(d){if(c(d)){d.write(e,r,o,n);return}d.write(e,r,o)}}static getType(e){switch(typeof e){case"string":return Rw;case"number":return e%1!=0?bw:e<0?kw:xw;case"bigint":return e%1n!=0n?Pw:e<0n?Sw:Iw;case"boolean":return ww}}};import{DataType as Bw}from"@serenityjs/raknet";import{Bool as wa,Endianness as et,Float32 as rt,Uint8 as Ad}from"@serenityjs/binarystream";var Jd=class Yd extends Bw{static{s(this,"CameraPreset")}name;parent;position;rotation;speed;snapToTarget;viewOffset;entityOffset;radius;listener;effects;constructor(e,r,o,n,i,a,c,d,u,w,P){super(),this.name=e,this.parent=r,this.position=o,this.rotation=n,this.speed=i,this.snapToTarget=a,this.viewOffset=c,this.entityOffset=d,this.radius=u,this.listener=w,this.effects=P}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++)r.push(new Yd(e.readVarString(),e.readVarString(),new l(k.read(e,et.Little,void 0,rt),k.read(e,et.Little,void 0,rt),k.read(e,et.Little,void 0,rt)),new V(k.read(e,et.Little,void 0,rt),k.read(e,et.Little,void 0,rt)),k.read(e,et.Little,void 0,rt),k.read(e,void 0,void 0,wa),k.read(e,void 0,void 0,V),k.read(e,void 0,void 0,l),k.read(e,et.Little,void 0,rt),k.read(e,void 0,void 0,Ad),k.read(e,void 0,void 0,wa)));return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeVarString(o.name),e.writeVarString(o.parent),k.write(e,o.position?.x,et.Little,null,rt),k.write(e,o.position?.y,et.Little,null,rt),k.write(e,o.position?.z,et.Little,null,rt),k.write(e,o.rotation?.x,et.Little,null,rt),k.write(e,o.rotation?.y,et.Little,null,rt),k.write(e,o.speed,et.Little,null,rt),k.write(e,o.snapToTarget,void 0,null,wa),k.write(e,o.viewOffset,void 0,null,V),k.write(e,o.entityOffset,void 0,null,l),k.write(e,o.radius,et.Little,null,rt),k.write(e,o.listener,void 0,null,Ad),k.write(e,o.effects,void 0,null,wa)}};import{DataType as Vw}from"@serenityjs/raknet";import{Bool as jw,Endianness as _w}from"@serenityjs/binarystream";import{DataType as Ow}from"@serenityjs/raknet";import{Endianness as Cw}from"@serenityjs/binarystream";var Kd=class extends Ow{static{s(this,"CameraSetEasing")}type;duration;constructor(e,r){super(),this.type=e,this.duration=r}static write(e,r){e.writeUint8(r.type),e.writeFloat32(r.duration,Cw.Little)}};var Qd=class extends Vw{static{s(this,"CameraSetInstruction")}runtimeId;easing;position;rotation;facing;constructor(e,r,o,n,i){super(),this.runtimeId=e,this.easing=r,this.position=o,this.rotation=n,this.facing=i}static write(e,r){e.writeInt32(r.runtimeId,_w.Little),k.write(e,r.easing,void 0,null,Kd),k.write(e,r.position,void 0,null,l),k.write(e,r.rotation,void 0,null,V),k.write(e,r.facing,void 0,null,l),k.write(e,void 0,void 0,void 0,jw)}};import{DataType as Nw}from"@serenityjs/raknet";import{Bool as Zw}from"@serenityjs/binarystream";import{DataType as Dw}from"@serenityjs/raknet";import{DataType as Uw}from"@serenityjs/raknet";import{Endianness as mc}from"@serenityjs/binarystream";var $d=class extends Uw{static{s(this,"CameraFadeDuration")}fadeIn;hold;fadeOut;constructor(e,r,o){super(),this.fadeIn=e,this.hold=r,this.fadeOut=o}static write(e,r){e.writeFloat32(r.fadeIn,mc.Little),e.writeFloat32(r.hold,mc.Little),e.writeFloat32(r.fadeOut,mc.Little)}};var Xd=class extends Dw{static{s(this,"CameraFadeInstruction")}duration;color;constructor(e,r){super(),this.duration=e,this.color=r}static write(e,r){k.write(e,r.duration,void 0,null,$d),k.write(e,r.color,void 0,null,l)}};var ba=class extends Nw{static{s(this,"CameraInstructions")}Set;Clear;Fade;constructor(e,r,o){super(),this.Set=e,this.Clear=r,this.Fade=o}static write(e,r){k.write(e,r.Set,void 0,null,Qd),k.write(e,r.Clear,void 0,null,Zw),k.write(e,r.Fade,void 0,null,Xd)}};import{DataType as Mw}from"@serenityjs/raknet";import{Endianness as Lr}from"@serenityjs/binarystream";var C=class extends Mw{static{s(this,"RecipeIngredient")}type;default;molang;itemTag;deferred;complexAlias;stackSize;constructor(e,r,o,n,i,a,c){super(),this.type=e,this.default=r,this.molang=o,this.itemTag=n,this.deferred=i,this.complexAlias=a,this.stackSize=c}static read(e){let r=e.readUint8(),o=null,n=null,i=null,a=null,c=null;switch(r){default:throw new Error(`Unknown ingredient type: ${r}, offset: ${e.offset}`);case tt.Invalid:break;case tt.Default:{let u=e.readInt16(Lr.Little),w=u===0?0:e.readInt16(Lr.Little);o={networkId:u,metadata:w};break}case tt.Molang:{let u=e.readVarString(),w=e.readUint8();n={molang:u,version:w};break}case tt.ItemTag:{i={tag:e.readVarString()};break}case tt.Deferred:{let u=e.readVarString(),w=e.readInt16(Lr.Little);a={name:u,metadata:w};break}case tt.ComplexAlias:{c={name:e.readVarString()};break}}let d=e.readZigZag();return new this(r,o,n,i,a,c,d)}static write(e,r){switch(e.writeUint8(r.type),r.type){default:throw new Error(`Unknown ingredient type: ${r.type}`);case tt.Invalid:break;case tt.Default:{let o=r.default;e.writeInt16(o.networkId,Lr.Little),o.networkId!==0&&e.writeInt16(o.metadata,Lr.Little);break}case tt.Molang:{let o=r.molang;e.writeVarString(o.molang),e.writeUint8(o.version);break}case tt.ItemTag:{let o=r.itemTag;e.writeVarString(o.tag);break}case tt.Deferred:{let o=r.deferred;e.writeVarString(o.name),e.writeInt16(o.metadata,Lr.Little);break}case tt.ComplexAlias:{let o=r.complexAlias;e.writeVarString(o.name);break}}e.writeZigZag(r.stackSize)}};import{DataType as zw}from"@serenityjs/raknet";var Yt=class Ld extends zw{static{s(this,"RecipeUnlockingRequirement")}context;ingredients;constructor(e,r){super(),this.context=e,this.ingredients=r}static read(e){let r=e.readByte();if(r!==Fn.None)return new Ld(r,null);let o=[],n=e.readVarInt();for(let i=0;i<n;i++){let a=C.read(e);o.push(a)}return new this(r,o)}static write(e,r){if(e.writeByte(r.context),r.context===Fn.None){let o=r.ingredients;e.writeVarInt(o.length);for(let n of o)C.write(e,n)}}};import{DataType as Jw}from"@serenityjs/raknet";import{DataType as Fw}from"@serenityjs/raknet";var ar=class extends Fw{static{s(this,"ShapelessRecipe")}identifier;ingredients;resultants;uuid;tag;priority;requirement;recipeNetorkId;constructor(e,r,o,n,i,a,c,d){super(),this.identifier=e,this.ingredients=r,this.resultants=o,this.uuid=n,this.tag=i,this.priority=a,this.requirement=c,this.recipeNetorkId=d}static read(e){let r=e.readVarString(),o=e.readVarInt(),n=[];for(let R=0;R<o;R++){let O=C.read(e);n.push(O)}let i=e.readVarInt(),a=[];for(let R=0;R<i;R++){let O=_.read(e);a.push(O)}let c=e.readUuid(),d=e.readVarString(),u=e.readZigZag(),w=Yt.read(e),P=e.readVarInt();return new this(r,n,a,c,d,u,w,P)}static write(e,r){e.writeVarString(r.identifier);let o=r.ingredients;e.writeVarInt(o.length);for(let i of o)C.write(e,i);let n=r.resultants;e.writeVarInt(n.length);for(let i of n)_.write(e,i);e.writeUuid(r.uuid),e.writeVarString(r.tag),e.writeZigZag(r.priority),Yt.write(e,r.requirement),e.writeVarInt(r.recipeNetorkId)}};import{DataType as Tw}from"@serenityjs/raknet";var uc=class extends Tw{static{s(this,"SmithingTransformRecipe")}identifier;templateIngredient;baseIngredient;additionalIngredient;resultant;tag;recipeNetworkId;constructor(e,r,o,n,i,a,c){super(),this.identifier=e,this.templateIngredient=r,this.baseIngredient=o,this.additionalIngredient=n,this.resultant=i,this.tag=a,this.recipeNetworkId=c}static read(e){let r=e.readVarString(),o=C.read(e),n=C.read(e),i=C.read(e),a=_.read(e),c=e.readVarString(),d=e.readVarInt();return new this(r,o,n,i,a,c,d)}static write(e,r){e.writeVarString(r.identifier),C.write(e,r.templateIngredient),C.write(e,r.baseIngredient),C.write(e,r.additionalIngredient),_.write(e,r.resultant),e.writeVarString(r.tag),e.writeVarInt(r.recipeNetworkId)}};import{DataType as qw}from"@serenityjs/raknet";var hc=class extends qw{static{s(this,"MultiRecipe")}uuid;networkId;constructor(e,r){super(),this.uuid=e,this.networkId=r}static read(e){let r=e.readUuid(),o=e.readVarInt();return new this(r,o)}static write(e,r){e.writeUuid(r.uuid),e.writeVarInt(r.networkId)}};import{DataType as Hw}from"@serenityjs/raknet";var gc=class extends Hw{static{s(this,"FurnanceAuxRecipe")}data;metadata;resultant;tag;constructor(e,r,o,n){super(),this.data=e,this.metadata=r,this.resultant=o,this.tag=n}static read(e){let r=e.readZigZag(),o=e.readZigZag(),n=_.read(e),i=e.readVarString();return new this(r,o,n,i)}static write(e,r){e.writeZigZag(r.data),e.writeZigZag(r.metadata),_.write(e,r.resultant),e.writeVarString(r.tag)}};import{DataType as Ww}from"@serenityjs/raknet";var yc=class Ed extends Ww{static{s(this,"FurnanceRecipe")}data;resultant;tag;constructor(e,r,o){super(),this.data=e,this.resultant=r,this.tag=o}static read(e){let r=e.readZigZag(),o=_.read(e),n=e.readVarString();return new Ed(r,o,n)}static write(e,r){e.writeZigZag(r.data),_.write(e,r.resultant),e.writeVarString(r.tag)}};import{DataType as Gw}from"@serenityjs/raknet";var oo=class extends Gw{static{s(this,"ShapedRecipe")}identifier;width;height;ingredients;resultants;uuid;tag;priority;symmetrical;requirement;recipeNetorkId;constructor(e,r,o,n,i,a,c,d,u,w,P){super(),this.identifier=e,this.width=r,this.height=o,this.ingredients=n,this.resultants=i,this.uuid=a,this.tag=c,this.priority=d,this.symmetrical=u,this.requirement=w,this.recipeNetorkId=P}static read(e){let r=e.readVarString(),o=e.readZigZag(),n=e.readZigZag(),i=[];for(let S=0;S<o*n;S++){let F=C.read(e);i.push(F)}let a=[],c=e.readVarInt();for(let S=0;S<c;S++){let F=_.read(e);a.push(F)}let d=e.readUuid(),u=e.readVarString(),w=e.readZigZag(),P=e.readBool(),R=Yt.read(e),O=e.readVarInt();return new this(r,o,n,i,a,d,u,w,P,R,O)}static write(e,r){e.writeVarString(r.identifier),e.writeZigZag(r.width),e.writeZigZag(r.height);for(let o of r.ingredients)C.write(e,o);e.writeVarInt(r.resultants.length);for(let o of r.resultants)_.write(e,o);e.writeUuid(r.uuid),e.writeVarString(r.tag),e.writeZigZag(r.priority),e.writeBool(r.symmetrical),Yt.write(e,r.requirement),e.writeVarInt(r.recipeNetorkId)}};import{DataType as Aw}from"@serenityjs/raknet";var wc=class extends Aw{static{s(this,"SmithingTrimRecipe")}identifier;templateIngredient;baseIngredient;additionalIngredient;tag;recipeNetworkId;constructor(e,r,o,n,i,a){super(),this.identifier=e,this.templateIngredient=r,this.baseIngredient=o,this.additionalIngredient=n,this.tag=i,this.recipeNetworkId=a}static read(e){let r=e.readVarString(),o=C.read(e),n=C.read(e),i=C.read(e),a=e.readVarString(),c=e.readVarInt();return new this(r,o,n,i,a,c)}static write(e,r){e.writeVarString(r.identifier),C.write(e,r.templateIngredient),C.write(e,r.baseIngredient),C.write(e,r.additionalIngredient),e.writeVarString(r.tag),e.writeVarInt(r.recipeNetworkId)}};var vd=class extends Jw{static{s(this,"CraftingDataEntry")}type;shapeless;shaped;furnace;furnaceAux;multi;userDataShapeless;shapelessChemistry;shapedChemistry;smithingTransform;smithingTrim;constructor(e,r,o,n,i,a,c,d,u,w,P){super(),this.type=e,this.shapeless=r,this.shaped=o,this.furnace=n,this.furnaceAux=i,this.multi=a,this.userDataShapeless=c,this.shapelessChemistry=d,this.shapedChemistry=u,this.smithingTransform=w,this.smithingTrim=P}static read(e){let r=e.readVarInt(),o=[];for(let n=0;n<r;n++){let i=e.readZigZag(),a=null,c=null,d=null,u=null,w=null,P=null,R=null,O=null,S=null,F=null;switch(i){default:throw new Error(`Unknown crafting data entry type: ${i}, index: ${n}, offset: ${e.offset}`);case M.ShapelessRecipe:{a=ar.read(e);break}case M.ShapedRecipe:{c=oo.read(e);break}case M.FurnaceRecipe:{d=yc.read(e);break}case M.FurnaceAuxRecipe:{u=gc.read(e);break}case M.MultiRecipe:{w=hc.read(e);break}case M.UserDataShapelessRecipe:{P=ar.read(e);break}case M.ShapelessChemistryRecipe:{R=ar.read(e);break}case M.ShapedChemistryRecipe:{O=oo.read(e);break}case M.SmithingTransformRecipe:{S=uc.read(e);break}case M.SmithingTrimRecipe:{F=wc.read(e);break}}let ht=new this(i,a,c,d,u,w,P,R,O,S,F);o.push(ht)}return o}static write(e,r){e.writeVarInt(r.length);for(let o of r)switch(e.writeZigZag(o.type),o.type){default:throw new Error(`Unknown crafting data entry type: ${o.type}`);case M.ShapelessRecipe:{ar.write(e,o.shapeless);break}case M.ShapedRecipe:{oo.write(e,o.shaped);break}case M.FurnaceRecipe:{yc.write(e,o.furnace);break}case M.FurnaceAuxRecipe:{gc.write(e,o.furnaceAux);break}case M.MultiRecipe:{hc.write(e,o.multi);break}case M.UserDataShapelessRecipe:{ar.write(e,o.userDataShapeless);break}case M.ShapelessChemistryRecipe:{ar.write(e,o.shapelessChemistry);break}case M.ShapedChemistryRecipe:{oo.write(e,o.shapedChemistry);break}case M.SmithingTransformRecipe:{uc.write(e,o.smithingTransform);break}case M.SmithingTrimRecipe:{wc.write(e,o.smithingTrim);break}}}};import{DataType as Yw}from"@serenityjs/raknet";var tl=class extends Yw{static{s(this,"PotionMixDataEntry")}inputNetworkId;inputMetadata;ingredientNetworkId;ingredientMetadata;resultantNetworkId;resultantMetadata;constructor(e,r,o,n,i,a){super(),this.inputNetworkId=e,this.inputMetadata=r,this.ingredientNetworkId=o,this.ingredientMetadata=n,this.resultantNetworkId=i,this.resultantMetadata=a}static read(e){let r=e.readVarInt(),o=[];for(let n=0;n<r;n++){let i=e.readZigZag(),a=e.readZigZag(),c=e.readZigZag(),d=e.readZigZag(),u=e.readZigZag(),w=e.readZigZag();o.push(new this(i,a,c,d,u,w))}return o}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeZigZag(o.inputNetworkId),e.writeZigZag(o.inputMetadata),e.writeZigZag(o.ingredientNetworkId),e.writeZigZag(o.ingredientMetadata),e.writeZigZag(o.resultantNetworkId),e.writeZigZag(o.resultantMetadata)}};import{DataType as Kw}from"@serenityjs/raknet";var el=class extends Kw{static{s(this,"ContainerMixDataEntry")}inputNetworkId;reactantNetworkId;resultantNetworkId;constructor(e,r,o){super(),this.inputNetworkId=e,this.reactantNetworkId=r,this.resultantNetworkId=o}static read(e){let r=new Array,o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readZigZag(),a=e.readZigZag(),c=e.readZigZag(),d=new this(i,a,c);r.push(d)}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeZigZag(o.inputNetworkId),e.writeZigZag(o.reactantNetworkId),e.writeZigZag(o.resultantNetworkId)}};import{DataType as Qw}from"@serenityjs/raknet";var rl=class extends Qw{static{s(this,"MaterialReducerDataEntry")}inputNetworkId;resultantNetworkId;resultantStackSize;constructor(e,r,o){super(),this.inputNetworkId=e,this.resultantNetworkId=r,this.resultantStackSize=o}static read(e){let r=new Array,o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readZigZag(),a=e.readZigZag(),c=e.readZigZag(),d=new this(i,a,c);r.push(d)}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeZigZag(o.inputNetworkId),e.writeZigZag(o.resultantNetworkId),e.writeZigZag(o.resultantStackSize)}};import{DataType as $w}from"@serenityjs/raknet";var C4=class extends $w{static{s(this,"UserDataShapelessRecipe")}identifier;ingredients;resultants;uuid;tag;priority;requirement;constructor(e,r,o,n,i,a,c){super(),this.identifier=e,this.ingredients=r,this.resultants=o,this.uuid=n,this.tag=i,this.priority=a,this.requirement=c}static read(e){let r=e.readVarString(),o=e.readVarInt(),n=[];for(let P=0;P<o;P++){let R=C.read(e);n.push(R)}let i=e.readVarInt(),a=[];for(let P=0;P<i;P++){let R=_.read(e);a.push(R)}let c=e.readUuid(),d=e.readVarString(),u=e.readZigZag(),w=Yt.read(e);return new this(r,n,a,c,d,u,w)}static write(e,r){e.writeVarString(r.identifier);let o=r.ingredients;e.writeVarInt(o.length);for(let i of o)C.write(e,i);let n=r.resultants;e.writeVarInt(n.length);for(let i of n)_.write(e,i);e.writeUuid(r.uuid),e.writeVarString(r.tag),e.writeZigZag(r.priority),Yt.write(e,r.requirement)}};import{DataType as Lw}from"@serenityjs/raknet";import{DataType as Xw}from"@serenityjs/raknet";var bc=class il extends Xw{static{s(this,"StructureSettings")}structurePalletName;ignoreEntities;ignoreBlocks;allowNonTicking;size;offset;lastEdit;rotation;mirror;animationMode;animationSeconds;integrityValue;integritySeed;rotationPivot;constructor(e,r,o,n,i,a,c,d,u,w,P,R,O,S){super(),this.structurePalletName=e,this.ignoreEntities=r,this.ignoreBlocks=o,this.allowNonTicking=n,this.size=i,this.offset=a,this.lastEdit=c,this.rotation=d,this.mirror=u,this.animationMode=w,this.animationSeconds=P,this.integrityValue=R,this.integritySeed=O,this.rotationPivot=S}static write(e,r){e.writeVarString(r.structurePalletName),e.writeBool(r.ignoreBlocks),e.writeBool(r.ignoreEntities),e.writeBool(r.allowNonTicking),b.write(e,r.size),b.write(e,r.offset),e.writeZigZong(r.lastEdit),e.writeByte(r.animationMode),e.writeFloat32(r.animationSeconds),e.writeFloat32(r.integrityValue),e.writeUint32(r.integritySeed),l.write(e,r.rotationPivot)}static read(e){return new il(e.readVarString(),e.readBool(),e.readBool(),e.readBool(),b.read(e),b.read(e),e.readZigZong(),e.readByte(),e.readByte(),e.readByte(),e.readFloat32(),e.readFloat32(),e.readUint32(),l.read(e))}};var Pa=class ol extends Lw{static{s(this,"StructureEditorData")}structureName;dataField;includePlayers;showBoundingBox;blockType;structureSetting;redstoneSaveMode;constructor(e,r,o,n,i,a,c){super(),this.structureName=e,this.dataField=r,this.includePlayers=o,this.showBoundingBox=n,this.blockType=i,this.structureSetting=a,this.redstoneSaveMode=c}static write(e,r){e.writeVarString(r.structureName),e.writeVarString(r.dataField),e.writeBool(r.includePlayers),e.writeBool(r.showBoundingBox),e.writeVarInt(r.blockType),bc.write(e,r.structureSetting),e.writeVarInt(r.redstoneSaveMode)}static read(e){return new ol(e.readVarString(),e.readVarString(),e.readBool(),e.readBool(),e.readVarInt(),bc.read(e),e.readVarInt())}};import{DataType as vw}from"@serenityjs/raknet";import{DataType as Ew}from"@serenityjs/raknet";var Pc=class nl extends Ew{static{s(this,"DimensionDefinition")}identifier;heightMax;heightMin;generatorType;constructor(e,r,o,n){super(),this.identifier=e,this.heightMax=r,this.heightMin=o,this.generatorType=n}static write(e,r){e.writeVarString(r.identifier),e.writeVarInt(r.heightMax),e.writeVarInt(r.heightMin),e.writeVarInt(r.generatorType)}static read(e){return new nl(e.readVarString(),e.readVarInt(),e.readVarInt(),e.readVarInt())}};var xa=class al extends vw{static{s(this,"DimensionDefinitionGroup")}definitions;constructor(e){super(),this.definitions=e}static write(e,r){e.writeVarInt(r.definitions.length);for(let o of r.definitions)Pc.write(e,o)}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++)r.push(Pc.read(e));return new al(r)}};import{DataType as tb}from"@serenityjs/raknet";var sl=class extends tb{static{s(this,"ItemStackActionTakePlace")}amount;source;destination;constructor(e,r,o){super(),this.amount=e,this.source=r,this.destination=o}static read(e){let r=e.readUint8(),o=K.read(e),n=K.read(e);return new this(r,o,n)}static write(e,r){e.writeUint8(r.amount),K.write(e,r.source),K.write(e,r.destination)}};import{DataType as eb}from"@serenityjs/raknet";var cl=class extends eb{static{s(this,"ItemStackRequestActionSwap")}source;destination;constructor(e,r){super(),this.source=e,this.destination=r}static read(e){let r=K.read(e),o=K.read(e);return new this(r,o)}static write(e,r){K.write(e,r.source),K.write(e,r.destination)}};import{DataType as rb}from"@serenityjs/raknet";var pl=class extends rb{static{s(this,"ItemStackRequestActionDrop")}amount;source;randomly;constructor(e,r,o){super(),this.amount=e,this.source=r,this.randomly=o}static read(e){let r=e.readUint8(),o=K.read(e),n=e.readBool();return new this(r,o,n)}static write(e,r){e.writeUint8(r.amount),K.write(e,r.source),e.writeBool(r.randomly)}};import{DataType as ib}from"@serenityjs/raknet";var fl=class extends ib{static{s(this,"ItemStackRequestActionDestroyConsume")}amount;source;constructor(e,r){super(),this.amount=e,this.source=r}static read(e){let r=e.readUint8(),o=K.read(e);return new this(r,o)}static write(e,r){e.writeUint8(r.amount),K.write(e,r.source)}};import{DataType as ob}from"@serenityjs/raknet";var dl=class extends ob{static{s(this,"ItemStackRequestActionCreate")}slot;constructor(e){super(),this.slot=e}static read(e){let r=e.readUint8();return new this(r)}static write(e,r){e.writeUint8(r.slot)}};import{DataType as nb}from"@serenityjs/raknet";var ll=class extends nb{static{s(this,"ItemStackRequestActionBeanconPayment")}primaryEffect;secondaryEffect;constructor(e,r){super(),this.primaryEffect=e,this.secondaryEffect=r}static read(e){let r=e.readZigZag(),o=e.readZigZag();return new this(r,o)}static write(e,r){e.writeZigZag(r.primaryEffect),e.writeZigZag(r.secondaryEffect)}};import{DataType as ab}from"@serenityjs/raknet";var ml=class extends ab{static{s(this,"ItemStackRequestActionMineBlock")}slot;predictedDurability;networkId;constructor(e,r,o){super(),this.slot=e,this.predictedDurability=r,this.networkId=o}static read(e){let r=e.readZigZag(),o=e.readZigZag(),n=e.readZigZag();return new this(r,o,n)}static write(e,r){e.writeZigZag(r.slot),e.writeZigZag(r.predictedDurability),e.writeZigZag(r.networkId)}};import{DataType as sb}from"@serenityjs/raknet";var ul=class extends sb{static{s(this,"ItemStackRequestActionCraftRecipe")}recipeId;amount;constructor(e,r){super(),this.recipeId=e,this.amount=r}static read(e){let r=e.readVarInt(),o=e.readUint8();return new this(r,o)}static write(e,r){e.writeVarInt(r.recipeId),e.writeUint8(r.amount)}};import{DataType as cb}from"@serenityjs/raknet";var hl=class extends cb{static{s(this,"ItemStackRequestActionCraftRecipeAuto")}recipeId;timesCrafted;ingredients;constructor(e,r,o){super(),this.recipeId=e,this.timesCrafted=r,this.ingredients=o}static read(e){let r=e.readVarInt(),o=e.readUint8(),n=e.readVarInt(),i=[];for(let a=0;a<n;a++)i[a]=C.read(e);return new this(r,o,i)}static write(e,r){e.writeVarInt(r.recipeId),e.writeUint8(r.timesCrafted),e.writeVarInt(r.ingredients.length);for(let o of r.ingredients)C.write(e,o)}};import{DataType as pb}from"@serenityjs/raknet";var gl=class extends pb{static{s(this,"ItemStackRequestActionCraftCreative")}creativeIndex;amount;constructor(e,r){super(),this.creativeIndex=e,this.amount=r}static read(e){let r=e.readVarInt(),o=e.readUint8();return new this(r,o)}static write(e,r){e.writeVarInt(r.creativeIndex),e.writeUint8(r.amount)}};import{DataType as fb}from"@serenityjs/raknet";import{Endianness as yl}from"@serenityjs/binarystream";var wl=class extends fb{static{s(this,"ItemStackRequestActionOptional")}recipeId;filteredStringIndex;constructor(e,r){super(),this.recipeId=e,this.filteredStringIndex=r}static read(e){let r=e.readVarInt(),o=e.readUint32(yl.Little);return new this(r,o)}static write(e,r){e.writeVarInt(r.recipeId),e.writeUint32(r.filteredStringIndex,yl.Little)}};import{DataType as db}from"@serenityjs/raknet";var JZ=class extends db{static{s(this,"ItemStackRequestActionCraftGrindstoneRequest")}recipeId;cost;amount;constructor(e,r,o){super(),this.recipeId=e,this.cost=r,this.amount=o}static read(e){let r=e.readVarInt(),o=e.readVarInt(),n=e.readUint8();return new this(r,o,n)}static write(e,r){e.writeVarInt(r.recipeId),e.writeVarInt(r.cost),e.writeUint8(r.amount)}};import{DataType as lb}from"@serenityjs/raknet";var XZ=class extends lb{static{s(this,"ItemStackRequestActionCraftLoomRequest")}pattern;constructor(e){super(),this.pattern=e}static read(e){let r=e.readVarString();return new this(r)}static write(e,r){e.writeVarString(r.pattern)}};import{DataType as mb}from"@serenityjs/raknet";var bl=class extends mb{static{s(this,"ItemStackRequestActionResultsDeprecated")}resultants;amount;constructor(e,r){super(),this.resultants=e,this.amount=r}static read(e){let r=e.readVarInt(),o=[];for(let i=0;i<r;i++)o[i]=_.read(e);let n=e.readUint8();return new this(o,n)}static write(e,r){e.writeVarInt(r.resultants.length);for(let o of r.resultants)_.write(e,o);e.writeUint8(r.amount)}};import{DataType as ub}from"@serenityjs/raknet";var Er=class extends ub{static{s(this,"ItemStackRequestAction")}action;takeOrPlace;swap;drop;destroyOrConsume;create;beaconPayment;mineBlock;craftRecipe;craftRecipeAuto;craftCreative;optional;craftGrindstoneRequest;craftLoomRequest;resultsDeprecated;constructor(e,r,o,n,i,a,c,d,u,w,P,R,O,S,F){super(),this.action=e,this.takeOrPlace=r??null,this.swap=o??null,this.drop=n??null,this.destroyOrConsume=i??null,this.create=a??null,this.beaconPayment=c??null,this.mineBlock=d??null,this.craftRecipe=u??null,this.craftRecipeAuto=w??null,this.craftCreative=P??null,this.optional=R??null,this.craftGrindstoneRequest=O??null,this.craftLoomRequest=S??null,this.resultsDeprecated=F??null}static read(e){let r=e.readUint8();switch(r){default:return new this(r);case W.Take:case W.Place:case W.TakeFromItemContainer_DEPRECATED:case W.PlaceInItemContainer_DEPRECATED:return new this(r,sl.read(e));case W.Swap:return new this(r,null,cl.read(e));case W.Drop:return new this(r,null,null,pl.read(e));case W.Destroy:case W.Consume:return new this(r,null,null,null,fl.read(e));case W.Create:return new this(r,null,null,null,null,dl.read(e));case W.ScreenBeaconPayment:return new this(r,null,null,null,null,null,ll.read(e));case W.ScreenHUDMineBlock:return new this(r,null,null,null,null,null,null,ml.read(e));case W.CraftRecipe:return new this(r,null,null,null,null,null,null,null,ul.read(e));case W.CraftRecipeAuto:return new this(r,null,null,null,null,null,null,null,null,hl.read(e));case W.CraftCreative:return new this(r,null,null,null,null,null,null,null,null,null,gl.read(e));case W.CraftRecipeOptional:return new this(r,null,null,null,null,null,null,null,null,null,null,wl.read(e));case W.CraftResults_DEPRECATEDASKTYLAING:return new this(r,null,null,null,null,null,null,null,null,null,null,null,null,null,bl.read(e))}}};import{DataType as hb}from"@serenityjs/raknet";import{Endianness as Pl}from"@serenityjs/binarystream";var xl=class Il extends hb{static{s(this,"ItemStackRequest")}clientRequestId;actions;filterStrings;stringsFilterOrigin;constructor(e,r,o,n){super(),this.clientRequestId=e,this.actions=r,this.filterStrings=o,this.stringsFilterOrigin=n}static read(e){let r=new Array,o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readZigZag(),a=new Array,c=e.readVarInt();for(let P=0;P<c;P++)a.push(Er.read(e));let d=new Array,u=e.readVarInt();for(let P=0;P<u;P++)d.push(e.readVarString());let w=e.readInt32(Pl.Little);r.push(new Il(i,a,d,w))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r){e.writeZigZag(o.clientRequestId),e.writeVarInt(o.actions.length);for(let n of o.actions)Er.write(e,n);e.writeVarInt(o.filterStrings.length);for(let n of o.filterStrings)e.writeVarString(n);e.writeInt32(o.stringsFilterOrigin,Pl.Little)}}};import{DataType as gb}from"@serenityjs/raknet";var Ia=class Rl extends gb{static{s(this,"DisconnectMessage")}message;filtered;constructor(e,r){super(),this.message=e??null,this.filtered=r??null}static read(e,r,o){if(o)return new Rl;let n=e.readVarString(),i=e.readVarString();return new this(n,i)}static write(e,r,o,n){n||(e.writeVarString(r.message??"Disconnected from server."),e.writeVarString(r.filtered??"Disconnected from server."))}};import{DataType as wb}from"@serenityjs/raknet";import{Endianness as Sl}from"@serenityjs/binarystream";import{DataType as yb}from"@serenityjs/raknet";var sr=class kl extends yb{static{s(this,"Enchant")}id;level;constructor(e,r){super(),this.id=e,this.level=r}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readByte(),a=e.readByte();r.push(new kl(i,a))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeByte(o.id),e.writeByte(o.level)}};var Bl=class Ol extends wb{static{s(this,"EnchantOption")}cost;slotFlags;equipEnchantments;heldEnchantments;selfEnchantments;name;optionId;constructor(e,r,o,n,i,a,c){super(),this.cost=e,this.slotFlags=r,this.equipEnchantments=o,this.heldEnchantments=n,this.selfEnchantments=i,this.name=a,this.optionId=c}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readVarInt(),a=e.readInt32(Sl.Little),c=sr.read(e),d=sr.read(e),u=sr.read(e),w=e.readVarString(),P=e.readUint32();r.push(new Ol(i,a,c,d,u,w,P))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeVarInt(o.cost),e.writeInt32(o.slotFlags,Sl.Little),sr.write(e,o.equipEnchantments),sr.write(e,o.heldEnchantments),sr.write(e,o.selfEnchantments),e.writeVarString(o.name),e.writeZigZag(o.optionId)}};import{DataType as bb}from"@serenityjs/raknet";var Cl=class Vl extends bb{static{s(this,"ClientPredictedVehicle")}vehicleRotation;actorUniqueId;constructor(e,r){super(),this.vehicleRotation=e,this.actorUniqueId=r}static read(e,r,o){if(!o.hasFlag(X.IsInClientPredictedVehicle))return null;let n=V.read(e),i=e.readZigZag();return new Vl(n,i)}static write(e,r,o,n){n.hasFlag(X.IsInClientPredictedVehicle)&&(V.write(e,r.vehicleRotation),e.writeZigZag(r.actorUniqueId))}};import{DataType as Pb}from"@serenityjs/raknet";var xc=class extends Pb{static{s(this,"InputTransaction")}legacyTransaction;actions;trasactionUseItem;constructor(e,r,o){super(),this.legacyTransaction=e,this.actions=r,this.trasactionUseItem=o}static write(e,r){nr.write(e,r.legacyTransaction),e.writeVarInt(r.actions.length);for(let o of r.actions)$r.write(e,o);Xr.write(e,r.trasactionUseItem)}static read(e){let r=nr.read(e),o=e.readVarInt(),n=[];for(let a=0;a<o;a++){let c=$r.read(e);n.push(c)}let i=Xr.read(e);return new this(r,n,i)}};import{DataType as xb}from"@serenityjs/raknet";var vr=class extends xb{static{s(this,"PlayerAuthInputData")}flags;constructor(e){super(),this.flags=e}setFlag(e,r){let o=1n<<BigInt(e);r?this.flags|=o:this.flags&=~o}hasFlag(e){let r=1n<<BigInt(e);return(this.flags&r)!==0n}getFlags(){let e=[],r=Object.values(X).filter(o=>typeof o=="number");for(let o of r)this.hasFlag(o)&&e.push(o);return e}static write(e,r){e.writeVarLong(r.flags)}static read(e){let r=e.readVarLong();return new this(r)}};import{DataType as Ib}from"@serenityjs/raknet";var i8=class jl extends Ib{static{s(this,"BlockAction")}action;position;face;constructor(e,r,o){super(),this.action=e,this.position=r,this.face=o}static write(e,r){if(e.writeZigZag(r.action),r.action==er.StartDestroyBlock||r.action==er.AbortDestroyBlock||r.action==er.CrackBlock||r.action==er.PredictDestroyBlock||r.action==er.ContinueDestroyBlock){if(r.position===void 0||r.position===null)throw new Error("Position is not defined but action is startBreak or abortBreak or crackBreak or predictBreak or continueBreak");if(r.face===void 0||r.face===null)throw new Error("Face is not defined but action is startBreak or abortBreak or crackBreak or predictBreak or continueBreak");e.writeZigZag(r.position.x),e.writeZigZag(r.position.y),e.writeZigZag(r.position.z),e.writeZigZag(r.face)}else e.writeVarInt(0),e.writeZigZag(0),e.writeZigZag(0),e.writeZigZag(0)}static read(e){let r=e.readZigZag(),o=new l(e.readZigZag(),e.readZigZag(),e.readZigZag()),n=e.readZigZag();return new jl(r,o,n)}};import{DataType as Rb}from"@serenityjs/raknet";var Ra=class _l extends Rb{static{s(this,"ActorLink")}riddenEntityUnique;riderEntityUnique;type;immediate;riderInitiated;vehicleAngularVelocity;constructor(e,r,o,n,i,a){super(),this.riddenEntityUnique=e,this.riderEntityUnique=r,this.type=o,this.immediate=n,this.riderInitiated=i,this.vehicleAngularVelocity=a}static write(e,r){e.writeVarLong(r.riddenEntityUnique),e.writeVarLong(r.riderEntityUnique),e.writeByte(r.type),e.writeBool(r.immediate),e.writeBool(r.riderInitiated),e.writeFloat32(r.vehicleAngularVelocity)}static read(e){return new _l(e.readVarLong(),e.readVarLong(),e.readByte(),e.readBool(),e.readBool(),e.readFloat32())}};var Ic=class extends b{static{s(this,"SignedBlockPosition")}static read(e){let r=e.readZigZag(),o=e.readZigZag(),n=e.readZigZag();return new this(r,o,n)}static write(e,r){e.writeZigZag(r.x),e.writeZigZag(r.y),e.writeZigZag(r.z)}};import{DataType as Sb}from"@serenityjs/raknet";import{DataType as kb}from"@serenityjs/raknet";var Rc=class extends kb{static{s(this,"PlayerBlockActionData")}type;position;face;constructor(e,r,o){super(),this.type=e,this.position=r,this.face=o}static read(e){let r=e.readZigZag(),o=Ic.read(e),n=e.readZigZag();return new this(r,o,n)}static write(e,r){e.writeZigZag(r.type),Ic.write(e,r.position),e.writeZigZag(r.face)}};var Ul=class extends Sb{static{s(this,"PlayerBlockActions")}actions;constructor(e){super(),this.actions=e}static read(e,r,o){if(!o.hasFlag(X.PerformBlockActions))return null;let n=e.readZigZag(),i=[];for(let a=0;a<n;a++)i.push(Rc.read(e));return new this(i)}static write(e,r,o,n){if(n.hasFlag(X.PerformBlockActions)){e.writeZigZag(r.actions.length);for(let i of r.actions)Rc.write(e,i)}}};import{DataType as Bb}from"@serenityjs/raknet";var Q=class extends Bb{static{s(this,"PlayerInputTick")}static read(e){return e.readVarLong()}static write(e,r){e.writeVarLong(r)}};import{DataType as Ob}from"@serenityjs/raknet";var ka=class extends Ob{static{s(this,"RotationByte")}static read(e){return e.readInt8()*(360/256)}static write(e,r){e.writeInt8(r/(360/256))}};import{DataType as Cb}from"@serenityjs/raknet";var Sa=class Dl extends Cb{static{s(this,"Fogs")}fogs;constructor(e=[]){super(),this.fogs=e}static read(e){let r=new Dl,o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readVarString();r.fogs.push(i)}return r}static write(e,r){e.writeVarInt(r.fogs.length);for(let o of r.fogs)e.writeVarString(o)}};import{BinaryStream as Nl}from"@serenityjs/binarystream";import{DataType as Vb}from"@serenityjs/raknet";import{CompoundTag as Zl}from"@serenityjs/nbt";var Ba=class Ml extends Vb{static{s(this,"NbtLoop")}data;constructor(e){super(),this.data=e}static read(e){try{let r=e.readRemainingBuffer(),o=new Nl(Buffer.concat([Buffer.from([10,0]),r,Buffer.from([0])])),n=Zl.read(o,!0);return new Ml(n)}catch(r){throw new Error(`Error reading NbtLoop: ${r.message}`)}}static write(e,r){if(r.data===null){e.writeBuffer(Buffer.from([0]));return}try{let o=new Nl;Zl.write(o,r.data,!0);let n=o.getBuffer(),i=n.slice(2,n.length-1);e.writeBuffer(i)}catch(o){throw new Error(`Error writing NbtLoop: ${o.message}`)}}};import{DataType as jb}from"@serenityjs/raknet";var Oa=class zl extends jb{static{s(this,"Patterns")}patterns;constructor(e=[]){super(),this.patterns=e}static read(e){let r=new zl,o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readVarString(),a=e.readVarString();r.patterns.push({item_name:i,pattern:a})}return r}static write(e,r){e.writeVarInt(r.patterns.length);for(let o of r.patterns)e.writeVarString(o.item_name),e.writeVarString(o.pattern)}};import{DataType as _b}from"@serenityjs/raknet";var Ca=class Fl extends _b{static{s(this,"Materials")}materials;constructor(e=[]){super(),this.materials=e}static read(e){let r=new Fl,o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readVarString(),a=e.readVarString(),c=e.readVarString();r.materials.push({material:i,color:a,item_name:c})}return r}static write(e,r){e.writeVarInt(r.materials.length);for(let o of r.materials)e.writeVarString(o.material),e.writeVarString(o.color),e.writeVarString(o.item_name)}};import{Endianness as Tl}from"@serenityjs/binarystream";import{DataType as Ub}from"@serenityjs/raknet";var Va=class ql extends Ub{static{s(this,"UnlockedRecipesEntry")}type;recipes=[];constructor(e,r){super(),this.type=e,this.recipes=r}static write(e,r){e.writeInt32(r.type,Tl.Little),e.writeVarInt(r.recipes.length);for(let o of r.recipes)e.writeVarString(o)}static read(e){let r=[],o=e.readInt32(Tl.Little),n=e.readVarInt();for(let i=0;i<n;i++)r.push(e.readVarString());return new ql(o,r)}};import{DataType as Db}from"@serenityjs/raknet";import{Endianness as Nb}from"@serenityjs/binarystream";var Hl=class extends Db{static{s(this,"PlayerAuthItemStackRequest")}clientRequestId;actions;filterStrings;stringsFilterOrigin;constructor(e,r,o,n){super(),this.clientRequestId=e,this.actions=r,this.filterStrings=o,this.stringsFilterOrigin=n}static read(e,r,o){if(!o.hasFlag(X.PerformItemStackRequest))return null;let n=e.readZigZag(),i=new Array,a=e.readVarInt();for(let w=0;w<a;w++)i.push(Er.read(e));let c=new Array,d=e.readVarInt();for(let w=0;w<d;w++)c.push(e.readVarString());let u=e.readInt32(Nb.Little);return new this(n,i,c,u)}static write(e,r,o,n){if(n.hasFlag(X.PerformItemStackRequest)){e.writeZigZag(r.clientRequestId),e.writeVarInt(r.actions.length);for(let i of r.actions)Er.write(e,i);e.writeVarInt(r.filterStrings.length)}}};import{DataType as Zb}from"@serenityjs/raknet";var Wl=class extends Zb{static{s(this,"CommandBlockActorRuntimeId")}static read(e,r,o){return o===!0?null:e.readVarLong()}static write(e,r,o,n){n!==!1&&e.writeVarLong(r)}};import{DataType as Mb}from"@serenityjs/raknet";var Gl=class extends Mb{static{s(this,"CommandBlockSettings")}position;commandMode;redstoneMode;conditionalMode;constructor(e,r,o,n){super(),this.position=e,this.commandMode=r,this.redstoneMode=o,this.conditionalMode=n}static read(e,r,o){if(o===!1)return null;let n=b.read(e),i=e.readVarInt(),a=e.readBool(),c=e.readBool();return new this(n,i,a,c)}static write(e,r,o,n){n!==!1&&(b.write(e,r.position),e.writeVarInt(r.commandMode),e.writeBool(r.redstoneMode),e.writeBool(r.conditionalMode))}};import{DataType as zb}from"@serenityjs/raknet";var ti=class extends zb{static{s(this,"MapTextureUpdateBits")}static write(e,r,o,n){if(n&2){if(Array.isArray(r)){e.writeVarInt(r.length);for(let i of r)e.writeVarInt(i);return}e.writeZigZag(r)}}};import{DataType as Jl}from"@serenityjs/raknet";import{DataType as Fb}from"@serenityjs/raknet";var kc=class Al extends Fb{static{s(this,"MapTrackedItem")}type;uniqueId;position;constructor(e,r,o){super(),this.type=e,this.uniqueId=r,this.position=o}static write(e,r){e.writeUint8(r.type),r.type==0?e.writeZigZong(r.uniqueId):r.type==1&&b.write(e,r.position)}static read(e){let r=e.readUint8(),o,n;return r==0?o=e.readZigZong():r==1&&(n=b.read(e)),new Al(r,o,n)}};var Yl=class extends Jl{static{s(this,"MapDecorationBits")}static write(e,r,o,n){if(n&4){e.writeVarInt(r.length);for(let i of r)Sc.write(e,i)}}static read(e,r,o){if(!(o&4))return null;let n=e.readVarInt(),i=[];for(let a=0;a<n;a++)i.push(Sc.read(e));return i}},Kl=class extends Jl{static{s(this,"MapTrackedItems")}static write(e,r,o,n){if(n&4){e.writeVarInt(r.length);for(let i of r)kc.write(e,i)}}static read(e,r,o){if(!(o&4))return null;let n=e.readVarInt(),i=[];for(let a=0;a<n;a++)i.push(kc.read(e));return i}};import{DataType as Tb}from"@serenityjs/raknet";var Ql=class extends Tb{static{s(this,"MapCreationBits")}static write(e,r,o,n){if(n&8){e.writeVarInt(r.length);for(let i of r)e.writeZigZong(i)}}static read(e,r,o){if(!(o&8))return null;let n=e.readVarInt(),i=[];for(let a=0;a<n;a++)i.push(e.readZigZong());return i}};import{DataType as qb}from"@serenityjs/raknet";var Sc=class $l extends qb{static{s(this,"MapDecoration")}type;rotation;x;y;label;color;constructor(e,r,o,n,i,a){super(),this.type=e,this.rotation=r,this.x=o,this.y=n,this.label=i,this.color=a}static write(e,r){e.writeByte(r.type),e.writeByte(r.rotation),e.writeByte(r.x),e.writeByte(r.y),e.writeVarString(r.label),e.writeVarInt(r.color)}static read(e){return new $l(e.readByte(),e.readByte(),e.readByte(),e.readByte(),e.readVarString(),e.readVarInt())}};import{DataType as Hb}from"@serenityjs/raknet";var Xl=class extends Hb{static{s(this,"MapScale")}static write(e,r,o,n){n&14&&e.writeByte(r)}static read(e,r,o){return o&14?e.readByte():null}static checkFlag(e,r){return(e&r)===r}};import{DataType as Wb}from"@serenityjs/raknet";var Ll=class El extends Wb{static{s(this,"MapPixel")}x;y;color;constructor(e,r,o){super(),this.x=e,this.y=r,this.color=o}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeInt32(o.color.toInt()),e.writeUint16(o.x+o.y*128)}static read(e){let r=e.readVarInt(),o=[];for(let n=0;n<r;n++){let i=e.readInt32(),a=e.readUint16(),c=a%128,d=a/128;o.push(new El(c,d,zd.fromInt(i)))}return o}};import{CompoundTag as Bc,ListTag as Gb,TagType as Ab}from"@serenityjs/nbt";import{DataType as Jb}from"@serenityjs/raknet";var vl=class extends Jb{static{s(this,"TradeOffer")}buyA;sell;buyB;maxUses;experienceReward;tier;traderExperience;uses;constructor(e,r,o,n,i,a,c){super(),this.buyA=e,this.buyB=r,this.sell=o,this.maxUses=n,this.experienceReward=i,this.tier=a,this.traderExperience=c,this.uses=0}static write(e,r){let o=new Bc({name:"offers"}),n=new Gb({listType:Ab.Compound,name:"Recipes"});for(let i of r){let a=new Bc;a.createCompoundTag(i.buyA),a.createIntTag({name:"maxUses",value:i.maxUses}),i.buyB&&a.addTag(i.buyB),a.createByteTag({name:"rewardExp",value:i.experienceReward}),a.addTag(i.sell),a.createIntTag({name:"tier",value:i.tier}),a.createIntTag({name:"traderExp",value:i.traderExperience}),a.createIntTag({name:"uses",value:i.uses}),n.value.push(a)}o.addTag(n),Bc.write(e,o,!0)}};import{DataType as Yb}from"@serenityjs/raknet";var ja=class extends Yb{static{s(this,"PlayerAuthInputTransaction")}inputTransaction;constructor(e){super(),this.inputTransaction=e}static write(e,r,o,n){n.hasFlag(X.PerformItemInteraction)&&xc.write(e,r)}static read(e,r,o){return o.hasFlag(X.PerformItemInteraction)?xc.read(e):null}};import{BasePacket as Kb}from"@serenityjs/raknet";import{VarInt as Qb}from"@serenityjs/binarystream";var f=class extends Kb{static{s(this,"DataPacket")}static id;static id_type=Qb;serialize(){throw new Error("DataPacket.serialize() is not implemented")}deserialize(){throw new Error("DataPacket.deserialize() is not implemented")}};function it(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(it,"_ts_decorate");function ft(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(ft,"_ts_metadata");var Y=class extends f{static{s(this,"AddEntityPacket")}uniqueEntityId;runtimeId;identifier;position;velocity;pitch;yaw;headYaw;bodyYaw;attributes;data;properties;links};it([dt(Lb),ft("design:type",typeof BigInt>"u"?Object:BigInt)],Y.prototype,"uniqueEntityId",void 0);it([dt($b),ft("design:type",typeof BigInt>"u"?Object:BigInt)],Y.prototype,"runtimeId",void 0);it([dt(Xb),ft("design:type",String)],Y.prototype,"identifier",void 0);it([dt(l),ft("design:type",typeof l>"u"?Object:l)],Y.prototype,"position",void 0);it([dt(l),ft("design:type",typeof l>"u"?Object:l)],Y.prototype,"velocity",void 0);it([dt(Ua,_a.Little),ft("design:type",Number)],Y.prototype,"pitch",void 0);it([dt(Ua,_a.Little),ft("design:type",Number)],Y.prototype,"yaw",void 0);it([dt(Ua,_a.Little),ft("design:type",Number)],Y.prototype,"headYaw",void 0);it([dt(Ua,_a.Little),ft("design:type",Number)],Y.prototype,"bodyYaw",void 0);it([dt(Gf),ft("design:type",typeof Array>"u"?Object:Array)],Y.prototype,"attributes",void 0);it([dt(Nt),ft("design:type",typeof Array>"u"?Object:Array)],Y.prototype,"data",void 0);it([dt(bt),ft("design:type",typeof bt>"u"?Object:bt)],Y.prototype,"properties",void 0);it([dt(ra),ft("design:type",typeof Array>"u"?Object:Array)],Y.prototype,"links",void 0);Y=it([Eb(p.AddEntity)],Y);import{Bool as vb,VarLong as tP,ZigZong as eP}from"@serenityjs/binarystream";import{Serialize as pr,Proto as rP}from"@serenityjs/raknet";function Be(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Be,"_ts_decorate");function cr(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(cr,"_ts_metadata");var Bt=class extends f{static{s(this,"AddItemActorPacket")}uniqueId;runtimeId;item;position;velocity;data;fromFishing};Be([pr(eP),cr("design:type",typeof BigInt>"u"?Object:BigInt)],Bt.prototype,"uniqueId",void 0);Be([pr(tP),cr("design:type",typeof BigInt>"u"?Object:BigInt)],Bt.prototype,"runtimeId",void 0);Be([pr(I),cr("design:type",typeof I>"u"?Object:I)],Bt.prototype,"item",void 0);Be([pr(l),cr("design:type",typeof l>"u"?Object:l)],Bt.prototype,"position",void 0);Be([pr(l),cr("design:type",typeof l>"u"?Object:l)],Bt.prototype,"velocity",void 0);Be([pr(Nt),cr("design:type",typeof Array>"u"?Object:Array)],Bt.prototype,"data",void 0);Be([pr(vb),cr("design:type",Boolean)],Bt.prototype,"fromFishing",void 0);Bt=Be([rP(p.AddItemActor)],Bt);import{Endianness as no,Float32 as Oc,Uuid as iP,VarLong as oP,VarString as Cc,ZigZag as nP,Int64 as aP,Uint8 as tm,Int32 as sP}from"@serenityjs/binarystream";import{Proto as cP,Serialize as q}from"@serenityjs/raknet";function z(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(z,"_ts_decorate");function T(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(T,"_ts_metadata");var U=class extends f{static{s(this,"AddPlayerPacket")}uuid;username;runtimeId;platformChatId;position;velocity;pitch;yaw;headYaw;heldItem;gamemode;data;properties;uniqueEntityId;premissionLevel;commandPermission;abilities;links;deviceId;deviceOS};z([q(iP),T("design:type",String)],U.prototype,"uuid",void 0);z([q(Cc),T("design:type",String)],U.prototype,"username",void 0);z([q(oP),T("design:type",typeof BigInt>"u"?Object:BigInt)],U.prototype,"runtimeId",void 0);z([q(Cc),T("design:type",String)],U.prototype,"platformChatId",void 0);z([q(l),T("design:type",typeof l>"u"?Object:l)],U.prototype,"position",void 0);z([q(l),T("design:type",typeof l>"u"?Object:l)],U.prototype,"velocity",void 0);z([q(Oc,no.Little),T("design:type",Number)],U.prototype,"pitch",void 0);z([q(Oc,no.Little),T("design:type",Number)],U.prototype,"yaw",void 0);z([q(Oc,no.Little),T("design:type",Number)],U.prototype,"headYaw",void 0);z([q(I),T("design:type",typeof I>"u"?Object:I)],U.prototype,"heldItem",void 0);z([q(nP),T("design:type",typeof Gamemode>"u"?Object:Gamemode)],U.prototype,"gamemode",void 0);z([q(Nt),T("design:type",typeof Array>"u"?Object:Array)],U.prototype,"data",void 0);z([q(bt),T("design:type",typeof bt>"u"?Object:bt)],U.prototype,"properties",void 0);z([q(aP,no.Little),T("design:type",typeof BigInt>"u"?Object:BigInt)],U.prototype,"uniqueEntityId",void 0);z([q(tm),T("design:type",typeof PermissionLevel>"u"?Object:PermissionLevel)],U.prototype,"premissionLevel",void 0);z([q(tm),T("design:type",typeof CommandPermissionLevel>"u"?Object:CommandPermissionLevel)],U.prototype,"commandPermission",void 0);z([q(ea),T("design:type",typeof Array>"u"?Object:Array)],U.prototype,"abilities",void 0);z([q(ra),T("design:type",typeof Array>"u"?Object:Array)],U.prototype,"links",void 0);z([q(Cc),T("design:type",String)],U.prototype,"deviceId",void 0);z([q(sP,no.Little),T("design:type",typeof DeviceOS>"u"?Object:DeviceOS)],U.prototype,"deviceOS",void 0);U=z([cP(p.AddPlayer)],U);import{VarLong as pP,ZigZag as fP}from"@serenityjs/binarystream";import{Proto as dP,Serialize as jc}from"@serenityjs/raknet";function Da(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Da,"_ts_decorate");function Vc(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Vc,"_ts_metadata");var fr=class extends f{static{s(this,"AnimatePacket")}id;runtimeEntityId;boatRowingTime};Da([jc(fP),Vc("design:type",typeof AnimateId>"u"?Object:AnimateId)],fr.prototype,"id",void 0);Da([jc(pP),Vc("design:type",typeof BigInt>"u"?Object:BigInt)],fr.prototype,"runtimeEntityId",void 0);Da([jc(dd),Vc("design:type",Object)],fr.prototype,"boatRowingTime",void 0);fr=Da([dP(p.Animate)],fr);import{Endianness as lP}from"@serenityjs/binarystream";import{Proto as mP,Serialize as Ce}from"@serenityjs/raknet";function Kt(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Kt,"_ts_decorate");function Oe(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Oe,"_ts_metadata");var Pt=class extends f{static{s(this,"AvailableCommandsPacket")}enumValues;chainedSubcommandValues;postFixes;enums;subcommands;commands;dynamicEnums;enumConstraints};Kt([Ce(kd),Oe("design:type",typeof Array>"u"?Object:Array)],Pt.prototype,"enumValues",void 0);Kt([Ce(Sd),Oe("design:type",typeof Array>"u"?Object:Array)],Pt.prototype,"chainedSubcommandValues",void 0);Kt([Ce(Bd),Oe("design:type",typeof Array>"u"?Object:Array)],Pt.prototype,"postFixes",void 0);Kt([Ce(ed,lP.Little,"enumValues"),Oe("design:type",typeof Array>"u"?Object:Array)],Pt.prototype,"enums",void 0);Kt([Ce(id),Oe("design:type",typeof Array>"u"?Object:Array)],Pt.prototype,"subcommands",void 0);Kt([Ce(nd),Oe("design:type",typeof Array>"u"?Object:Array)],Pt.prototype,"commands",void 0);Kt([Ce(sd),Oe("design:type",typeof Array>"u"?Object:Array)],Pt.prototype,"dynamicEnums",void 0);Kt([Ce(pd),Oe("design:type",typeof Array>"u"?Object:Array)],Pt.prototype,"enumConstraints",void 0);Pt=Kt([mP(p.AvailableCommands)],Pt);import{Proto as hP}from"@serenityjs/raknet";function uP(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(uP,"_ts_decorate");var Na=class extends f{static{s(this,"BiomeDefinitionListPacket")}biomes;serialize(){return this.writeVarInt(p.BiomeDefinitionList),this.writeBuffer(this.biomes),this.getBuffer()}deserialize(){return this.readVarInt(),this.biomes=this.readRemainingBuffer(),this}};Na=uP([hP(p.BiomeDefinitionList)],Na);import{Bool as gP,Uint8 as yP,ZigZag as _c}from"@serenityjs/binarystream";import{Proto as wP,Serialize as so}from"@serenityjs/raknet";function ei(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(ei,"_ts_decorate");function ao(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(ao,"_ts_metadata");var Qt=class extends f{static{s(this,"BlockPickRequestPacket")}x;y;z;addData;selectedSlot};ei([so(_c),ao("design:type",Number)],Qt.prototype,"x",void 0);ei([so(_c),ao("design:type",Number)],Qt.prototype,"y",void 0);ei([so(_c),ao("design:type",Number)],Qt.prototype,"z",void 0);ei([so(gP),ao("design:type",Boolean)],Qt.prototype,"addData",void 0);ei([so(yP),ao("design:type",Number)],Qt.prototype,"selectedSlot",void 0);Qt=ei([wP(p.BlockPickRequest)],Qt);import{ZigZag as bP,Bool as em}from"@serenityjs/binarystream";import{Proto as PP,Serialize as Ma}from"@serenityjs/raknet";function co(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(co,"_ts_decorate");function Za(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Za,"_ts_metadata");var Ve=class extends f{static{s(this,"ChangeDimensionPacket")}dimension;position;respawn;hasLoadingScreen};co([Ma(bP),Za("design:type",typeof DimensionType>"u"?Object:DimensionType)],Ve.prototype,"dimension",void 0);co([Ma(l),Za("design:type",typeof l>"u"?Object:l)],Ve.prototype,"position",void 0);co([Ma(em),Za("design:type",Boolean)],Ve.prototype,"respawn",void 0);co([Ma(em),Za("design:type",Boolean)],Ve.prototype,"hasLoadingScreen",void 0);Ve=co([PP(p.ChangeDimension)],Ve);import{ZigZag as IP}from"@serenityjs/binarystream";import{Proto as RP,Serialize as kP}from"@serenityjs/raknet";function rm(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(rm,"_ts_decorate");function xP(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(xP,"_ts_metadata");var po=class extends f{static{s(this,"ChunkRadiusUpdatePacket")}radius};rm([kP(IP),xP("design:type",Number)],po.prototype,"radius",void 0);po=rm([RP(p.ChunkRadiusUpdate)],po);import{Proto as BP,Serialize as OP}from"@serenityjs/raknet";function im(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(im,"_ts_decorate");function SP(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(SP,"_ts_metadata");var fo=class extends f{static{s(this,"CommandOutputPacket")}originData};im([OP(aa),SP("design:type",typeof aa>"u"?Object:aa)],fo.prototype,"originData",void 0);fo=im([BP(p.CommandOutput)],fo);import{Bool as CP,VarInt as VP,VarString as jP}from"@serenityjs/binarystream";import{Proto as _P,Serialize as Fa}from"@serenityjs/raknet";function lo(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(lo,"_ts_decorate");function za(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(za,"_ts_metadata");var je=class extends f{static{s(this,"CommandRequestPacket")}command;origin;isInternal;version};lo([Fa(jP),za("design:type",String)],je.prototype,"command",void 0);lo([Fa(or),za("design:type",typeof or>"u"?Object:or)],je.prototype,"origin",void 0);lo([Fa(CP),za("design:type",Boolean)],je.prototype,"isInternal",void 0);lo([Fa(VP),za("design:type",Number)],je.prototype,"version",void 0);je=lo([_P(p.CommandRequest)],je);import{Int8 as om,Bool as UP}from"@serenityjs/binarystream";import{Proto as DP,Serialize as Dc}from"@serenityjs/raknet";function Ta(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Ta,"_ts_decorate");function Uc(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Uc,"_ts_metadata");var dr=class extends f{static{s(this,"ContainerClosePacket")}identifier;type;serverInitiated};Ta([Dc(om),Uc("design:type",typeof ContainerId>"u"?Object:ContainerId)],dr.prototype,"identifier",void 0);Ta([Dc(om),Uc("design:type",typeof ContainerType>"u"?Object:ContainerType)],dr.prototype,"type",void 0);Ta([Dc(UP),Uc("design:type",Boolean)],dr.prototype,"serverInitiated",void 0);dr=Ta([DP(p.ContainerClose)],dr);import{Int8 as nm,ZigZong as NP}from"@serenityjs/binarystream";import{Proto as ZP,Serialize as Ha}from"@serenityjs/raknet";function mo(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(mo,"_ts_decorate");function qa(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(qa,"_ts_metadata");var _e=class extends f{static{s(this,"ContainerOpenPacket")}identifier;type;position;uniqueId};mo([Ha(nm),qa("design:type",typeof ContainerId>"u"?Object:ContainerId)],_e.prototype,"identifier",void 0);mo([Ha(nm),qa("design:type",typeof ContainerType>"u"?Object:ContainerType)],_e.prototype,"type",void 0);mo([Ha(b),qa("design:type",typeof b>"u"?Object:b)],_e.prototype,"position",void 0);mo([Ha(NP),qa("design:type",typeof BigInt>"u"?Object:BigInt)],_e.prototype,"uniqueId",void 0);_e=mo([ZP(p.ContainerOpen)],_e);import{Proto as zP,Serialize as FP}from"@serenityjs/raknet";function am(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(am,"_ts_decorate");function MP(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(MP,"_ts_metadata");var uo=class extends f{static{s(this,"CreativeContentPacket")}items};am([FP(hd),MP("design:type",typeof Array>"u"?Object:Array)],uo.prototype,"items",void 0);uo=am([zP(p.CreativeContent)],uo);import{ZigZag as TP,Bool as qP}from"@serenityjs/binarystream";import{Proto as HP,Serialize as Zc}from"@serenityjs/raknet";function Wa(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Wa,"_ts_decorate");function Nc(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Nc,"_ts_metadata");var lr=class extends f{static{s(this,"DisconnectPacket")}reason;hideDisconnectScreen;message};Wa([Zc(TP),Nc("design:type",typeof DisconnectReason>"u"?Object:DisconnectReason)],lr.prototype,"reason",void 0);Wa([Zc(qP),Nc("design:type",Boolean)],lr.prototype,"hideDisconnectScreen",void 0);Wa([Zc(Ia,0,"hideDisconnectScreen"),Nc("design:type",typeof Ia>"u"?Object:Ia)],lr.prototype,"message",void 0);lr=Wa([HP(p.Disconnect)],lr);import{Uint8 as WP,Endianness as GP,VarLong as AP}from"@serenityjs/binarystream";import{Proto as JP,Serialize as zc}from"@serenityjs/raknet";function Ga(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Ga,"_ts_decorate");function Mc(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Mc,"_ts_metadata");var mr=class extends f{static{s(this,"InteractPacket")}action;actorRuntimeId;position};Ga([zc(WP),Mc("design:type",typeof InteractAction>"u"?Object:InteractAction)],mr.prototype,"action",void 0);Ga([zc(AP),Mc("design:type",typeof BigInt>"u"?Object:BigInt)],mr.prototype,"actorRuntimeId",void 0);Ga([zc(Zf,GP.Big,"action"),Mc("design:type",typeof Vector3f>"u"?Object:Vector3f)],mr.prototype,"position",void 0);mr=Ga([JP(p.Interact)],mr);import{VarInt as YP}from"@serenityjs/binarystream";import{Proto as KP,Serialize as Ja}from"@serenityjs/raknet";function ho(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(ho,"_ts_decorate");function Aa(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Aa,"_ts_metadata");var Ue=class extends f{static{s(this,"InventoryContentPacket")}containerId;items;fullContainerName;storageItem};ho([Ja(YP),Aa("design:type",typeof ContainerId>"u"?Object:ContainerId)],Ue.prototype,"containerId",void 0);ho([Ja(Lf),Aa("design:type",typeof Array>"u"?Object:Array)],Ue.prototype,"items",void 0);ho([Ja(St),Aa("design:type",typeof St>"u"?Object:St)],Ue.prototype,"fullContainerName",void 0);ho([Ja(I),Aa("design:type",typeof I>"u"?Object:I)],Ue.prototype,"storageItem",void 0);Ue=ho([KP(p.InventoryContent)],Ue);import{VarInt as sm}from"@serenityjs/binarystream";import{Proto as QP,Serialize as yo}from"@serenityjs/raknet";function ri(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(ri,"_ts_decorate");function go(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(go,"_ts_metadata");var $t=class extends f{static{s(this,"InventorySlotPacket")}containerId;slot;fullContainerName;storageItem;item};ri([yo(sm),go("design:type",typeof ContainerId>"u"?Object:ContainerId)],$t.prototype,"containerId",void 0);ri([yo(sm),go("design:type",Number)],$t.prototype,"slot",void 0);ri([yo(St),go("design:type",typeof St>"u"?Object:St)],$t.prototype,"fullContainerName",void 0);ri([yo(I),go("design:type",typeof I>"u"?Object:I)],$t.prototype,"storageItem",void 0);ri([yo(I),go("design:type",typeof I>"u"?Object:I)],$t.prototype,"item",void 0);$t=ri([QP(p.InventorySlot)],$t);import{Proto as $P,Serialize as pm}from"@serenityjs/raknet";function Fc(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Fc,"_ts_decorate");function cm(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(cm,"_ts_metadata");var ii=class extends f{static{s(this,"InventoryTransactionPacket")}legacy;transaction};Fc([pm(nr),cm("design:type",typeof nr>"u"?Object:nr)],ii.prototype,"legacy",void 0);Fc([pm(pa),cm("design:type",typeof pa>"u"?Object:pa)],ii.prototype,"transaction",void 0);ii=Fc([$P(p.InventoryTransaction)],ii);import{Proto as LP,Serialize as EP}from"@serenityjs/raknet";function fm(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(fm,"_ts_decorate");function XP(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(XP,"_ts_metadata");var wo=class extends f{static{s(this,"ItemComponentPacket")}items};fm([EP(yd),XP("design:type",typeof Array>"u"?Object:Array)],wo.prototype,"items",void 0);wo=fm([LP(p.ItemComponent)],wo);import{Proto as tx,Serialize as ex}from"@serenityjs/raknet";function dm(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(dm,"_ts_decorate");function vP(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(vP,"_ts_metadata");var bo=class extends f{static{s(this,"ItemStackRequestPacket")}requests};dm([ex(xl),vP("design:type",typeof Array>"u"?Object:Array)],bo.prototype,"requests",void 0);bo=dm([tx(p.ItemStackRequest)],bo);import{Proto as ix,Serialize as ox}from"@serenityjs/raknet";function lm(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(lm,"_ts_decorate");function rx(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(rx,"_ts_metadata");var Po=class extends f{static{s(this,"ItemStackResponsePacket")}responses};lm([ox(Qf),rx("design:type",typeof Array>"u"?Object:Array)],Po.prototype,"responses",void 0);Po=lm([ix(p.ItemStackResponse)],Po);import{Endianness as Ya}from"@serenityjs/binarystream";import{Proto as ax}from"@serenityjs/raknet";function nx(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(nx,"_ts_decorate");var Ka=class extends f{static{s(this,"LevelChunkPacket")}x;z;dimension;subChunkCount;cacheEnabled;blobs;data;serialize(){if(this.writeVarInt(p.LevelChunk),this.writeZigZag(this.x),this.writeZigZag(this.z),this.writeZigZag(this.dimension),this.cacheEnabled?(this.writeVarInt(-2),this.writeUint16(this.subChunkCount,Ya.Little)):this.writeVarInt(this.subChunkCount),this.writeBool(this.cacheEnabled),this.blobs){this.writeVarInt(this.blobs.length);for(let e of this.blobs)this.writeUint64(e,Ya.Little)}return this.writeVarInt(this.data.byteLength),this.writeBuffer(this.data),this.getBuffer()}deserialize(){if(this.readVarInt(),this.x=this.readZigZag(),this.z=this.readZigZag(),this.dimension=this.readZigZag(),this.subChunkCount=this.readVarInt(),this.subChunkCount===-2&&(this.subChunkCount=this.readUint16(Ya.Little)),this.cacheEnabled=this.readBool(),this.cacheEnabled){let r=this.readVarInt();this.blobs=[];for(let o=0;o<r;o++)this.blobs.push(this.readUint64(Ya.Little))}let e=this.readVarInt();return this.data=this.readBuffer(e),this}};Ka=nx([ax(p.LevelChunk)],Ka);import{ZigZag as mm}from"@serenityjs/binarystream";import{Proto as sx,Serialize as qc}from"@serenityjs/raknet";function Qa(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Qa,"_ts_decorate");function Tc(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Tc,"_ts_metadata");var ur=class extends f{static{s(this,"LevelEventPacket")}event;position;data};Qa([qc(mm),Tc("design:type",typeof LevelEvent>"u"?Object:LevelEvent)],ur.prototype,"event",void 0);Qa([qc(l),Tc("design:type",typeof l>"u"?Object:l)],ur.prototype,"position",void 0);Qa([qc(mm),Tc("design:type",Number)],ur.prototype,"data",void 0);ur=Qa([sx(p.LevelEvent)],ur);import{Bool as um,VarInt as cx,VarString as px,ZigZag as fx}from"@serenityjs/binarystream";import{Proto as dx,Serialize as ni}from"@serenityjs/raknet";function hr(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(hr,"_ts_decorate");function oi(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(oi,"_ts_metadata");var Zt=class extends f{static{s(this,"LevelSoundEventPacket")}event;position;data;actorIdentifier;isBabyMob;isGlobal};hr([ni(cx),oi("design:type",typeof LevelSoundEvent>"u"?Object:LevelSoundEvent)],Zt.prototype,"event",void 0);hr([ni(l),oi("design:type",typeof l>"u"?Object:l)],Zt.prototype,"position",void 0);hr([ni(fx),oi("design:type",Number)],Zt.prototype,"data",void 0);hr([ni(px),oi("design:type",String)],Zt.prototype,"actorIdentifier",void 0);hr([ni(um),oi("design:type",Boolean)],Zt.prototype,"isBabyMob",void 0);hr([ni(um),oi("design:type",Boolean)],Zt.prototype,"isGlobal",void 0);Zt=hr([dx(p.LevelSoundEvent)],Zt);import{Int32 as lx}from"@serenityjs/binarystream";import{Proto as mx,Serialize as gm}from"@serenityjs/raknet";function Hc(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Hc,"_ts_decorate");function hm(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(hm,"_ts_metadata");var ai=class extends f{static{s(this,"LoginPacket")}protocol;tokens};Hc([gm(lx),hm("design:type",Number)],ai.prototype,"protocol",void 0);Hc([gm(Jn),hm("design:type",typeof Jn>"u"?Object:Jn)],ai.prototype,"tokens",void 0);ai=Hc([mx(p.Login)],ai);import{Int8 as ux,Uint8 as ym,VarLong as hx}from"@serenityjs/binarystream";import{Proto as gx,Serialize as Io}from"@serenityjs/raknet";function si(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(si,"_ts_decorate");function xo(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(xo,"_ts_metadata");var Xt=class extends f{static{s(this,"MobEquipmentPacket")}runtimeEntityId;item;slot;selectedSlot;containerId};si([Io(hx),xo("design:type",typeof BigInt>"u"?Object:BigInt)],Xt.prototype,"runtimeEntityId",void 0);si([Io(I),xo("design:type",typeof I>"u"?Object:I)],Xt.prototype,"item",void 0);si([Io(ym),xo("design:type",Number)],Xt.prototype,"slot",void 0);si([Io(ym),xo("design:type",Number)],Xt.prototype,"selectedSlot",void 0);si([Io(ux),xo("design:type",typeof ContainerId>"u"?Object:ContainerId)],Xt.prototype,"containerId",void 0);Xt=si([gx(p.MobEquipment)],Xt);import{VarInt as yx,VarString as wx}from"@serenityjs/binarystream";import{Proto as bx,Serialize as bm}from"@serenityjs/raknet";function Wc(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Wc,"_ts_decorate");function wm(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(wm,"_ts_metadata");var ci=class extends f{static{s(this,"ModalFormRequestPacket")}id;payload};Wc([bm(yx),wm("design:type",Number)],ci.prototype,"id",void 0);Wc([bm(wx),wm("design:type",String)],ci.prototype,"payload",void 0);ci=Wc([bx(p.ModalFormRequest)],ci);import{VarInt as Px,Bool as Pm,Endianness as xm}from"@serenityjs/binarystream";import{Proto as xx,Serialize as ko}from"@serenityjs/raknet";function pi(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(pi,"_ts_decorate");function Ro(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Ro,"_ts_metadata");var Lt=class extends f{static{s(this,"ModalFormResponsePacket")}id;response;data;canceled;reason};pi([ko(Px),Ro("design:type",Number)],Lt.prototype,"id",void 0);pi([ko(Pm),Ro("design:type",Boolean)],Lt.prototype,"response",void 0);pi([ko(Hf,xm.Big,"response"),Ro("design:type",Object)],Lt.prototype,"data",void 0);pi([ko(Pm),Ro("design:type",Boolean)],Lt.prototype,"canceled",void 0);pi([ko(Wf,xm.Big,"canceled"),Ro("design:type",Object)],Lt.prototype,"reason",void 0);Lt=pi([xx(p.ModalFormResponse)],Lt);import{Uint8 as Ix,VarLong as Rx}from"@serenityjs/binarystream";import{Proto as kx,Serialize as Xa}from"@serenityjs/raknet";function So(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(So,"_ts_decorate");function $a(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s($a,"_ts_metadata");var De=class extends f{static{s(this,"MoveActorAbsolutePacket")}runtimeId;flags;position;rotation};So([Xa(Rx),$a("design:type",typeof BigInt>"u"?Object:BigInt)],De.prototype,"runtimeId",void 0);So([Xa(Ix),$a("design:type",Number)],De.prototype,"flags",void 0);So([Xa(l),$a("design:type",typeof l>"u"?Object:l)],De.prototype,"position",void 0);So([Xa(sa),$a("design:type",typeof sa>"u"?Object:sa)],De.prototype,"rotation",void 0);De=So([kx(p.MoveActorAbsolute)],De);import{Float32 as Gc,Endianness as La,Uint8 as Sx,Bool as Bx,VarLong as Im}from"@serenityjs/binarystream";import{Proto as Ox,Serialize as zt}from"@serenityjs/raknet";function Ot(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Ot,"_ts_decorate");function Mt(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Mt,"_ts_metadata");var ot=class extends f{static{s(this,"MovePlayerPacket")}runtimeId;position;pitch;yaw;headYaw;mode;onGround;riddenRuntimeId;cause;inputTick};Ot([zt(Im),Mt("design:type",typeof BigInt>"u"?Object:BigInt)],ot.prototype,"runtimeId",void 0);Ot([zt(l),Mt("design:type",typeof l>"u"?Object:l)],ot.prototype,"position",void 0);Ot([zt(Gc,La.Little),Mt("design:type",Number)],ot.prototype,"pitch",void 0);Ot([zt(Gc,La.Little),Mt("design:type",Number)],ot.prototype,"yaw",void 0);Ot([zt(Gc,La.Little),Mt("design:type",Number)],ot.prototype,"headYaw",void 0);Ot([zt(Sx),Mt("design:type",typeof MoveMode>"u"?Object:MoveMode)],ot.prototype,"mode",void 0);Ot([zt(Bx),Mt("design:type",Boolean)],ot.prototype,"onGround",void 0);Ot([zt(Im),Mt("design:type",typeof BigInt>"u"?Object:BigInt)],ot.prototype,"riddenRuntimeId",void 0);Ot([zt(If,La.Little,"mode"),Mt("design:type",Object)],ot.prototype,"cause",void 0);Ot([zt(Q),Mt("design:type",typeof BigInt>"u"?Object:BigInt)],ot.prototype,"inputTick",void 0);ot=Ot([Ox(p.MovePlayer)],ot);import{VarInt as Cx}from"@serenityjs/binarystream";import{Proto as Vx,Serialize as Jc}from"@serenityjs/raknet";function Ea(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Ea,"_ts_decorate");function Ac(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Ac,"_ts_metadata");var gr=class extends f{static{s(this,"NetworkChunkPublisherUpdatePacket")}coordinate;radius;savedChunks};Ea([Jc(b),Ac("design:type",typeof b>"u"?Object:b)],gr.prototype,"coordinate",void 0);Ea([Jc(Cx),Ac("design:type",Number)],gr.prototype,"radius",void 0);Ea([Jc(Tf),Ac("design:type",typeof Array>"u"?Object:Array)],gr.prototype,"savedChunks",void 0);gr=Ea([Vx(p.NetworkChunkPublisherUpdate)],gr);import{Bool as jx,Endianness as Yc,Float32 as _x,Short as Rm,Uint8 as Ux}from"@serenityjs/binarystream";import{Proto as Dx,Serialize as Oo}from"@serenityjs/raknet";function fi(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(fi,"_ts_decorate");function Bo(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Bo,"_ts_metadata");var Et=class extends f{static{s(this,"NetworkSettingsPacket")}compressionThreshold;compressionMethod;clientThrottle;clientThreshold;clientScalar};fi([Oo(Rm,Yc.Little),Bo("design:type",Number)],Et.prototype,"compressionThreshold",void 0);fi([Oo(Rm,Yc.Little),Bo("design:type",typeof CompressionMethod>"u"?Object:CompressionMethod)],Et.prototype,"compressionMethod",void 0);fi([Oo(jx),Bo("design:type",Boolean)],Et.prototype,"clientThrottle",void 0);fi([Oo(Ux),Bo("design:type",Number)],Et.prototype,"clientThreshold",void 0);fi([Oo(_x,Yc.Little),Bo("design:type",Number)],Et.prototype,"clientScalar",void 0);Et=fi([Dx(p.NetworkSettings)],Et);import{VarString as Nx,ZigZag as Kc}from"@serenityjs/binarystream";import{Proto as Zx,Serialize as ts}from"@serenityjs/raknet";function Co(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Co,"_ts_decorate");function va(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(va,"_ts_metadata");var Ne=class extends f{static{s(this,"PacketViolationWarningPacket")}type;severity;packet;context};Co([ts(Kc),va("design:type",typeof ViolationType>"u"?Object:ViolationType)],Ne.prototype,"type",void 0);Co([ts(Kc),va("design:type",typeof ViolationSeverity>"u"?Object:ViolationSeverity)],Ne.prototype,"severity",void 0);Co([ts(Kc),va("design:type",typeof p>"u"?Object:p)],Ne.prototype,"packet",void 0);Co([ts(Nx),va("design:type",String)],Ne.prototype,"context",void 0);Ne=Co([Zx(p.PacketViolationWarning)],Ne);import{Int32 as zx}from"@serenityjs/binarystream";import{Proto as Fx,Serialize as Tx}from"@serenityjs/raknet";function km(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(km,"_ts_decorate");function Mx(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Mx,"_ts_metadata");var Vo=class extends f{static{s(this,"PlayStatusPacket")}status};km([Tx(zx),Mx("design:type",typeof PlayStatus>"u"?Object:PlayStatus)],Vo.prototype,"status",void 0);Vo=km([Fx(p.PlayStatus)],Vo);import{VarLong as qx,ZigZag as Sm}from"@serenityjs/binarystream";import{Proto as Hx,Serialize as _o}from"@serenityjs/raknet";function di(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(di,"_ts_decorate");function jo(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(jo,"_ts_metadata");var vt=class extends f{static{s(this,"PlayerActionPacket")}entityRuntimeId;action;blockPosition;resultPosition;face};di([_o(qx),jo("design:type",typeof BigInt>"u"?Object:BigInt)],vt.prototype,"entityRuntimeId",void 0);di([_o(Sm),jo("design:type",typeof PlayerActionType>"u"?Object:PlayerActionType)],vt.prototype,"action",void 0);di([_o(b),jo("design:type",typeof b>"u"?Object:b)],vt.prototype,"blockPosition",void 0);di([_o(b),jo("design:type",typeof b>"u"?Object:b)],vt.prototype,"resultPosition",void 0);di([_o(Sm),jo("design:type",Number)],vt.prototype,"face",void 0);vt=di([Hx(p.PlayerAction)],vt);import{Endianness as Wx,Float32 as Gx,VarInt as Qc}from"@serenityjs/binarystream";import{Proto as Ax,Serialize as A}from"@serenityjs/raknet";function H(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(H,"_ts_decorate");function G(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(G,"_ts_metadata");var D=class extends f{static{s(this,"PlayerAuthInputPacket")}rotation;position;motion;headYaw;inputData;inputMode;playMode;interactionMode;interactRotation;inputTick;positionDelta;inputTransaction;itemStackRequest;blockActions;predictedVehicle;analogueMotion;cameraOrientation;rawMoveVector};H([A(V),G("design:type",typeof V>"u"?Object:V)],D.prototype,"rotation",void 0);H([A(l),G("design:type",typeof l>"u"?Object:l)],D.prototype,"position",void 0);H([A(V),G("design:type",typeof V>"u"?Object:V)],D.prototype,"motion",void 0);H([A(Gx,Wx.Little),G("design:type",Number)],D.prototype,"headYaw",void 0);H([A(vr),G("design:type",typeof vr>"u"?Object:vr)],D.prototype,"inputData",void 0);H([A(Qc),G("design:type",typeof InputMode>"u"?Object:InputMode)],D.prototype,"inputMode",void 0);H([A(Qc),G("design:type",typeof PlayMode>"u"?Object:PlayMode)],D.prototype,"playMode",void 0);H([A(Qc),G("design:type",typeof InteractionMode>"u"?Object:InteractionMode)],D.prototype,"interactionMode",void 0);H([A(V),G("design:type",typeof V>"u"?Object:V)],D.prototype,"interactRotation",void 0);H([A(Q),G("design:type",typeof BigInt>"u"?Object:BigInt)],D.prototype,"inputTick",void 0);H([A(l),G("design:type",typeof l>"u"?Object:l)],D.prototype,"positionDelta",void 0);H([A(ja,0,"inputData"),G("design:type",Object)],D.prototype,"inputTransaction",void 0);H([A(Hl,0,"inputData"),G("design:type",Object)],D.prototype,"itemStackRequest",void 0);H([A(Ul,0,"inputData"),G("design:type",Object)],D.prototype,"blockActions",void 0);H([A(Cl,0,"inputData"),G("design:type",Object)],D.prototype,"predictedVehicle",void 0);H([A(V),G("design:type",typeof V>"u"?Object:V)],D.prototype,"analogueMotion",void 0);H([A(l),G("design:type",typeof l>"u"?Object:l)],D.prototype,"cameraOrientation",void 0);H([A(V),G("design:type",typeof V>"u"?Object:V)],D.prototype,"rawMoveVector",void 0);D=H([Ax(p.PlayerAuthInput)],D);import{Int8 as Jx,VarInt as Yx,Bool as Kx}from"@serenityjs/binarystream";import{Proto as Qx,Serialize as Xc}from"@serenityjs/raknet";function es(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(es,"_ts_decorate");function $c(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s($c,"_ts_metadata");var yr=class extends f{static{s(this,"PlayerHotbarPacket")}selectedSlot;windowId;selectSlot};es([Xc(Yx),$c("design:type",Number)],yr.prototype,"selectedSlot",void 0);es([Xc(Jx),$c("design:type",Number)],yr.prototype,"windowId",void 0);es([Xc(Kx),$c("design:type",Boolean)],yr.prototype,"selectSlot",void 0);yr=es([Qx(p.PlayerHotbar)],yr);import{Endianness as $x,Uint8 as Xx}from"@serenityjs/binarystream";import{Proto as Lx,Serialize as Om}from"@serenityjs/raknet";function Lc(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Lc,"_ts_decorate");function Bm(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Bm,"_ts_metadata");var li=class extends f{static{s(this,"PlayerListPacket")}action;records};Lc([Om(Xx),Bm("design:type",typeof PlayerListAction>"u"?Object:PlayerListAction)],li.prototype,"action",void 0);Lc([Om(jf,$x.Little,"action"),Bm("design:type",typeof Array>"u"?Object:Array)],li.prototype,"records",void 0);li=Lc([Lx(p.PlayerList)],li);import{ZigZong as vx}from"@serenityjs/binarystream";import{Proto as tI,Serialize as eI}from"@serenityjs/raknet";function Cm(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Cm,"_ts_decorate");function Ex(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Ex,"_ts_metadata");var Uo=class extends f{static{s(this,"RemoveEntityPacket")}uniqueEntityId};Cm([eI(vx),Ex("design:type",typeof BigInt>"u"?Object:BigInt)],Uo.prototype,"uniqueEntityId",void 0);Uo=Cm([tI(p.RemoveEntity)],Uo);import{Uint8 as rI,ZigZag as iI}from"@serenityjs/binarystream";import{Proto as oI,Serialize as jm}from"@serenityjs/raknet";function Ec(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Ec,"_ts_decorate");function Vm(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Vm,"_ts_metadata");var mi=class extends f{static{s(this,"RequestChunkRadiusPacket")}radius;maxRadius};Ec([jm(iI),Vm("design:type",Number)],mi.prototype,"radius",void 0);Ec([jm(rI),Vm("design:type",Number)],mi.prototype,"maxRadius",void 0);mi=Ec([oI(p.RequestChunkRadius)],mi);import{Int32 as aI}from"@serenityjs/binarystream";import{Proto as sI,Serialize as cI}from"@serenityjs/raknet";function _m(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(_m,"_ts_decorate");function nI(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(nI,"_ts_metadata");var Do=class extends f{static{s(this,"RequestNetworkSettingsPacket")}protocol};_m([cI(aI),nI("design:type",Number)],Do.prototype,"protocol",void 0);Do=_m([sI(p.RequestNetworkSettings)],Do);import{Uint8 as pI}from"@serenityjs/binarystream";import{Proto as fI,Serialize as Dm}from"@serenityjs/raknet";function vc(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(vc,"_ts_decorate");function Um(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Um,"_ts_metadata");var ui=class extends f{static{s(this,"ResourcePackClientResponsePacket")}response;packs};vc([Dm(pI),Um("design:type",typeof ResourcePackResponse>"u"?Object:ResourcePackResponse)],ui.prototype,"response",void 0);vc([Dm(pf),Um("design:type",typeof Array>"u"?Object:Array)],ui.prototype,"packs",void 0);ui=vc([fI(p.ResourcePackClientResponse)],ui);import{Endianness as hi}from"@serenityjs/binarystream";import{Proto as lI}from"@serenityjs/raknet";function dI(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(dI,"_ts_decorate");var rs=class extends f{static{s(this,"ResourcePackDataInfoPacket")}packId;maxChunkSize;chunkCount;fileSize;fileHash;isPremium;packType;serialize(){return this.writeVarInt(p.ResourcePackDataInfo),this.writeVarString(this.packId),this.writeUint32(this.maxChunkSize,hi.Little),this.writeUint32(this.chunkCount,hi.Little),this.writeUint64(this.fileSize,hi.Little),this.writeVarInt(this.fileHash.byteLength),this.writeBuffer(this.fileHash),this.writeBool(this.isPremium),this.writeUint8(this.packType),this.getBuffer()}deserialize(){this.readVarInt(),this.packId=this.readVarString(),this.maxChunkSize=this.readUint32(hi.Little),this.chunkCount=this.readUint32(hi.Little),this.fileSize=this.readUint64(hi.Little);let e=this.readVarInt();return this.fileHash=this.readBuffer(e),this.isPremium=this.readBool(),this.packType=this.readUint8(),this}};rs=dI([lI(p.ResourcePackDataInfo)],rs);import{Endianness as is}from"@serenityjs/binarystream";import{Proto as uI}from"@serenityjs/raknet";function mI(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(mI,"_ts_decorate");var os=class extends f{static{s(this,"ResourcePackChunkDataPacket")}packId;chunkId;byteOffset;chunkData;serialize(){return this.writeVarInt(p.ResourcePackChunkData),this.writeVarString(this.packId),this.writeUint32(this.chunkId,is.Little),this.writeUint64(this.byteOffset,is.Little),this.writeVarInt(this.chunkData.byteLength),this.writeBuffer(this.chunkData),this.getBuffer()}deserialize(){this.readVarInt(),this.packId=this.readVarString(),this.chunkId=this.readUint32(is.Little),this.byteOffset=this.readUint64(is.Little);let e=this.readVarInt();return this.chunkData=this.readBuffer(e),this}};os=mI([uI(p.ResourcePackChunkData)],os);import{Endianness as hI,Uint32 as gI,VarString as yI}from"@serenityjs/binarystream";import{Proto as wI,Serialize as Zm}from"@serenityjs/raknet";function tp(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(tp,"_ts_decorate");function Nm(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Nm,"_ts_metadata");var gi=class extends f{static{s(this,"ResourcePackChunkRequestPacket")}packId;chunkId};tp([Zm(yI),Nm("design:type",String)],gi.prototype,"packId",void 0);tp([Zm(gI,hI.Little),Nm("design:type",Number)],gi.prototype,"chunkId",void 0);gi=tp([wI(p.ResourcePackChunkRequest)],gi);import{Bool as ep,VarString as bI}from"@serenityjs/binarystream";import{Proto as PI,Serialize as br}from"@serenityjs/raknet";function Ze(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Ze,"_ts_decorate");function wr(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(wr,"_ts_metadata");var Ct=class extends f{static{s(this,"ResourcePackStackPacket")}mustAccept;behaviorPacks;texturePacks;gameVersion;experiments;experimentsPreviouslyToggled;hasEditorPacks};Ze([br(ep),wr("design:type",Boolean)],Ct.prototype,"mustAccept",void 0);Ze([br(Xs),wr("design:type",typeof Array>"u"?Object:Array)],Ct.prototype,"behaviorPacks",void 0);Ze([br(Xs),wr("design:type",typeof Array>"u"?Object:Array)],Ct.prototype,"texturePacks",void 0);Ze([br(bI),wr("design:type",String)],Ct.prototype,"gameVersion",void 0);Ze([br(Qn),wr("design:type",typeof Array>"u"?Object:Array)],Ct.prototype,"experiments",void 0);Ze([br(ep),wr("design:type",Boolean)],Ct.prototype,"experimentsPreviouslyToggled",void 0);Ze([br(ep),wr("design:type",Boolean)],Ct.prototype,"hasEditorPacks",void 0);Ct=Ze([PI(p.ResourcePackStack)],Ct);import{Bool as rp,Uuid as xI,VarString as II}from"@serenityjs/binarystream";import{Proto as RI,Serialize as wi}from"@serenityjs/raknet";function Pr(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Pr,"_ts_decorate");function yi(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(yi,"_ts_metadata");var Ft=class extends f{static{s(this,"ResourcePacksInfoPacket")}mustAccept;hasAddons;hasScripts;worldTemplateUuid;worldTemplateVersion;packs};Pr([wi(rp),yi("design:type",Boolean)],Ft.prototype,"mustAccept",void 0);Pr([wi(rp),yi("design:type",Boolean)],Ft.prototype,"hasAddons",void 0);Pr([wi(rp),yi("design:type",Boolean)],Ft.prototype,"hasScripts",void 0);Pr([wi(xI),yi("design:type",String)],Ft.prototype,"worldTemplateUuid",void 0);Pr([wi(II),yi("design:type",String)],Ft.prototype,"worldTemplateVersion",void 0);Pr([wi(af),yi("design:type",typeof Array>"u"?Object:Array)],Ft.prototype,"packs",void 0);Ft=Pr([RI(p.ResourcePacksInfo)],Ft);import{Uint8 as kI,VarLong as SI}from"@serenityjs/binarystream";import{Proto as BI,Serialize as op}from"@serenityjs/raknet";function ns(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(ns,"_ts_decorate");function ip(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(ip,"_ts_metadata");var xr=class extends f{static{s(this,"RespawnPacket")}position;state;runtimeEntityId};ns([op(l),ip("design:type",typeof l>"u"?Object:l)],xr.prototype,"position",void 0);ns([op(kI),ip("design:type",typeof RespawnState>"u"?Object:RespawnState)],xr.prototype,"state",void 0);ns([op(SI),ip("design:type",typeof BigInt>"u"?Object:BigInt)],xr.prototype,"runtimeEntityId",void 0);xr=ns([BI(p.Respawn)],xr);import{VarString as zm}from"@serenityjs/binarystream";import{Proto as OI,Serialize as Fm}from"@serenityjs/raknet";function np(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(np,"_ts_decorate");function Mm(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Mm,"_ts_metadata");var bi=class extends f{static{s(this,"ScriptMessagePacket")}messageId;data};np([Fm(zm),Mm("design:type",String)],bi.prototype,"messageId",void 0);np([Fm(zm),Mm("design:type",String)],bi.prototype,"data",void 0);bi=np([OI(p.ScriptMessage)],bi);import{VarLong as CI}from"@serenityjs/binarystream";import{Proto as VI,Serialize as sp}from"@serenityjs/raknet";function as(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(as,"_ts_decorate");function ap(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(ap,"_ts_metadata");var Ir=class extends f{static{s(this,"SetActorMotionPacket")}runtimeId;motion;inputTick};as([sp(CI),ap("design:type",typeof BigInt>"u"?Object:BigInt)],Ir.prototype,"runtimeId",void 0);as([sp(l),ap("design:type",typeof l>"u"?Object:l)],Ir.prototype,"motion",void 0);as([sp(Q),ap("design:type",typeof BigInt>"u"?Object:BigInt)],Ir.prototype,"inputTick",void 0);Ir=as([VI(p.SetActorMotion)],Ir);import{Bool as _I}from"@serenityjs/binarystream";import{Proto as UI,Serialize as DI}from"@serenityjs/raknet";function Tm(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Tm,"_ts_decorate");function jI(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(jI,"_ts_metadata");var No=class extends f{static{s(this,"SetCommandsEnabledPacket")}enabled};Tm([DI(_I),jI("design:type",Boolean)],No.prototype,"enabled",void 0);No=Tm([UI(p.SetCommandsEnabled)],No);import{VarLong as NI}from"@serenityjs/binarystream";import{Proto as ZI,Serialize as cs}from"@serenityjs/raknet";function Zo(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Zo,"_ts_decorate");function ss(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(ss,"_ts_metadata");var Me=class extends f{static{s(this,"SetActorDataPacket")}runtimeEntityId;data;properties;inputTick;actorFlagSet=new Nt(ro.Reserved0,Z.Long,0n);setActorFlag(e,r){let o=r?this.actorFlagSet.value^1n<<BigInt(e):this.actorFlagSet.value^0n<<BigInt(e);this.actorFlagSet.value=o;let n=new Nt(ro.Reserved0,Z.Long,o),i=this.data.findIndex(a=>a.identifier===ro.Reserved0);i!==-1?this.data[i]=n:this.data.push(n)}getActorFlag(e){return(this.actorFlagSet.value&1n<<BigInt(e))===1n}};Zo([cs(NI),ss("design:type",typeof BigInt>"u"?Object:BigInt)],Me.prototype,"runtimeEntityId",void 0);Zo([cs(Nt),ss("design:type",typeof Array>"u"?Object:Array)],Me.prototype,"data",void 0);Zo([cs(bt),ss("design:type",typeof bt>"u"?Object:bt)],Me.prototype,"properties",void 0);Zo([cs(Q),ss("design:type",typeof BigInt>"u"?Object:BigInt)],Me.prototype,"inputTick",void 0);Me=Zo([ZI(p.SetActorData)],Me);import{VarLong as zI}from"@serenityjs/binarystream";import{Proto as FI,Serialize as TI}from"@serenityjs/raknet";function qm(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(qm,"_ts_decorate");function MI(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(MI,"_ts_metadata");var Mo=class extends f{static{s(this,"SetLocalPlayerAsInitializedPacket")}runtimeEntityId};qm([TI(zI),MI("design:type",typeof BigInt>"u"?Object:BigInt)],Mo.prototype,"runtimeEntityId",void 0);Mo=qm([FI(p.SetLocalPlayerAsInitialized)],Mo);import{ZigZag as HI}from"@serenityjs/binarystream";import{Proto as WI,Serialize as GI}from"@serenityjs/raknet";function Hm(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Hm,"_ts_decorate");function qI(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(qI,"_ts_metadata");var zo=class extends f{static{s(this,"SetPlayerGameTypePacket")}gamemode};Hm([GI(HI),qI("design:type",typeof Gamemode>"u"?Object:Gamemode)],zo.prototype,"gamemode",void 0);zo=Hm([WI(p.SetPlayerGameType)],zo);import{VarString as ps,ZigZag as fs}from"@serenityjs/binarystream";import{Proto as AI,Serialize as Fe}from"@serenityjs/raknet";function te(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(te,"_ts_decorate");function ze(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(ze,"_ts_metadata");var xt=class extends f{static{s(this,"SetTitlePacket")}type;text;fadeInTime;stayTime;fadeOutTime;xuid;platformOnlineId;filteredText};te([Fe(fs),ze("design:type",typeof TitleType>"u"?Object:TitleType)],xt.prototype,"type",void 0);te([Fe(ps),ze("design:type",String)],xt.prototype,"text",void 0);te([Fe(fs),ze("design:type",Number)],xt.prototype,"fadeInTime",void 0);te([Fe(fs),ze("design:type",Number)],xt.prototype,"stayTime",void 0);te([Fe(fs),ze("design:type",Number)],xt.prototype,"fadeOutTime",void 0);te([Fe(ps),ze("design:type",String)],xt.prototype,"xuid",void 0);te([Fe(ps),ze("design:type",String)],xt.prototype,"platformOnlineId",void 0);te([Fe(ps),ze("design:type",String)],xt.prototype,"filteredText",void 0);xt=te([AI(p.SetTitle)],xt);import{Bool as B,Endianness as Vt,Float32 as ds,Int16 as JI,Int32 as cp,Int64 as YI,Uint64 as Wm,Uint8 as Fo,VarInt as Gm,VarLong as KI,VarString as lt,ZigZag as jt,ZigZong as QI,Uuid as $I}from"@serenityjs/binarystream";import{Proto as XI,Serialize as y}from"@serenityjs/raknet";function h(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(h,"_ts_decorate");function g(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(g,"_ts_metadata");var m=class extends f{static{s(this,"StartGamePacket")}entityId;runtimeEntityId;playerGamemode;playerPosition;pitch;yaw;seed;biomeType;biomeName;dimension;generator;worldGamemode;hardcore;difficulty;spawnPosition;achievementsDisabled;editorWorldType;createdInEdior;exportedFromEdior;dayCycleStopTime;eduOffer;eduFeatures;eduProductUuid;rainLevel;lightningLevel;confirmedPlatformLockedContent;multiplayerGame;broadcastToLan;xblBroadcastMode;platformBroadcastMode;commandsEnabled;texturePacksRequired;gamerules;experiments;experimentsPreviouslyToggled;bonusChest;mapEnabled;permissionLevel;serverChunkTickRange;hasLockedBehaviorPack;hasLockedResourcePack;isFromLockedWorldTemplate;useMsaGamertagsOnly;isFromWorldTemplate;isWorldTemplateOptionLocked;onlySpawnV1Villagers;personaDisabled;customSkinsDisabled;emoteChatMuted;gameVersion;limitedWorldWidth;limitedWorldLength;isNewNether;eduResourceUriButtonName;eduResourceUriLink;experimentalGameplayOverride;chatRestrictionLevel;disablePlayerInteractions;serverIdentfier;worldIdentifier;scenarioIdentifier;levelId;worldName;premiumWorldTemplateId;isTrial;movementAuthority;rewindHistorySize;serverAuthoritativeBlockBreaking;currentTick;enchantmentSeed;blockTypeDefinitions;items;multiplayerCorrelationId;serverAuthoritativeInventory;engine;propertyData1;propertyData2;propertyData3;blockPaletteChecksum;worldTemplateId;clientSideGeneration;blockNetworkIdsAreHashes;serverControlledSounds};h([y(QI),g("design:type",typeof BigInt>"u"?Object:BigInt)],m.prototype,"entityId",void 0);h([y(KI),g("design:type",typeof BigInt>"u"?Object:BigInt)],m.prototype,"runtimeEntityId",void 0);h([y(jt),g("design:type",typeof Gamemode>"u"?Object:Gamemode)],m.prototype,"playerGamemode",void 0);h([y(l),g("design:type",typeof l>"u"?Object:l)],m.prototype,"playerPosition",void 0);h([y(ds,Vt.Little),g("design:type",Number)],m.prototype,"pitch",void 0);h([y(ds,Vt.Little),g("design:type",Number)],m.prototype,"yaw",void 0);h([y(Wm,Vt.Little),g("design:type",typeof BigInt>"u"?Object:BigInt)],m.prototype,"seed",void 0);h([y(JI,Vt.Little),g("design:type",Number)],m.prototype,"biomeType",void 0);h([y(lt),g("design:type",String)],m.prototype,"biomeName",void 0);h([y(jt),g("design:type",Number)],m.prototype,"dimension",void 0);h([y(jt),g("design:type",Number)],m.prototype,"generator",void 0);h([y(jt),g("design:type",typeof Gamemode>"u"?Object:Gamemode)],m.prototype,"worldGamemode",void 0);h([y(B),g("design:type",Boolean)],m.prototype,"hardcore",void 0);h([y(jt),g("design:type",typeof Difficulty>"u"?Object:Difficulty)],m.prototype,"difficulty",void 0);h([y(b),g("design:type",typeof b>"u"?Object:b)],m.prototype,"spawnPosition",void 0);h([y(B),g("design:type",Boolean)],m.prototype,"achievementsDisabled",void 0);h([y(jt),g("design:type",Number)],m.prototype,"editorWorldType",void 0);h([y(B),g("design:type",Boolean)],m.prototype,"createdInEdior",void 0);h([y(B),g("design:type",Boolean)],m.prototype,"exportedFromEdior",void 0);h([y(jt),g("design:type",Number)],m.prototype,"dayCycleStopTime",void 0);h([y(jt),g("design:type",Number)],m.prototype,"eduOffer",void 0);h([y(B),g("design:type",Boolean)],m.prototype,"eduFeatures",void 0);h([y(lt),g("design:type",String)],m.prototype,"eduProductUuid",void 0);h([y(ds,Vt.Little),g("design:type",Number)],m.prototype,"rainLevel",void 0);h([y(ds,Vt.Little),g("design:type",Number)],m.prototype,"lightningLevel",void 0);h([y(B),g("design:type",Boolean)],m.prototype,"confirmedPlatformLockedContent",void 0);h([y(B),g("design:type",Boolean)],m.prototype,"multiplayerGame",void 0);h([y(B),g("design:type",Boolean)],m.prototype,"broadcastToLan",void 0);h([y(Gm),g("design:type",Number)],m.prototype,"xblBroadcastMode",void 0);h([y(Gm),g("design:type",Number)],m.prototype,"platformBroadcastMode",void 0);h([y(B),g("design:type",Boolean)],m.prototype,"commandsEnabled",void 0);h([y(B),g("design:type",Boolean)],m.prototype,"texturePacksRequired",void 0);h([y(Wr),g("design:type",typeof Array>"u"?Object:Array)],m.prototype,"gamerules",void 0);h([y(Qn),g("design:type",typeof Array>"u"?Object:Array)],m.prototype,"experiments",void 0);h([y(B),g("design:type",Boolean)],m.prototype,"experimentsPreviouslyToggled",void 0);h([y(B),g("design:type",Boolean)],m.prototype,"bonusChest",void 0);h([y(B),g("design:type",Boolean)],m.prototype,"mapEnabled",void 0);h([y(Fo),g("design:type",typeof PermissionLevel>"u"?Object:PermissionLevel)],m.prototype,"permissionLevel",void 0);h([y(cp,Vt.Little),g("design:type",Number)],m.prototype,"serverChunkTickRange",void 0);h([y(B),g("design:type",Boolean)],m.prototype,"hasLockedBehaviorPack",void 0);h([y(B),g("design:type",Boolean)],m.prototype,"hasLockedResourcePack",void 0);h([y(B),g("design:type",Boolean)],m.prototype,"isFromLockedWorldTemplate",void 0);h([y(B),g("design:type",Boolean)],m.prototype,"useMsaGamertagsOnly",void 0);h([y(B),g("design:type",Boolean)],m.prototype,"isFromWorldTemplate",void 0);h([y(B),g("design:type",Boolean)],m.prototype,"isWorldTemplateOptionLocked",void 0);h([y(B),g("design:type",Boolean)],m.prototype,"onlySpawnV1Villagers",void 0);h([y(B),g("design:type",Boolean)],m.prototype,"personaDisabled",void 0);h([y(B),g("design:type",Boolean)],m.prototype,"customSkinsDisabled",void 0);h([y(B),g("design:type",Boolean)],m.prototype,"emoteChatMuted",void 0);h([y(lt),g("design:type",String)],m.prototype,"gameVersion",void 0);h([y(cp,Vt.Little),g("design:type",Number)],m.prototype,"limitedWorldWidth",void 0);h([y(cp,Vt.Little),g("design:type",Number)],m.prototype,"limitedWorldLength",void 0);h([y(B),g("design:type",Boolean)],m.prototype,"isNewNether",void 0);h([y(lt),g("design:type",String)],m.prototype,"eduResourceUriButtonName",void 0);h([y(lt),g("design:type",String)],m.prototype,"eduResourceUriLink",void 0);h([y(B),g("design:type",Boolean)],m.prototype,"experimentalGameplayOverride",void 0);h([y(Fo),g("design:type",Number)],m.prototype,"chatRestrictionLevel",void 0);h([y(B),g("design:type",Boolean)],m.prototype,"disablePlayerInteractions",void 0);h([y(lt),g("design:type",String)],m.prototype,"serverIdentfier",void 0);h([y(lt),g("design:type",String)],m.prototype,"worldIdentifier",void 0);h([y(lt),g("design:type",String)],m.prototype,"scenarioIdentifier",void 0);h([y(lt),g("design:type",String)],m.prototype,"levelId",void 0);h([y(lt),g("design:type",String)],m.prototype,"worldName",void 0);h([y(lt),g("design:type",String)],m.prototype,"premiumWorldTemplateId",void 0);h([y(B),g("design:type",Boolean)],m.prototype,"isTrial",void 0);h([y(jt),g("design:type",typeof Hn>"u"?Object:Hn)],m.prototype,"movementAuthority",void 0);h([y(jt),g("design:type",Number)],m.prototype,"rewindHistorySize",void 0);h([y(B),g("design:type",Boolean)],m.prototype,"serverAuthoritativeBlockBreaking",void 0);h([y(YI,Vt.Little),g("design:type",typeof BigInt>"u"?Object:BigInt)],m.prototype,"currentTick",void 0);h([y(jt),g("design:type",Number)],m.prototype,"enchantmentSeed",void 0);h([y(wf),g("design:type",typeof Array>"u"?Object:Array)],m.prototype,"blockTypeDefinitions",void 0);h([y(Pf),g("design:type",typeof Array>"u"?Object:Array)],m.prototype,"items",void 0);h([y(lt),g("design:type",String)],m.prototype,"multiplayerCorrelationId",void 0);h([y(B),g("design:type",Boolean)],m.prototype,"serverAuthoritativeInventory",void 0);h([y(lt),g("design:type",String)],m.prototype,"engine",void 0);h([y(Fo),g("design:type",Object)],m.prototype,"propertyData1",void 0);h([y(Fo),g("design:type",Object)],m.prototype,"propertyData2",void 0);h([y(Fo),g("design:type",Object)],m.prototype,"propertyData3",void 0);h([y(Wm,Vt.Little),g("design:type",typeof BigInt>"u"?Object:BigInt)],m.prototype,"blockPaletteChecksum",void 0);h([y($I),g("design:type",String)],m.prototype,"worldTemplateId",void 0);h([y(B),g("design:type",Boolean)],m.prototype,"clientSideGeneration",void 0);h([y(B),g("design:type",Boolean)],m.prototype,"blockNetworkIdsAreHashes",void 0);h([y(B),g("design:type",Boolean)],m.prototype,"serverControlledSounds",void 0);m=h([XI(p.StartGame)],m);import{Uint8 as LI,Bool as EI,VarString as ls,Endianness as Am}from"@serenityjs/binarystream";import{Proto as vI,Serialize as qe}from"@serenityjs/raknet";function ee(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(ee,"_ts_decorate");function Te(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Te,"_ts_metadata");var It=class extends f{static{s(this,"TextPacket")}type;needsTranslation;source;message;parameters;xuid;platformChatId;filtered};ee([qe(LI),Te("design:type",typeof TextPacketType>"u"?Object:TextPacketType)],It.prototype,"type",void 0);ee([qe(EI),Te("design:type",Boolean)],It.prototype,"needsTranslation",void 0);ee([qe(Df,Am.Little,"type"),Te("design:type",Object)],It.prototype,"source",void 0);ee([qe(ls),Te("design:type",String)],It.prototype,"message",void 0);ee([qe(Nf,Am.Little,"type"),Te("design:type",Object)],It.prototype,"parameters",void 0);ee([qe(ls),Te("design:type",String)],It.prototype,"xuid",void 0);ee([qe(ls),Te("design:type",String)],It.prototype,"platformChatId",void 0);ee([qe(ls),Te("design:type",String)],It.prototype,"filtered",void 0);It=ee([vI(p.Text)],It);import{VarString as Ym}from"@serenityjs/binarystream";import{Proto as tR,Serialize as Km}from"@serenityjs/raknet";function pp(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(pp,"_ts_decorate");function Jm(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Jm,"_ts_metadata");var Pi=class extends f{static{s(this,"ToastRequestPacket")}title;message};pp([Km(Ym),Jm("design:type",String)],Pi.prototype,"title",void 0);pp([Km(Ym),Jm("design:type",String)],Pi.prototype,"message",void 0);Pi=pp([tR(p.ToastRequest)],Pi);import{Endianness as eR,Int64 as rR,Uint8 as Qm}from"@serenityjs/binarystream";import{Proto as iR,Serialize as us}from"@serenityjs/raknet";function To(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(To,"_ts_decorate");function ms(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(ms,"_ts_metadata");var He=class extends f{static{s(this,"UpdateAbilitiesPacket")}entityUniqueId;permissionLevel;commandPermissionLevel;abilities};To([us(rR,eR.Little),ms("design:type",typeof BigInt>"u"?Object:BigInt)],He.prototype,"entityUniqueId",void 0);To([us(Qm),ms("design:type",typeof PermissionLevel>"u"?Object:PermissionLevel)],He.prototype,"permissionLevel",void 0);To([us(Qm),ms("design:type",typeof CommandPermissionLevel>"u"?Object:CommandPermissionLevel)],He.prototype,"commandPermissionLevel",void 0);To([us(ea),ms("design:type",typeof Array>"u"?Object:Array)],He.prototype,"abilities",void 0);He=To([iR(p.UpdateAbilities)],He);import{Bool as Ho}from"@serenityjs/binarystream";import{Proto as oR,Serialize as Wo}from"@serenityjs/raknet";function xi(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(xi,"_ts_decorate");function qo(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(qo,"_ts_metadata");var re=class extends f{static{s(this,"UpdateAdventureSettingsPacket")}noPvm;noPvp;immutableWorld;showNameTags;autoJump};xi([Wo(Ho),qo("design:type",Boolean)],re.prototype,"noPvm",void 0);xi([Wo(Ho),qo("design:type",Boolean)],re.prototype,"noPvp",void 0);xi([Wo(Ho),qo("design:type",Boolean)],re.prototype,"immutableWorld",void 0);xi([Wo(Ho),qo("design:type",Boolean)],re.prototype,"showNameTags",void 0);xi([Wo(Ho),qo("design:type",Boolean)],re.prototype,"autoJump",void 0);re=xi([oR(p.UpdateAdventureSettings)],re);import{VarLong as nR}from"@serenityjs/binarystream";import{Proto as aR,Serialize as dp}from"@serenityjs/raknet";function hs(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(hs,"_ts_decorate");function fp(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(fp,"_ts_metadata");var Rr=class extends f{static{s(this,"UpdateAttributesPacket")}runtimeActorId;attributes;inputTick};hs([dp(nR),fp("design:type",typeof BigInt>"u"?Object:BigInt)],Rr.prototype,"runtimeActorId",void 0);hs([dp(Mf),fp("design:type",typeof Array>"u"?Object:Array)],Rr.prototype,"attributes",void 0);hs([dp(Q),fp("design:type",typeof BigInt>"u"?Object:BigInt)],Rr.prototype,"inputTick",void 0);Rr=hs([aR(p.UpdateAttributes)],Rr);import{VarInt as lp}from"@serenityjs/binarystream";import{Proto as sR,Serialize as ys}from"@serenityjs/raknet";function Go(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Go,"_ts_decorate");function gs(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(gs,"_ts_metadata");var We=class extends f{static{s(this,"UpdateBlockPacket")}position;networkBlockId;flags;layer};Go([ys(b),gs("design:type",typeof b>"u"?Object:b)],We.prototype,"position",void 0);Go([ys(lp),gs("design:type",Number)],We.prototype,"networkBlockId",void 0);Go([ys(lp),gs("design:type",typeof UpdateBlockFlagsType>"u"?Object:UpdateBlockFlagsType)],We.prototype,"flags",void 0);Go([ys(lp),gs("design:type",typeof UpdateBlockLayerType>"u"?Object:UpdateBlockLayerType)],We.prototype,"layer",void 0);We=Go([sR(p.UpdateBlock)],We);import{ZigZag as pR}from"@serenityjs/binarystream";import{Proto as fR,Serialize as dR}from"@serenityjs/raknet";function $m(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s($m,"_ts_decorate");function cR(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(cR,"_ts_metadata");var Ao=class extends f{static{s(this,"SetTimePacket")}time};$m([dR(pR),cR("design:type",Number)],Ao.prototype,"time",void 0);Ao=$m([fR(p.SetTime)],Ao);import{VarString as mR}from"@serenityjs/binarystream";import{Proto as uR,Serialize as hR}from"@serenityjs/raknet";function Xm(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Xm,"_ts_decorate");function lR(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(lR,"_ts_metadata");var Jo=class extends f{static{s(this,"RemoveObjectivePacket")}objectiveName};Xm([hR(mR),lR("design:type",String)],Jo.prototype,"objectiveName",void 0);Jo=Xm([uR(p.RemoveObjective)],Jo);import{VarString as ws,ZigZag as gR}from"@serenityjs/binarystream";import{Proto as yR,Serialize as Ko}from"@serenityjs/raknet";function Ii(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Ii,"_ts_decorate");function Yo(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Yo,"_ts_metadata");var ie=class extends f{static{s(this,"SetDisplayObjectivePacket")}displaySlot;objectiveName;displayName;criteriaName;sortOrder};Ii([Ko(ws),Yo("design:type",typeof DisplaySlotType>"u"?Object:DisplaySlotType)],ie.prototype,"displaySlot",void 0);Ii([Ko(ws),Yo("design:type",String)],ie.prototype,"objectiveName",void 0);Ii([Ko(ws),Yo("design:type",String)],ie.prototype,"displayName",void 0);Ii([Ko(ws),Yo("design:type",String)],ie.prototype,"criteriaName",void 0);Ii([Ko(gR),Yo("design:type",typeof ObjectiveSortOrder>"u"?Object:ObjectiveSortOrder)],ie.prototype,"sortOrder",void 0);ie=Ii([yR(p.SetDisplayObjective)],ie);import{VarInt as wR}from"@serenityjs/binarystream";import{Proto as bR,Serialize as Em}from"@serenityjs/raknet";function mp(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(mp,"_ts_decorate");function Lm(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Lm,"_ts_metadata");var Ri=class extends f{static{s(this,"SetScorePacket")}type;entries};mp([Em(wR),Lm("design:type",typeof ScoreboardActionType>"u"?Object:ScoreboardActionType)],Ri.prototype,"type",void 0);mp([Em(Cd,0,"type"),Lm("design:type",typeof Array>"u"?Object:Array)],Ri.prototype,"entries",void 0);Ri=mp([bR(p.SetScore)],Ri);import{VarInt as PR}from"@serenityjs/binarystream";import{Proto as xR,Serialize as tu}from"@serenityjs/raknet";function up(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(up,"_ts_decorate");function vm(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(vm,"_ts_metadata");var ki=class extends f{static{s(this,"SetScoreboardIdentityPacket")}action;entries};up([tu(PR),vm("design:type",typeof ScoreboardIdentityAction>"u"?Object:ScoreboardIdentityAction)],ki.prototype,"action",void 0);up([tu(fa),vm("design:type",typeof fa>"u"?Object:fa)],ki.prototype,"entries",void 0);ki=up([xR(p.SetScoreboardIdentity)],ki);import{VarString as IR,Uint16 as RR,Endianness as kR,Bool as SR}from"@serenityjs/binarystream";import{Proto as BR,Serialize as gp}from"@serenityjs/raknet";function bs(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(bs,"_ts_decorate");function hp(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(hp,"_ts_metadata");var kr=class extends f{static{s(this,"TransferPacket")}address;port;reloadWorld};bs([gp(IR),hp("design:type",String)],kr.prototype,"address",void 0);bs([gp(RR,kR.Little),hp("design:type",Number)],kr.prototype,"port",void 0);bs([gp(SR),hp("design:type",Boolean)],kr.prototype,"reloadWorld",void 0);kr=bs([BR(p.Transfer)],kr);import{Proto as OR,Serialize as ru}from"@serenityjs/raknet";import{Uint8 as CR}from"@serenityjs/binarystream";function yp(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(yp,"_ts_decorate");function eu(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(eu,"_ts_metadata");var Si=class extends f{static{s(this,"SetHudPacket")}elements;visibility};yp([ru(_d),eu("design:type",typeof Array>"u"?Object:Array)],Si.prototype,"elements",void 0);yp([ru(CR),eu("design:type",typeof HudVisibility>"u"?Object:HudVisibility)],Si.prototype,"visibility",void 0);Si=yp([OR(p.SetHud)],Si);import{VarLong as ou}from"@serenityjs/binarystream";import{Proto as VR,Serialize as nu}from"@serenityjs/raknet";function wp(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(wp,"_ts_decorate");function iu(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(iu,"_ts_metadata");var Bi=class extends f{static{s(this,"TakeItemActorPacket")}itemRuntimeId;targetRuntimeId};wp([nu(ou),iu("design:type",typeof BigInt>"u"?Object:BigInt)],Bi.prototype,"itemRuntimeId",void 0);wp([nu(ou),iu("design:type",typeof BigInt>"u"?Object:BigInt)],Bi.prototype,"targetRuntimeId",void 0);Bi=wp([VR(p.TakeItemActor)],Bi);import{Bool as jR,Endianness as _R,Uint64 as UR}from"@serenityjs/binarystream";import{Proto as DR,Serialize as su}from"@serenityjs/raknet";function bp(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(bp,"_ts_decorate");function au(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(au,"_ts_metadata");var Oi=class extends f{static{s(this,"NetworkStackLatencyPacket")}timestamp;fromServer};bp([su(UR,_R.Little),au("design:type",typeof BigInt>"u"?Object:BigInt)],Oi.prototype,"timestamp",void 0);bp([su(jR),au("design:type",Boolean)],Oi.prototype,"fromServer",void 0);Oi=bp([DR(p.NetworkStackLatency)],Oi);import{VarInt as NR,ZigZong as ZR,Endianness as cu}from"@serenityjs/binarystream";import{Proto as MR,Serialize as xs}from"@serenityjs/raknet";function Qo(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Qo,"_ts_decorate");function Ps(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Ps,"_ts_metadata");var Ge=class extends f{static{s(this,"BossEventPacket")}targetUniqueId;type;add;update};Qo([xs(ZR),Ps("design:type",typeof BigInt>"u"?Object:BigInt)],Ge.prototype,"targetUniqueId",void 0);Qo([xs(NR),Ps("design:type",typeof BossEventUpdateType>"u"?Object:BossEventUpdateType)],Ge.prototype,"type",void 0);Qo([xs(la,cu.Little,"type"),Ps("design:type",typeof la>"u"?Object:la)],Ge.prototype,"add",void 0);Qo([xs(ua,cu.Little,"type"),Ps("design:type",typeof ua>"u"?Object:ua)],Ge.prototype,"update",void 0);Ge=Qo([MR(p.BossEvent)],Ge);import{Endianness as zR,Uint64 as FR,ZigZag as TR,VarString as Is}from"@serenityjs/binarystream";import{Proto as qR,Serialize as Vi}from"@serenityjs/raknet";function Sr(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Sr,"_ts_decorate");function Ci(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Ci,"_ts_metadata");var Tt=class extends f{static{s(this,"NpcDialoguePacket")}uniqueEntityId;action;dialogue;scene;name;json};Sr([Vi(FR,zR.Little),Ci("design:type",typeof BigInt>"u"?Object:BigInt)],Tt.prototype,"uniqueEntityId",void 0);Sr([Vi(TR),Ci("design:type",typeof NpcDialogueAction>"u"?Object:NpcDialogueAction)],Tt.prototype,"action",void 0);Sr([Vi(Is),Ci("design:type",String)],Tt.prototype,"dialogue",void 0);Sr([Vi(Is),Ci("design:type",String)],Tt.prototype,"scene",void 0);Sr([Vi(Is),Ci("design:type",String)],Tt.prototype,"name",void 0);Sr([Vi(Is),Ci("design:type",String)],Tt.prototype,"json",void 0);Tt=Sr([qR(p.NpcDialogue)],Tt);import{Proto as HR,Serialize as xp}from"@serenityjs/raknet";import{Uint8 as WR,VarLong as GR,ZigZag as AR}from"@serenityjs/binarystream";function Rs(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Rs,"_ts_decorate");function Pp(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Pp,"_ts_metadata");var Br=class extends f{static{s(this,"ActorEventPacket")}actorRuntimeId;event;data};Rs([xp(GR),Pp("design:type",typeof BigInt>"u"?Object:BigInt)],Br.prototype,"actorRuntimeId",void 0);Rs([xp(WR),Pp("design:type",Number)],Br.prototype,"event",void 0);Rs([xp(AR),Pp("design:type",Number)],Br.prototype,"data",void 0);Br=Rs([HR(p.ActorEvent)],Br);import{Proto as JR,Serialize as Cr}from"@serenityjs/raknet";import{Float64 as YR,VarInt as KR,VarString as ks}from"@serenityjs/binarystream";function Ae(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Ae,"_ts_decorate");function Or(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Or,"_ts_metadata");var _t=class extends f{static{s(this,"AnimateEntityPacket")}animation;nextState;stopExpression;stopExpressionVersion;controller;blendOutTime;actorRuntimeIds};Ae([Cr(ks),Or("design:type",String)],_t.prototype,"animation",void 0);Ae([Cr(ks),Or("design:type",String)],_t.prototype,"nextState",void 0);Ae([Cr(ks),Or("design:type",String)],_t.prototype,"stopExpression",void 0);Ae([Cr(KR),Or("design:type",Number)],_t.prototype,"stopExpressionVersion",void 0);Ae([Cr(ks),Or("design:type",String)],_t.prototype,"controller",void 0);Ae([Cr(YR),Or("design:type",Number)],_t.prototype,"blendOutTime",void 0);Ae([Cr(ha),Or("design:type",typeof ha>"u"?Object:ha)],_t.prototype,"actorRuntimeIds",void 0);_t=Ae([JR(p.AnimateEntity)],_t);import{Proto as QR,Serialize as fu}from"@serenityjs/raknet";import{VarLong as $R}from"@serenityjs/binarystream";function Ip(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Ip,"_ts_decorate");function pu(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(pu,"_ts_metadata");var ji=class extends f{static{s(this,"EmoteListPacket")}runtimeId;emoteIds};Ip([fu($R),pu("design:type",typeof BigInt>"u"?Object:BigInt)],ji.prototype,"runtimeId",void 0);Ip([fu(Dd),pu("design:type",typeof Array>"u"?Object:Array)],ji.prototype,"emoteIds",void 0);ji=Ip([QR(p.EmoteList)],ji);import{Proto as XR,Serialize as Ui}from"@serenityjs/raknet";import{Byte as LR,VarInt as ER,VarString as Rp,VarLong as vR}from"@serenityjs/binarystream";function Vr(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Vr,"_ts_decorate");function _i(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(_i,"_ts_metadata");var qt=class extends f{static{s(this,"EmotePacket")}actorRuntimeId;emoteId;tickLength;xuid;platformChatId;flags};Vr([Ui(vR),_i("design:type",typeof BigInt>"u"?Object:BigInt)],qt.prototype,"actorRuntimeId",void 0);Vr([Ui(Rp),_i("design:type",String)],qt.prototype,"emoteId",void 0);Vr([Ui(ER),_i("design:type",Number)],qt.prototype,"tickLength",void 0);Vr([Ui(Rp),_i("design:type",String)],qt.prototype,"xuid",void 0);Vr([Ui(Rp),_i("design:type",String)],qt.prototype,"platformChatId",void 0);Vr([Ui(LR),_i("design:type",typeof EmoteFlags>"u"?Object:EmoteFlags)],qt.prototype,"flags",void 0);qt=Vr([XR(p.Emote)],qt);import{Proto as tk,Serialize as Xo}from"@serenityjs/raknet";import{Uuid as ek,VarString as du,Bool as rk}from"@serenityjs/binarystream";function Di(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Di,"_ts_decorate");function $o(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s($o,"_ts_metadata");var oe=class extends f{static{s(this,"PlayerSkinPacket")}uuid;skin;skinName;oldSkinName;isVerified};Di([Xo(ek),$o("design:type",String)],oe.prototype,"uuid",void 0);Di([Xo(ir),$o("design:type",typeof ir>"u"?Object:ir)],oe.prototype,"skin",void 0);Di([Xo(du),$o("design:type",String)],oe.prototype,"skinName",void 0);Di([Xo(du),$o("design:type",String)],oe.prototype,"oldSkinName",void 0);Di([Xo(rk),$o("design:type",Boolean)],oe.prototype,"isVerified",void 0);oe=Di([tk(p.PlayerSkin)],oe);import{Proto as ik,Serialize as mu}from"@serenityjs/raknet";import{CompoundTag as kp}from"@serenityjs/nbt";function Sp(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Sp,"_ts_decorate");function lu(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(lu,"_ts_metadata");var Ni=class extends f{static{s(this,"BlockActorDataPacket")}position;nbt};Sp([mu(b),lu("design:type",typeof b>"u"?Object:b)],Ni.prototype,"position",void 0);Sp([mu(kp,!0),lu("design:type",typeof kp>"u"?Object:kp)],Ni.prototype,"nbt",void 0);Ni=Sp([ik(p.BlockActorData)],Ni);import{Int32 as nk,Endianness as ak}from"@serenityjs/binarystream";import{Proto as sk,Serialize as ck}from"@serenityjs/raknet";function uu(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(uu,"_ts_decorate");function ok(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(ok,"_ts_metadata");var Lo=class extends f{static{s(this,"AwardAchievementPacket")}identifier};uu([ck(nk,ak.Little),ok("design:type",Number)],Lo.prototype,"identifier",void 0);Lo=uu([sk(p.AwardAchievement)],Lo);import{VarString as fk}from"@serenityjs/binarystream";import{Proto as dk,Serialize as lk}from"@serenityjs/raknet";function hu(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(hu,"_ts_decorate");function pk(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(pk,"_ts_metadata");var Eo=class extends f{static{s(this,"ServerToClientHandshakePacket")}token};hu([lk(fk),pk("design:type",String)],Eo.prototype,"token",void 0);Eo=hu([dk(p.ServerToClientHandshake)],Eo);import{Proto as mk,Serialize as yu}from"@serenityjs/raknet";import{VarString as uk}from"@serenityjs/binarystream";function Bp(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Bp,"_ts_decorate");function gu(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(gu,"_ts_metadata");var Zi=class extends f{static{s(this,"DeathInfoPacket")}cause;deathParameters};Bp([yu(uk),gu("design:type",String)],Zi.prototype,"cause",void 0);Bp([yu(Zd),gu("design:type",typeof Array>"u"?Object:Array)],Zi.prototype,"deathParameters",void 0);Zi=Bp([mk(p.DeathInfo)],Zi);import{Proto as hk,Serialize as tn}from"@serenityjs/raknet";import{Bool as gk,VarInt as Ss}from"@serenityjs/binarystream";function Mi(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Mi,"_ts_decorate");function vo(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(vo,"_ts_metadata");var ne=class extends f{static{s(this,"SetPlayerInventoryOptionsPacket")}leftTab;rightTab;filtering;layout;craftingLayout};Mi([tn(Ss),vo("design:type",typeof InventoryLeftTab>"u"?Object:InventoryLeftTab)],ne.prototype,"leftTab",void 0);Mi([tn(Ss),vo("design:type",typeof InventoryRightTab>"u"?Object:InventoryRightTab)],ne.prototype,"rightTab",void 0);Mi([tn(gk),vo("design:type",Boolean)],ne.prototype,"filtering",void 0);Mi([tn(Ss),vo("design:type",typeof InventoryLayout>"u"?Object:InventoryLayout)],ne.prototype,"layout",void 0);Mi([tn(Ss),vo("design:type",typeof InventoryLayout>"u"?Object:InventoryLayout)],ne.prototype,"craftingLayout",void 0);ne=Mi([hk(p.SetPlayerInventoryOptions)],ne);import{Proto as wk}from"@serenityjs/raknet";function yk(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(yk,"_ts_decorate");var Bs=class extends f{static{s(this,"ClientboundCloseFormPacket")}};Bs=yk([wk(p.ClientboundCloseForm)],Bs);import{Bool as bk,Byte as Pk,VarInt as xk,VarLong as Ik,ZigZag as wu}from"@serenityjs/binarystream";import{Proto as Rk,Serialize as _r}from"@serenityjs/raknet";function Je(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Je,"_ts_decorate");function jr(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(jr,"_ts_metadata");var Ut=class extends f{static{s(this,"MobEffectPacket")}runtimeId;eventId;effectId;amplifier;particles;duration;inputTick};Je([_r(Ik),jr("design:type",typeof BigInt>"u"?Object:BigInt)],Ut.prototype,"runtimeId",void 0);Je([_r(Pk),jr("design:type",typeof MobEffectEvents>"u"?Object:MobEffectEvents)],Ut.prototype,"eventId",void 0);Je([_r(wu),jr("design:type",typeof EffectType>"u"?Object:EffectType)],Ut.prototype,"effectId",void 0);Je([_r(wu),jr("design:type",Number)],Ut.prototype,"amplifier",void 0);Je([_r(bk),jr("design:type",Boolean)],Ut.prototype,"particles",void 0);Je([_r(xk),jr("design:type",Number)],Ut.prototype,"duration",void 0);Je([_r(Q),jr("design:type",typeof BigInt>"u"?Object:BigInt)],Ut.prototype,"inputTick",void 0);Ut=Je([Rk(p.MobEffect)],Ut);import{Proto as kk,Serialize as Pu}from"@serenityjs/raknet";import{Endianness as xu,Int32 as Sk,Short as Bk}from"@serenityjs/binarystream";function Op(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Op,"_ts_decorate");function bu(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(bu,"_ts_metadata");var zi=class extends f{static{s(this,"CompletedUsingItemPacket")}itemNetworkId;useMethod};Op([Pu(Bk,xu.Little),bu("design:type",Number)],zi.prototype,"itemNetworkId",void 0);Op([Pu(Sk,xu.Little),bu("design:type",typeof ItemUseMethod>"u"?Object:ItemUseMethod)],zi.prototype,"useMethod",void 0);zi=Op([kk(p.CompletedUsingItem)],zi);import{VarLong as Ok,VarString as Iu,Uint8 as Ru}from"@serenityjs/binarystream";import{Proto as Ck,Serialize as rn}from"@serenityjs/raknet";function Fi(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Fi,"_ts_decorate");function en(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(en,"_ts_metadata");var ae=class extends f{static{s(this,"NpcRequestPacket")}runtimeActorId;type;actions;index;scene};Fi([rn(Ok),en("design:type",typeof BigInt>"u"?Object:BigInt)],ae.prototype,"runtimeActorId",void 0);Fi([rn(Ru),en("design:type",typeof NpcRequestType>"u"?Object:NpcRequestType)],ae.prototype,"type",void 0);Fi([rn(Iu),en("design:type",String)],ae.prototype,"actions",void 0);Fi([rn(Ru),en("design:type",Number)],ae.prototype,"index",void 0);Fi([rn(Iu),en("design:type",String)],ae.prototype,"scene",void 0);ae=Fi([Ck(p.NpcRequest)],ae);import{Proto as Vk,Serialize as Su}from"@serenityjs/raknet";import{Bool as jk}from"@serenityjs/binarystream";function Cp(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Cp,"_ts_decorate");function ku(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(ku,"_ts_metadata");var Ti=class extends f{static{s(this,"OpenSignPacket")}position;isFrontSide};Cp([Su(b),ku("design:type",typeof b>"u"?Object:b)],Ti.prototype,"position",void 0);Cp([Su(jk),ku("design:type",Boolean)],Ti.prototype,"isFrontSide",void 0);Ti=Cp([Vk(p.OpenSign)],Ti);import{Bool as _k,ZigZag as Uk}from"@serenityjs/binarystream";import{Proto as Dk,Serialize as Ou}from"@serenityjs/raknet";function Vp(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Vp,"_ts_decorate");function Bu(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Bu,"_ts_metadata");var qi=class extends f{static{s(this,"ServerboundLoadingScreenPacketPacket")}type;hasScreenId};Vp([Ou(Uk),Bu("design:type",typeof ServerboundLoadingScreenType>"u"?Object:ServerboundLoadingScreenType)],qi.prototype,"type",void 0);Vp([Ou(_k),Bu("design:type",Boolean)],qi.prototype,"hasScreenId",void 0);qi=Vp([Dk(p.ServerboundLoadingScreenPacket)],qi);import{Proto as Nk,Serialize as Cs}from"@serenityjs/raknet";import{Float32 as Cu,Uint8 as Vu}from"@serenityjs/binarystream";function on(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(on,"_ts_decorate");function Os(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Os,"_ts_metadata");var Ye=class extends f{static{s(this,"CameraShakePacket")}intensity;duration;shakeType;shakeAction};on([Cs(Cu),Os("design:type",Number)],Ye.prototype,"intensity",void 0);on([Cs(Cu),Os("design:type",Number)],Ye.prototype,"duration",void 0);on([Cs(Vu),Os("design:type",typeof ShakeType>"u"?Object:ShakeType)],Ye.prototype,"shakeType",void 0);on([Cs(Vu),Os("design:type",typeof ShakeAction>"u"?Object:ShakeAction)],Ye.prototype,"shakeAction",void 0);Ye=on([Nk(p.CameraShake)],Ye);import{Proto as Zk,Serialize as _p}from"@serenityjs/raknet";import{Uint8 as ju}from"@serenityjs/binarystream";function Vs(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Vs,"_ts_decorate");function jp(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(jp,"_ts_metadata");var Ur=class extends f{static{s(this,"BookEditPacket")}action;bookSlot;actions};Vs([_p(ju),jp("design:type",typeof BookEditAction>"u"?Object:BookEditAction)],Ur.prototype,"action",void 0);Vs([_p(ju),jp("design:type",Number)],Ur.prototype,"bookSlot",void 0);Vs([_p(ya,!1,"action"),jp("design:type",typeof ya>"u"?Object:ya)],Ur.prototype,"actions",void 0);Ur=Vs([Zk(p.BookEdit)],Ur);import{Proto as Mk,Serialize as Uu}from"@serenityjs/raknet";import{VarInt as zk,VarString as Fk}from"@serenityjs/binarystream";function Up(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Up,"_ts_decorate");function _u(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(_u,"_ts_metadata");var Hi=class extends f{static{s(this,"PlayerStartItemCooldownPacket")}category;duration};Up([Uu(Fk),_u("design:type",String)],Hi.prototype,"category",void 0);Up([Uu(zk),_u("design:type",Number)],Hi.prototype,"duration",void 0);Hi=Up([Mk(p.PlayerStartItemCooldown)],Hi);import{Proto as qk,Serialize as Hk}from"@serenityjs/raknet";function Du(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Du,"_ts_decorate");function Tk(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Tk,"_ts_metadata");var nn=class extends f{static{s(this,"CameraPresetsPacket")}presets};Du([Hk(Jd),Tk("design:type",typeof Array>"u"?Object:Array)],nn.prototype,"presets",void 0);nn=Du([qk(p.CameraPresetsPacket)],nn);import{Proto as Gk,Serialize as Ak}from"@serenityjs/raknet";function Nu(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Nu,"_ts_decorate");function Wk(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Wk,"_ts_metadata");var an=class extends f{static{s(this,"CameraInstructionsPacket")}instruction};Nu([Ak(ba),Wk("design:type",typeof ba>"u"?Object:ba)],an.prototype,"instruction",void 0);an=Nu([Gk(p.CameraInstructions)],an);import{Proto as Jk,Serialize as cn}from"@serenityjs/raknet";import{Bool as Yk}from"@serenityjs/binarystream";function Wi(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Wi,"_ts_decorate");function sn(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(sn,"_ts_metadata");var se=class extends f{static{s(this,"CraftingDataPacket")}crafting;potions;containers;materitalReducers;clearRecipes};Wi([cn(vd),sn("design:type",typeof Array>"u"?Object:Array)],se.prototype,"crafting",void 0);Wi([cn(tl),sn("design:type",typeof Array>"u"?Object:Array)],se.prototype,"potions",void 0);Wi([cn(el),sn("design:type",typeof Array>"u"?Object:Array)],se.prototype,"containers",void 0);Wi([cn(rl),sn("design:type",typeof Array>"u"?Object:Array)],se.prototype,"materitalReducers",void 0);Wi([cn(Yk),sn("design:type",Boolean)],se.prototype,"clearRecipes",void 0);se=Wi([Jk(p.CraftingData)],se);import{Proto as Kk,Serialize as fn}from"@serenityjs/raknet";import{Byte as Qk,ZigZong as $k,VarString as Xk}from"@serenityjs/binarystream";function Gi(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Gi,"_ts_decorate");function pn(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(pn,"_ts_metadata");var ce=class extends f{static{s(this,"SpawnParticleEffectPacket")}dimensionId;uniqueId;position;effectName;molangVariables};Gi([fn(Qk),pn("design:type",Number)],ce.prototype,"dimensionId",void 0);Gi([fn($k),pn("design:type",typeof BigInt>"u"?Object:BigInt)],ce.prototype,"uniqueId",void 0);Gi([fn(l),pn("design:type",typeof l>"u"?Object:l)],ce.prototype,"position",void 0);Gi([fn(Xk),pn("design:type",String)],ce.prototype,"effectName",void 0);Gi([fn(k),pn("design:type",Object)],ce.prototype,"molangVariables",void 0);ce=Gi([Kk(p.SpawnParticleEffect)],ce);import{Proto as Lk,Serialize as Np}from"@serenityjs/raknet";import{Int8 as Ek,ZigZag as Zu}from"@serenityjs/binarystream";function js(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(js,"_ts_decorate");function Dp(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Dp,"_ts_metadata");var Dr=class extends f{static{s(this,"ContainerSetDataPacket")}containerId;type;value};js([Np(Ek),Dp("design:type",typeof ContainerId>"u"?Object:ContainerId)],Dr.prototype,"containerId",void 0);js([Np(Zu),Dp("design:type",typeof ContainerDataType>"u"?Object:ContainerDataType)],Dr.prototype,"type",void 0);js([Np(Zu),Dp("design:type",Number)],Dr.prototype,"value",void 0);Dr=js([Lk(p.ContainerSetData)],Dr);import{Proto as t0,Serialize as e0}from"@serenityjs/raknet";import{CompoundTag as Zp}from"@serenityjs/nbt";function Mu(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Mu,"_ts_decorate");function vk(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(vk,"_ts_metadata");var dn=class extends f{static{s(this,"AvailableActorIdentifiersPacket")}data};Mu([e0(Zp,!0),vk("design:type",typeof Zp>"u"?Object:Zp)],dn.prototype,"data",void 0);dn=Mu([t0(p.AvailableActorIdentifiers)],dn);import{Proto as r0,Serialize as Us}from"@serenityjs/raknet";import{Bool as zu}from"@serenityjs/binarystream";function ln(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(ln,"_ts_decorate");function _s(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(_s,"_ts_metadata");var Ke=class extends f{static{s(this,"StructureBlockUpdatePacket")}blockPosition;structureEditData;trigger;isWaterLogged};ln([Us(b),_s("design:type",typeof b>"u"?Object:b)],Ke.prototype,"blockPosition",void 0);ln([Us(Pa),_s("design:type",typeof Pa>"u"?Object:Pa)],Ke.prototype,"structureEditData",void 0);ln([Us(zu),_s("design:type",Boolean)],Ke.prototype,"trigger",void 0);ln([Us(zu),_s("design:type",Boolean)],Ke.prototype,"isWaterLogged",void 0);Ke=ln([r0(p.StructureBlockUpdate)],Ke);import{Proto as o0,Serialize as n0}from"@serenityjs/raknet";function Fu(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Fu,"_ts_decorate");function i0(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(i0,"_ts_metadata");var mn=class extends f{static{s(this,"DimensionDataPacket")}definitionGroup};Fu([n0(xa),i0("design:type",typeof xa>"u"?Object:xa)],mn.prototype,"definitionGroup",void 0);mn=Fu([o0(p.DimensionData)],mn);import{Proto as s0,Serialize as c0}from"@serenityjs/raknet";function Tu(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Tu,"_ts_decorate");function a0(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(a0,"_ts_metadata");var un=class extends f{static{s(this,"PlayerEnchantOptionsPacket")}enchantOptions};Tu([c0(Bl),a0("design:type",typeof Array>"u"?Object:Array)],un.prototype,"enchantOptions",void 0);un=Tu([s0(p.PlayerEnchantOptions)],un);import{Proto as f0}from"@serenityjs/raknet";function p0(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(p0,"_ts_decorate");var Ds=class extends f{static{s(this,"ClientToServerHandshakePacket")}};Ds=p0([f0(p.ClientToServerHandshake)],Ds);import{VarLong as d0}from"@serenityjs/binarystream";import{Proto as l0,Serialize as Ji}from"@serenityjs/raknet";function Nr(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Nr,"_ts_decorate");function Ai(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Ai,"_ts_metadata");var Ht=class extends f{static{s(this,"MobArmorEquipmentPacket")}runtimeId;helmet;chestplate;leggings;boots;body};Nr([Ji(d0),Ai("design:type",typeof BigInt>"u"?Object:BigInt)],Ht.prototype,"runtimeId",void 0);Nr([Ji(I),Ai("design:type",typeof I>"u"?Object:I)],Ht.prototype,"helmet",void 0);Nr([Ji(I),Ai("design:type",typeof I>"u"?Object:I)],Ht.prototype,"chestplate",void 0);Nr([Ji(I),Ai("design:type",typeof I>"u"?Object:I)],Ht.prototype,"leggings",void 0);Nr([Ji(I),Ai("design:type",typeof I>"u"?Object:I)],Ht.prototype,"boots",void 0);Nr([Ji(I),Ai("design:type",typeof I>"u"?Object:I)],Ht.prototype,"body",void 0);Ht=Nr([l0(p.MobArmorEquipment)],Ht);import{ZigZag as u0}from"@serenityjs/binarystream";import{Proto as h0,Serialize as g0}from"@serenityjs/raknet";function qu(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(qu,"_ts_decorate");function m0(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(m0,"_ts_metadata");var hn=class extends f{static{s(this,"RiderJumpPacket")}strength};qu([g0(u0),m0("design:type",Number)],hn.prototype,"strength",void 0);hn=qu([h0(p.RiderJump)],hn);import{Proto as y0,Serialize as zp}from"@serenityjs/raknet";import{ZigZag as Hu}from"@serenityjs/binarystream";function Ns(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Ns,"_ts_decorate");function Mp(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Mp,"_ts_metadata");var Zr=class extends f{static{s(this,"BlockEventPacket")}position;type;data};Ns([zp(b),Mp("design:type",typeof b>"u"?Object:b)],Zr.prototype,"position",void 0);Ns([zp(Hu),Mp("design:type",typeof BlockEventType>"u"?Object:BlockEventType)],Zr.prototype,"type",void 0);Ns([zp(Hu),Mp("design:type",Number)],Zr.prototype,"data",void 0);Zr=Ns([y0(p.BlockEvent)],Zr);import{Bool as w0,Endianness as b0,Uint64 as P0,Uint8 as x0}from"@serenityjs/binarystream";import{Proto as I0,Serialize as Tp}from"@serenityjs/raknet";function Zs(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Zs,"_ts_decorate");function Fp(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Fp,"_ts_metadata");var Mr=class extends f{static{s(this,"EntityPickRequestPacket")}uniqueActorId;slot;withData};Zs([Tp(P0,b0.Little),Fp("design:type",typeof BigInt>"u"?Object:BigInt)],Mr.prototype,"uniqueActorId",void 0);Zs([Tp(x0),Fp("design:type",Number)],Mr.prototype,"slot",void 0);Zs([Tp(w0),Fp("design:type",Boolean)],Mr.prototype,"withData",void 0);Mr=Zs([I0(p.EntityPickRequest)],Mr);import{Proto as R0,Serialize as Hp}from"@serenityjs/raknet";import{ZigZag as Wu,ZigZong as k0}from"@serenityjs/binarystream";function Ms(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Ms,"_ts_decorate");function qp(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(qp,"_ts_metadata");var zr=class extends f{static{s(this,"HurtArmorPacket")}cause;damage;slots};Ms([Hp(Wu),qp("design:type",Number)],zr.prototype,"cause",void 0);Ms([Hp(Wu),qp("design:type",Number)],zr.prototype,"damage",void 0);Ms([Hp(k0),qp("design:type",Number)],zr.prototype,"slots",void 0);zr=Ms([R0(p.HurtArmor)],zr);import{Proto as S0,Serialize as Au}from"@serenityjs/raknet";import{Byte as B0,VarLong as O0}from"@serenityjs/binarystream";function Wp(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Wp,"_ts_decorate");function Gu(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Gu,"_ts_metadata");var Yi=class extends f{static{s(this,"ShowCreditsPacket")}playerRuntimeId;creditsState};Wp([Au(O0),Gu("design:type",typeof BigInt>"u"?Object:BigInt)],Yi.prototype,"playerRuntimeId",void 0);Wp([Au(B0),Gu("design:type",Number)],Yi.prototype,"creditsState",void 0);Yi=Wp([S0(p.ShowCredits)],Yi);import{VarInt as C0}from"@serenityjs/binarystream";import{Proto as V0,Serialize as Yu}from"@serenityjs/raknet";function Gp(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Gp,"_ts_decorate");function Ju(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Ju,"_ts_metadata");var Ki=class extends f{static{s(this,"UpdateClientInputLocksPacket")}flags;position};Gp([Yu(C0),Ju("design:type",Number)],Ki.prototype,"flags",void 0);Gp([Yu(l),Ju("design:type",typeof l>"u"?Object:l)],Ki.prototype,"position",void 0);Ki=Gp([V0(p.UpdateClientInputLocks)],Ki);import{Proto as _0,Serialize as U0}from"@serenityjs/raknet";import{Endianness as D0,Uint32 as N0}from"@serenityjs/binarystream";function Ku(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Ku,"_ts_decorate");function j0(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(j0,"_ts_metadata");var gn=class extends f{static{s(this,"OnScreenTextureAnimationPacket")}effectId};Ku([U0(N0,D0.Little),j0("design:type",typeof EffectType>"u"?Object:EffectType)],gn.prototype,"effectId",void 0);gn=Ku([_0(p.OnScreenTextureAnimation)],gn);import{Proto as Z0,Serialize as fe}from"@serenityjs/raknet";import{Endianness as de,Float32 as le}from"@serenityjs/binarystream";function Wt(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Wt,"_ts_decorate");function pe(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(pe,"_ts_metadata");var mt=class extends f{static{s(this,"ServerboundDiagnosticsPacket")}fps;serverSimTickTime;clientSimTickTime;beginFrameTime;inputTime;renderTime;endFrameTime;remainderTimePercent;unaccountedTimePercent};Wt([fe(le,de.Little),pe("design:type",Number)],mt.prototype,"fps",void 0);Wt([fe(le,de.Little),pe("design:type",Number)],mt.prototype,"serverSimTickTime",void 0);Wt([fe(le,de.Little),pe("design:type",Number)],mt.prototype,"clientSimTickTime",void 0);Wt([fe(le,de.Little),pe("design:type",Number)],mt.prototype,"beginFrameTime",void 0);Wt([fe(le,de.Little),pe("design:type",Number)],mt.prototype,"inputTime",void 0);Wt([fe(le,de.Little),pe("design:type",Number)],mt.prototype,"renderTime",void 0);Wt([fe(le,de.Little),pe("design:type",Number)],mt.prototype,"endFrameTime",void 0);Wt([fe(le,de.Little),pe("design:type",Number)],mt.prototype,"remainderTimePercent",void 0);Wt([fe(le,de.Little),pe("design:type",Number)],mt.prototype,"unaccountedTimePercent",void 0);mt=Wt([Z0(p.ServerboundDiagnosticPacket)],mt);import{Proto as M0,Serialize as Fs}from"@serenityjs/raknet";import{Endianness as Qu,Float32 as $u,VarString as z0}from"@serenityjs/binarystream";function yn(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(yn,"_ts_decorate");function zs(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(zs,"_ts_metadata");var Qe=class extends f{static{s(this,"PlaySoundPacket")}name;position;volume;pitch};yn([Fs(z0),zs("design:type",String)],Qe.prototype,"name",void 0);yn([Fs(b),zs("design:type",typeof b>"u"?Object:b)],Qe.prototype,"position",void 0);yn([Fs($u,Qu.Little),zs("design:type",Number)],Qe.prototype,"volume",void 0);yn([Fs($u,Qu.Little),zs("design:type",Number)],Qe.prototype,"pitch",void 0);Qe=yn([M0(p.PlaySound)],Qe);import{Proto as T0,Serialize as q0}from"@serenityjs/raknet";function Xu(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Xu,"_ts_decorate");function F0(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(F0,"_ts_metadata");var wn=class extends f{static{s(this,"SetActorLinkPacket")}link};Xu([q0(Ra),F0("design:type",typeof Ra>"u"?Object:Ra)],wn.prototype,"link",void 0);wn=Xu([T0(p.SetActorLink)],wn);import{Proto as H0,Serialize as Jp}from"@serenityjs/raknet";import{Bool as Lu,VarString as W0}from"@serenityjs/binarystream";function Ts(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Ts,"_ts_decorate");function Ap(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Ap,"_ts_metadata");var Fr=class extends f{static{s(this,"StopSoundPacket")}soundName;stopAllSounds;stopMusic};Ts([Jp(W0),Ap("design:type",String)],Fr.prototype,"soundName",void 0);Ts([Jp(Lu),Ap("design:type",Boolean)],Fr.prototype,"stopAllSounds",void 0);Ts([Jp(Lu),Ap("design:type",Boolean)],Fr.prototype,"stopMusic",void 0);Fr=Ts([H0(p.StopSound)],Fr);import{Proto as G0,Serialize as Xe}from"@serenityjs/raknet";import{Endianness as qs,Float32 as Yp,Uint16 as A0,VarLong as J0}from"@serenityjs/binarystream";function me(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(me,"_ts_decorate");function $e(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s($e,"_ts_metadata");var Rt=class extends f{static{s(this,"MoveActorDeltaPacket")}runtimeId;flags;x;y;z;pitch;yaw;headYaw};me([Xe(J0),$e("design:type",typeof BigInt>"u"?Object:BigInt)],Rt.prototype,"runtimeId",void 0);me([Xe(A0,qs.Little),$e("design:type",Number)],Rt.prototype,"flags",void 0);me([Xe(Yp,qs.Little),$e("design:type",Number)],Rt.prototype,"x",void 0);me([Xe(Yp,qs.Little),$e("design:type",Number)],Rt.prototype,"y",void 0);me([Xe(Yp,qs.Little),$e("design:type",Number)],Rt.prototype,"z",void 0);me([Xe(ka),$e("design:type",Number)],Rt.prototype,"pitch",void 0);me([Xe(ka),$e("design:type",Number)],Rt.prototype,"yaw",void 0);me([Xe(ka),$e("design:type",Number)],Rt.prototype,"headYaw",void 0);Rt=me([G0(p.MoveActorDelta)],Rt);import{Proto as K0,Serialize as Q0}from"@serenityjs/raknet";function Eu(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Eu,"_ts_decorate");function Y0(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Y0,"_ts_metadata");var bn=class extends f{static{s(this,"PlayerFogPacket")}fogs};Eu([Q0(Sa),Y0("design:type",typeof Sa>"u"?Object:Sa)],bn.prototype,"fogs",void 0);bn=Eu([K0(p.PlayerFog)],bn);import{VarString as X0}from"@serenityjs/binarystream";import{Proto as L0,Serialize as E0}from"@serenityjs/raknet";function vu(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(vu,"_ts_decorate");function $0(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s($0,"_ts_metadata");var Pn=class extends f{static{s(this,"CurrectStructureFeaturePacket")}featureId};vu([E0(X0),$0("design:type",String)],Pn.prototype,"featureId",void 0);Pn=vu([L0(p.CurrentStructureFeature)],Pn);import{Proto as t3,Serialize as e3}from"@serenityjs/raknet";function th(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(th,"_ts_decorate");function v0(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(v0,"_ts_metadata");var xn=class extends f{static{s(this,"GameRulesChangedPacket")}rules};th([e3(Wr),v0("design:type",typeof Wr>"u"?Object:Wr)],xn.prototype,"rules",void 0);xn=th([t3(p.GameRulesChanged)],xn);import{Proto as i3}from"@serenityjs/raknet";function r3(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(r3,"_ts_decorate");var Hs=class extends f{static{s(this,"LegacyTelemetryEventPacket")}unique_id;type;use_player_id;event_data;serialize(){switch(this.writeVarInt(p.LegacyTelemetryEvent),this.writeVarLong(this.unique_id),this.writeVarInt(this.type),this.writeByte(this.use_player_id),this.type){case x.AchievementAwarded:{this.writeVarInt(this.event_data.achievementId);break}case x.EntityInteract:{let e=this.event_data;this.writeVarLong(e.interactedEntityId),this.writeVarInt(e.interactionType),this.writeVarInt(e.interactionActorType),this.writeVarInt(e.interactionActorVariant),this.writeUint8(e.interactionActorColor);break}case x.PortalBuilt:{this.writeVarInt(this.event_data.dimensionId);break}case x.PortalUsed:{let e=this.event_data;this.writeVarInt(e.fromDimensionId),this.writeVarInt(e.toDimensionId);break}case x.MobKilled:{let e=this.event_data;this.writeVarLong(e.instigatorActorId),this.writeVarLong(e.targetActorId),this.writeVarInt(e.instigatorChildActorType),this.writeVarInt(e.damageSource),this.writeVarInt(e.tradeTier),this.writeVarString(e.traderName);break}case x.CauldronUsed:{let e=this.event_data;this.writeVarInt(e.contentsColor),this.writeVarInt(e.contentsType),this.writeVarInt(e.fillLevel);break}case x.PlayerDeath:{let e=this.event_data;this.writeVarLong(e.instigatorActorId),this.writeVarInt(e.instigatorMobVariant),this.writeVarInt(e.damageSource),this.writeBool(e.diedInRaid);break}case x.BossKilled:{let e=this.event_data;this.writeVarLong(e.bossActorId),this.writeVarInt(e.partySize),this.writeVarInt(e.bossType);break}case x.AgentCommand:{let e=this.event_data;this.writeVarInt(e.result),this.writeVarInt(e.resultNumber),this.writeVarString(e.commandName),this.writeVarString(e.resultKey),this.writeVarString(e.resultString);break}case x.CommandExecuted:{let e=this.event_data;this.writeVarInt(e.successCount),this.writeVarInt(e.errorCount),this.writeVarString(e.commandName),this.writeVarString(e.errorList);break}case x.MobBorn:{let e=this.event_data;this.writeVarInt(e.entityType),this.writeVarInt(e.entityVariant),this.writeUint8(e.color);break}case x.PetDied:{let e=this.event_data;this.writeVarInt(e.killedPetEntityType),this.writeVarInt(e.killedPetVariant),this.writeVarInt(e.killerEntityType),this.writeVarInt(e.killerVariant),this.writeVarInt(e.damageSource);break}case x.CauldronBlockUsed:case x.ComposterBlockUsed:{let e=this.event_data;this.writeVarInt(e.blockInteractionType),this.writeVarInt(e.itemId);break}case x.BellBlockUsed:{this.writeVarInt(this.event_data.itemId);break}case x.ActorDefinition:{this.writeVarString(this.event_data.eventName);break}case x.RaidUpdate:{let e=this.event_data;this.writeVarInt(e.currentRaidWave),this.writeVarInt(e.totalRaidWaves),this.writeBool(e.wonRaid);break}case x.TargetBlockHit:{this.writeVarInt(this.event_data.redstoneLevel);break}case x.PiglinBarter:{let e=this.event_data;this.writeVarInt(e.itemId),this.writeBool(e.wasTargetingBarteringPlayer);break}case x.WaxedOrUnwaxedCopper:{this.writeVarInt(this.event_data.playerWaxedOrUnwaxedCopperBlockId);break}case x.CodeBuilderRuntimeAction:{this.writeVarString(this.event_data.codeBuilderRuntimeAction);break}case x.CodeBuilderScoreboard:{let e=this.event_data;this.writeVarString(e.objectiveName),this.writeVarInt(e.codeBuilderScoreboardScore);break}case x.ItemUsed:{let e=this.event_data;this.writeShort(e.itemId),this.writeVarInt(e.itemAux),this.writeVarInt(e.useMethod),this.writeVarInt(e.useCount);break}case x.AgentCreated:case x.BannerPatternRemoved:case x.FishBucketed:case x.PlayerMovementAnomaly:case x.PlayerMovementCorrected:case x.HoneyHarvested:case x.StriderRiddenInLavaInOverworld:case x.SneakCloseToSculkSensor:case x.CarefulRestoration:break;default:break}return this.getBuffer()}deserialize(){switch(this.readVarInt(),this.unique_id=this.readVarLong(),this.type=this.readVarInt(),this.use_player_id=this.readByte(),this.type){case x.AchievementAwarded:this.event_data={achievementId:this.readVarInt()};break;case x.EntityInteract:this.event_data={interactedEntityId:this.readVarLong(),interactionType:this.readVarInt(),interactionActorType:this.readVarInt(),interactionActorVariant:this.readVarInt(),interactionActorColor:this.readUint8()};break;case x.PortalBuilt:this.event_data={dimensionId:this.readVarInt()};break;case x.PortalUsed:this.event_data={fromDimensionId:this.readVarInt(),toDimensionId:this.readVarInt()};break;case x.MobKilled:this.event_data={instigatorActorId:this.readVarLong(),targetActorId:this.readVarLong(),instigatorChildActorType:this.readVarInt(),damageSource:this.readVarInt(),tradeTier:this.readVarInt(),traderName:this.readVarString()};break;case x.CauldronUsed:this.event_data={contentsColor:this.readVarInt(),contentsType:this.readVarInt(),fillLevel:this.readVarInt()};break;case x.PlayerDeath:this.event_data={instigatorActorId:this.readVarLong(),instigatorMobVariant:this.readVarInt(),damageSource:this.readVarInt(),diedInRaid:this.readBool()};break;case x.BossKilled:this.event_data={bossActorId:this.readVarLong(),partySize:this.readVarInt(),bossType:this.readVarInt()};break;case x.AgentCommand:this.event_data={result:this.readVarInt(),resultNumber:this.readVarInt(),commandName:this.readVarString(),resultKey:this.readVarString(),resultString:this.readVarString()};break;case x.AgentCreated:this.event_data={};break;case x.BannerPatternRemoved:this.event_data={};break;case x.CommandExecuted:this.event_data={successCount:this.readVarInt(),errorCount:this.readVarInt(),commandName:this.readVarString(),errorList:this.readVarString()};break;case x.FishBucketed:this.event_data={};break;case x.MobBorn:this.event_data={entityType:this.readVarInt(),entityVariant:this.readVarInt(),color:this.readUint8()};break;case x.PetDied:this.event_data={killedPetEntityType:this.readVarInt(),killedPetVariant:this.readVarInt(),killerEntityType:this.readVarInt(),killerVariant:this.readVarInt(),damageSource:this.readVarInt()};break;case x.CauldronBlockUsed:this.event_data={blockInteractionType:this.readVarInt(),itemId:this.readVarInt()};break;case x.ComposterBlockUsed:this.event_data={blockInteractionType:this.readVarInt(),itemId:this.readVarInt()};break;case x.BellBlockUsed:this.event_data={itemId:this.readVarInt()};break;case x.ActorDefinition:this.event_data={eventName:this.readVarString()};break;case x.RaidUpdate:this.event_data={currentRaidWave:this.readVarInt(),totalRaidWaves:this.readVarInt(),wonRaid:this.readBool()};break;case x.PlayerMovementAnomaly:this.event_data={};break;case x.PlayerMovementCorrected:this.event_data={};break;case x.HoneyHarvested:this.event_data={};break;case x.TargetBlockHit:this.event_data={redstoneLevel:this.readVarInt()};break;case x.PiglinBarter:this.event_data={itemId:this.readVarInt(),wasTargetingBarteringPlayer:this.readBool()};break;case x.WaxedOrUnwaxedCopper:this.event_data={playerWaxedOrUnwaxedCopperBlockId:this.readVarInt()};break;case x.CodeBuilderRuntimeAction:this.event_data={codeBuilderRuntimeAction:this.readVarString()};break;case x.CodeBuilderScoreboard:this.event_data={objectiveName:this.readVarString(),codeBuilderScoreboardScore:this.readVarInt()};break;case x.StriderRiddenInLavaInOverworld:this.event_data={};break;case x.SneakCloseToSculkSensor:this.event_data={};break;case x.CarefulRestoration:this.event_data={};break;case x.ItemUsed:this.event_data={itemId:this.readShort(),itemAux:this.readVarInt(),useMethod:this.readVarInt(),useCount:this.readVarInt()};break;default:this.event_data=void 0}return this}};Hs=r3([i3(p.LegacyTelemetryEvent)],Hs);import{VarInt as o3}from"@serenityjs/binarystream";import{Proto as n3,Serialize as rh}from"@serenityjs/raknet";function Kp(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Kp,"_ts_decorate");function eh(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(eh,"_ts_metadata");var Qi=class extends f{static{s(this,"LevelEventGenericPacket")}eventId;nbtData};Kp([rh(o3),eh("design:type",Number)],Qi.prototype,"eventId",void 0);Kp([rh(Ba),eh("design:type",typeof Ba>"u"?Object:Ba)],Qi.prototype,"nbtData",void 0);Qi=Kp([n3(p.LevelEventGeneric)],Qi);import{VarInt as s3}from"@serenityjs/binarystream";import{Proto as c3,Serialize as p3}from"@serenityjs/raknet";function ih(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(ih,"_ts_decorate");function a3(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(a3,"_ts_metadata");var In=class extends f{static{s(this,"SetDifficultyPacket")}difficulty};ih([p3(s3),a3("design:type",typeof _n>"u"?Object:_n)],In.prototype,"difficulty",void 0);In=ih([c3(p.SetDifficulty)],In);import{Proto as f3,Serialize as Gs}from"@serenityjs/raknet";import{ZigZag as oh}from"@serenityjs/binarystream";function Rn(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Rn,"_ts_decorate");function Ws(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Ws,"_ts_metadata");var Le=class extends f{static{s(this,"SetSpawnPositionPacket")}spawnType;playerPosition;dimension;worldPosition};Rn([Gs(oh),Ws("design:type",typeof qn>"u"?Object:qn)],Le.prototype,"spawnType",void 0);Rn([Gs(b),Ws("design:type",typeof b>"u"?Object:b)],Le.prototype,"playerPosition",void 0);Rn([Gs(oh),Ws("design:type",Number)],Le.prototype,"dimension",void 0);Rn([Gs(b),Ws("design:type",typeof b>"u"?Object:b)],Le.prototype,"worldPosition",void 0);Le=Rn([f3(p.SetSpawnPosition)],Le);import{ZigZag as l3}from"@serenityjs/binarystream";import{Proto as m3,Serialize as u3}from"@serenityjs/raknet";function nh(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(nh,"_ts_decorate");function d3(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(d3,"_ts_metadata");var kn=class extends f{static{s(this,"SetHealthPacket")}health};nh([u3(l3),d3("design:type",Number)],kn.prototype,"health",void 0);kn=nh([m3(p.SetHealth)],kn);import{CompoundTag as Qp}from"@serenityjs/nbt";import{Proto as g3,Serialize as y3}from"@serenityjs/raknet";function ah(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(ah,"_ts_decorate");function h3(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(h3,"_ts_metadata");var Sn=class extends f{static{s(this,"SyncActorPropertyPacket")}properties};ah([y3(Qp,!0),h3("design:type",typeof Qp>"u"?Object:Qp)],Sn.prototype,"properties",void 0);Sn=ah([g3(p.SyncActorProperty)],Sn);import{Proto as w3,Serialize as ch}from"@serenityjs/raknet";function $p(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s($p,"_ts_decorate");function sh(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(sh,"_ts_metadata");var $i=class extends f{static{s(this,"TrimDataPacket")}patterns;materials};$p([ch(Oa),sh("design:type",typeof Oa>"u"?Object:Oa)],$i.prototype,"patterns",void 0);$p([ch(Ca),sh("design:type",typeof Ca>"u"?Object:Ca)],$i.prototype,"materials",void 0);$i=$p([w3(p.TrimData)],$i);import{Proto as P3,Serialize as x3}from"@serenityjs/raknet";function ph(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(ph,"_ts_decorate");function b3(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(b3,"_ts_metadata");var Bn=class extends f{static{s(this,"UnlockedRecipesPacket")}recipes};ph([x3(Va),b3("design:type",typeof Va>"u"?Object:Va)],Bn.prototype,"recipes",void 0);Bn=ph([P3(p.UnlockedRecipes)],Bn);import{Proto as I3,Serialize as Lp}from"@serenityjs/raknet";import{Endianness as fh,Int64 as R3,Uint16 as k3,ZigZag as S3}from"@serenityjs/binarystream";function As(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(As,"_ts_decorate");function Xp(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Xp,"_ts_metadata");var Tr=class extends f{static{s(this,"RequestPermissionsPacket")}actorUniqueId;permissionLevel;flags;getFlag(e){return(this.flags&e)===e}setFlag(e,r){r?this.flags|=e:this.flags&=~e}};As([Lp(R3,fh.Little),Xp("design:type",typeof BigInt>"u"?Object:BigInt)],Tr.prototype,"actorUniqueId",void 0);As([Lp(S3),Xp("design:type",typeof Un>"u"?Object:Un)],Tr.prototype,"permissionLevel",void 0);As([Lp(k3,fh.Little),Xp("design:type",Number)],Tr.prototype,"flags",void 0);Tr=As([I3(p.RequestPermissions)],Tr);import{Proto as B3,Serialize as lh}from"@serenityjs/raknet";import{VarInt as O3,VarString as C3}from"@serenityjs/binarystream";function Ep(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Ep,"_ts_decorate");function dh(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(dh,"_ts_metadata");var Xi=class extends f{static{s(this,"ServerSettingsResponsePacket")}formId;payload};Ep([lh(O3),dh("design:type",Number)],Xi.prototype,"formId",void 0);Ep([lh(C3),dh("design:type",String)],Xi.prototype,"payload",void 0);Xi=Ep([B3(p.ServerSettingsResponse)],Xi);import{Proto as V3,Serialize as he}from"@serenityjs/raknet";import{Bool as vp,Endianness as j3,Uint32 as _3,VarString as tf}from"@serenityjs/binarystream";function Gt(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Gt,"_ts_decorate");function ue(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(ue,"_ts_metadata");var ut=class extends f{static{s(this,"CommandBlockUpdatePacket")}isBlock;actorRuntimeId;settings;command;lastOutput;customName;trackOutput;tickDelay;executeFirstTick};Gt([he(vp),ue("design:type",Boolean)],ut.prototype,"isBlock",void 0);Gt([he(Wl,0,"isBlock"),ue("design:type",Object)],ut.prototype,"actorRuntimeId",void 0);Gt([he(Gl,0,"isBlock"),ue("design:type",Object)],ut.prototype,"settings",void 0);Gt([he(tf),ue("design:type",String)],ut.prototype,"command",void 0);Gt([he(tf),ue("design:type",String)],ut.prototype,"lastOutput",void 0);Gt([he(tf),ue("design:type",String)],ut.prototype,"customName",void 0);Gt([he(vp),ue("design:type",Boolean)],ut.prototype,"trackOutput",void 0);Gt([he(_3,j3.Little),ue("design:type",Number)],ut.prototype,"tickDelay",void 0);Gt([he(vp),ue("design:type",Boolean)],ut.prototype,"executeFirstTick",void 0);ut=Gt([V3(p.CommandBlockUpdate)],ut);import{Proto as D3,Serialize as N3}from"@serenityjs/raknet";import{VarString as Z3}from"@serenityjs/binarystream";function mh(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(mh,"_ts_decorate");function U3(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(U3,"_ts_metadata");var On=class extends f{static{s(this,"ShowProfilePacket")}xuid};mh([N3(Z3),U3("design:type",String)],On.prototype,"xuid",void 0);On=mh([D3(p.ShowProfile)],On);import{Proto as M3,Serialize as hh}from"@serenityjs/raknet";import{VarString as z3,ZigZong as F3}from"@serenityjs/binarystream";function ef(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(ef,"_ts_decorate");function uh(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(uh,"_ts_metadata");var Li=class extends f{static{s(this,"DebugInfoPacket")}actorUniqueId;data};ef([hh(F3),uh("design:type",typeof BigInt>"u"?Object:BigInt)],Li.prototype,"actorUniqueId",void 0);ef([hh(z3),uh("design:type",String)],Li.prototype,"data",void 0);Li=ef([M3(p.DebugInfo)],Li);import{Proto as T3,Serialize as ve}from"@serenityjs/raknet";import{Endianness as Ei,Float32 as Js,Uint32 as q3,Uint64 as H3,VarString as W3}from"@serenityjs/binarystream";function ge(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(ge,"_ts_decorate");function Ee(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Ee,"_ts_metadata");var kt=class extends f{static{s(this,"ClientBoundDebugRendererPacket")}type;text;position;red;green;blue;alpha;duration};ge([ve(q3,Ei.Little),Ee("design:type",Number)],kt.prototype,"type",void 0);ge([ve(W3),Ee("design:type",String)],kt.prototype,"text",void 0);ge([ve(l),Ee("design:type",typeof l>"u"?Object:l)],kt.prototype,"position",void 0);ge([ve(Js,Ei.Little),Ee("design:type",Number)],kt.prototype,"red",void 0);ge([ve(Js,Ei.Little),Ee("design:type",Number)],kt.prototype,"green",void 0);ge([ve(Js,Ei.Little),Ee("design:type",Number)],kt.prototype,"blue",void 0);ge([ve(Js,Ei.Little),Ee("design:type",Number)],kt.prototype,"alpha",void 0);ge([ve(H3,Ei.Little),Ee("design:type",typeof BigInt>"u"?Object:BigInt)],kt.prototype,"duration",void 0);kt=ge([T3(p.ClientBoundDebugRenderer)],kt);import{Uint8 as G3,Bool as A3}from"@serenityjs/binarystream";import{Proto as J3,Serialize as Vn}from"@serenityjs/raknet";function vi(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(vi,"_ts_decorate");function Cn(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Cn,"_ts_metadata");var ye=class extends f{static{s(this,"CorrectPlayerMovePredictionPacket")}prediction;position;velocity;onGround;inputTick};vi([Vn(G3),Cn("design:type",typeof Wn>"u"?Object:Wn)],ye.prototype,"prediction",void 0);vi([Vn(l),Cn("design:type",typeof l>"u"?Object:l)],ye.prototype,"position",void 0);vi([Vn(l),Cn("design:type",typeof l>"u"?Object:l)],ye.prototype,"velocity",void 0);vi([Vn(A3),Cn("design:type",Boolean)],ye.prototype,"onGround",void 0);vi([Vn(Q),Cn("design:type",typeof Q>"u"?Object:Q)],ye.prototype,"inputTick",void 0);ye=vi([J3(p.CorrectPlayerMovePrediction)],ye);import{VarInt as gh,VarLong as yh}from"@serenityjs/binarystream";import{Serialize as Ks,Proto as Y3}from"@serenityjs/raknet";function jn(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(jn,"_ts_decorate");function Ys(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Ys,"_ts_metadata");var tr=class extends f{static{s(this,"MovementEffectPacket")}runtimeId;type;duration;inputTick};jn([Ks(yh),Ys("design:type",typeof BigInt>"u"?Object:BigInt)],tr.prototype,"runtimeId",void 0);jn([Ks(gh),Ys("design:type",typeof Gn>"u"?Object:Gn)],tr.prototype,"type",void 0);jn([Ks(gh),Ys("design:type",Number)],tr.prototype,"duration",void 0);jn([Ks(yh),Ys("design:type",typeof BigInt>"u"?Object:BigInt)],tr.prototype,"inputTick",void 0);tr=jn([Y3(p.MovementEffect)],tr);import{Proto as K3,Serialize as at}from"@serenityjs/raknet";import{Bool as Q3,Byte as $3,Endianness as we,VarInt as X3,ZigZong as L3}from"@serenityjs/binarystream";function v(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(v,"_ts_decorate");function nt(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(nt,"_ts_metadata");var J=class extends f{static{s(this,"ClientBoundMapItemDataPacket")}mapId;flags;dimension;isLocked;origin;mapIncludedIn;scale;trackedActors;decorations;width;height;xCoordinate;yCoordinate;pixels};v([at(L3),nt("design:type",typeof BigInt>"u"?Object:BigInt)],J.prototype,"mapId",void 0);v([at(X3),nt("design:type",Number)],J.prototype,"flags",void 0);v([at($3),nt("design:type",Number)],J.prototype,"dimension",void 0);v([at(Q3),nt("design:type",Boolean)],J.prototype,"isLocked",void 0);v([at(b),nt("design:type",typeof b>"u"?Object:b)],J.prototype,"origin",void 0);v([at(Ql,we.Little,"flags"),nt("design:type",Object)],J.prototype,"mapIncludedIn",void 0);v([at(Xl,we.Little,"flags"),nt("design:type",Object)],J.prototype,"scale",void 0);v([at(Kl,we.Little,"flags"),nt("design:type",Object)],J.prototype,"trackedActors",void 0);v([at(Yl,we.Little,"flags"),nt("design:type",Object)],J.prototype,"decorations",void 0);v([at(ti,we.Little,"flags"),nt("design:type",Object)],J.prototype,"width",void 0);v([at(ti,we.Little,"flags"),nt("design:type",Object)],J.prototype,"height",void 0);v([at(ti,we.Little,"flags"),nt("design:type",Object)],J.prototype,"xCoordinate",void 0);v([at(ti,we.Little,"flags"),nt("design:type",Object)],J.prototype,"yCoordinate",void 0);v([at(ti,we.Little,"flags"),nt("design:type",Object)],J.prototype,"pixels",void 0);J=v([K3(p.ClientBoundMapItemData)],J);import{Proto as E3,Serialize as bh}from"@serenityjs/raknet";import{ZigZong as v3}from"@serenityjs/binarystream";function rf(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(rf,"_ts_decorate");function wh(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(wh,"_ts_metadata");var to=class extends f{static{s(this,"MapInfoRequestPacket")}mapId;mapPixels};rf([bh(v3),wh("design:type",typeof BigInt>"u"?Object:BigInt)],to.prototype,"mapId",void 0);rf([bh(Ll),wh("design:type",typeof Array>"u"?Object:Array)],to.prototype,"mapPixels",void 0);to=rf([E3(p.MapInfoRequest)],to);import{Proto as tS,Serialize as Jt}from"@serenityjs/raknet";import{Bool as Ph,Int8 as xh,VarString as eS,ZigZag as Ih,ZigZong as Rh}from"@serenityjs/binarystream";function Dt(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Dt,"_ts_decorate");function At(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(At,"_ts_metadata");var st=class extends f{static{s(this,"UpdateTradePacket")}windowId;containerType;size;tradeTier;tradeActorUnique;playerTradingUnique;displayName;useNewUI;economyTrade;offers};Dt([Jt(xh),At("design:type",typeof Zn>"u"?Object:Zn)],st.prototype,"windowId",void 0);Dt([Jt(xh),At("design:type",typeof Mn>"u"?Object:Mn)],st.prototype,"containerType",void 0);Dt([Jt(Ih),At("design:type",Number)],st.prototype,"size",void 0);Dt([Jt(Ih),At("design:type",Number)],st.prototype,"tradeTier",void 0);Dt([Jt(Rh),At("design:type",typeof BigInt>"u"?Object:BigInt)],st.prototype,"tradeActorUnique",void 0);Dt([Jt(Rh),At("design:type",typeof BigInt>"u"?Object:BigInt)],st.prototype,"playerTradingUnique",void 0);Dt([Jt(eS),At("design:type",String)],st.prototype,"displayName",void 0);Dt([Jt(Ph),At("design:type",Boolean)],st.prototype,"useNewUI",void 0);Dt([Jt(Ph),At("design:type",Boolean)],st.prototype,"economyTrade",void 0);Dt([Jt(vl),At("design:type",typeof Array>"u"?Object:Array)],st.prototype,"offers",void 0);st=Dt([tS(p.UpdateTrade)],st);var lot={[p.Login]:ai,[p.PlayStatus]:Vo,[p.ServerToClientHandshake]:Eo,[p.ClientToServerHandshake]:Ds,[p.Disconnect]:lr,[p.ResourcePacksInfo]:Ft,[p.ResourcePackStack]:Ct,[p.ResourcePackClientResponse]:ui,[p.Text]:It,[p.SetTime]:Ao,[p.StartGame]:m,[p.AddPlayer]:U,[p.AddEntity]:Y,[p.RemoveEntity]:Uo,[p.AddItemActor]:Bt,[p.TakeItemActor]:Bi,[p.MoveActorAbsolute]:De,[p.MovePlayer]:ot,[p.RiderJump]:hn,[p.UpdateBlock]:We,[p.LevelEvent]:ur,[p.BlockEvent]:Zr,[p.ActorEvent]:Br,[p.MobEffect]:Ut,[p.UpdateAttributes]:Rr,[p.InventoryTransaction]:ii,[p.MobEquipment]:Xt,[p.MobArmorEquipment]:Ht,[p.Interact]:mr,[p.BlockPickRequest]:Qt,[p.EntityPickRequest]:Mr,[p.PlayerAction]:vt,[p.HurtArmor]:zr,[p.SetActorData]:Me,[p.SetActorMotion]:Ir,[p.SetActorLink]:wn,[p.SetHealth]:kn,[p.SetSpawnPosition]:Le,[p.Animate]:fr,[p.Respawn]:xr,[p.ContainerOpen]:_e,[p.ContainerClose]:dr,[p.PlayerHotbar]:yr,[p.InventoryContent]:Ue,[p.InventorySlot]:$t,[p.ContainerSetData]:Dr,[p.CraftingData]:se,[p.BlockActorData]:Ni,[p.LevelChunk]:Ka,[p.SetCommandsEnabled]:No,[p.SetDifficulty]:In,[p.ChangeDimension]:Ve,[p.SetPlayerGameType]:zo,[p.PlayerList]:li,[p.LegacyTelemetryEvent]:Hs,[p.ClientBoundMapItemData]:J,[p.MapInfoRequest]:to,[p.RequestChunkRadius]:mi,[p.ChunkRadiusUpdate]:po,[p.GameRulesChanged]:xn,[p.ShowCredits]:Yi,[p.BossEvent]:Ge,[p.AvailableCommands]:Pt,[p.CommandRequest]:je,[p.CommandBlockUpdate]:ut,[p.CommandOutput]:fo,[p.UpdateTrade]:st,[p.ResourcePackDataInfo]:rs,[p.ResourcePackChunkData]:os,[p.ResourcePackChunkRequest]:gi,[p.Transfer]:kr,[p.PlaySound]:Qe,[p.StopSound]:Fr,[p.SetTitle]:xt,[p.StructureBlockUpdate]:Ke,[p.PlayerSkin]:oe,[p.BookEdit]:Ur,[p.NpcRequest]:ae,[p.ModalFormRequest]:ci,[p.ModalFormResponse]:Lt,[p.ServerSettingsResponse]:Xi,[p.ShowProfile]:On,[p.RemoveObjective]:Jo,[p.SetDisplayObjective]:ie,[p.SetScore]:Ri,[p.MoveActorDelta]:Rt,[p.SetScoreboardIdentity]:ki,[p.SetLocalPlayerAsInitialized]:Mo,[p.NetworkStackLatency]:Oi,[p.SpawnParticleEffect]:ce,[p.AvailableActorIdentifiers]:dn,[p.NetworkChunkPublisherUpdate]:gr,[p.BiomeDefinitionList]:Na,[p.LevelSoundEvent]:Zt,[p.LevelEventGeneric]:Qi,[p.OnScreenTextureAnimation]:gn,[p.Emote]:qt,[p.CompletedUsingItem]:zi,[p.NetworkSettings]:Et,[p.PlayerAuthInput]:D,[p.CreativeContent]:uo,[p.PlayerEnchantOptions]:un,[p.ItemStackRequest]:bo,[p.ItemStackResponse]:Po,[p.EmoteList]:ji,[p.DebugInfo]:Li,[p.PacketViolationWarning]:Ne,[p.AnimateEntity]:_t,[p.CameraShake]:Ye,[p.PlayerFog]:bn,[p.CorrectPlayerMovePrediction]:ye,[p.ItemComponent]:wo,[p.ClientBoundDebugRenderer]:kt,[p.SyncActorProperty]:Sn,[p.NpcDialogue]:Tt,[p.PlayerStartItemCooldown]:Hi,[p.ScriptMessage]:bi,[p.DimensionData]:mn,[p.RequestPermissions]:Tr,[p.ToastRequest]:Pi,[p.UpdateAbilities]:He,[p.UpdateAdventureSettings]:re,[p.DeathInfo]:Zi,[p.RequestNetworkSettings]:Do,[p.UpdateClientInputLocks]:Ki,[p.CameraPresetsPacket]:nn,[p.UnlockedRecipes]:Bn,[p.CameraInstructions]:an,[p.TrimData]:$i,[p.OpenSign]:Ti,[p.SetPlayerInventoryOptions]:ne,[p.SetHud]:Si,[p.AwardAchievement]:Lo,[p.ClientboundCloseForm]:Bs,[p.ServerboundLoadingScreenPacket]:qi,[p.CurrentStructureFeature]:Pn,[p.ServerboundDiagnosticPacket]:mt,[p.MovementEffect]:tr};var Qat=class extends f{static{s(this,"DebugEventPacket")}data;serialize(){let e={type:"event",event:this.data},r=Buffer.from(JSON.stringify(e)),o=(r.length+1).toString(16).padStart(8,"0")+`
`;return this.writeBuffer(Buffer.from(o)),this.writeBuffer(r),this.writeBuffer(Buffer.from(`
`)),this.getBuffer()}deserialize(){let e=this.readBuffer(8).toString("utf8"),r=this.readBuffer(Number.parseInt(e,16));return this.data=JSON.parse(r.toString()),this}};import{BinaryStream as kh}from"@serenityjs/binarystream";var est=class{static{s(this,"Framer")}static unframe(e){let r=new kh(e),o=[];do{let n=r.readVarInt(),i=r.readBuffer(n);o.push(i)}while(!r.cursorAtEnd());return o}static frame(...e){let r=new kh;for(let o of e)r.writeVarInt(o.length),r.writeBuffer(o);return r.getBuffer()}};import{BinaryStream as rS}from"@serenityjs/binarystream";function ast(t){return rS.fromBuffer(t).readVarInt()}s(ast,"getPacketId");var hst=function(t){return t[t.EMPTY=0]="EMPTY",t[t.INITIALLY_UNLOCKED=1]="INITIALLY_UNLOCKED",t[t.NEWLY_UNLOCKED=2]="NEWLY_UNLOCKED",t[t.REMOVED=3]="REMOVED",t[t.REMOVED_ALL=4]="REMOVED_ALL",t}({});export{j as AbilityIndex,ea as AbilityLayer,zh as AbilityLayerType,vs as AbilitySet,Xh as AbilitySetId,xg as ActorDamageCause,ro as ActorDataId,Z as ActorDataType,lg as ActorEvent,Br as ActorEventPacket,Pg as ActorFlag,Ra as ActorLink,zg as ActorLinkType,Y as AddEntityPacket,Bt as AddItemActorPacket,U as AddPlayerPacket,dd as AnimateAction,ha as AnimateEntity,_t as AnimateEntityPacket,zn as AnimateId,fr as AnimatePacket,Mf as Attribute,tc as AttributeModifier,qh as AttributeName,dn as AvailableActorIdentifiersPacket,Pt as AvailableCommandsPacket,Lo as AwardAchievementPacket,nC as BehaviorPackInfo,Na as BiomeDefinitionListPacket,i8 as BlockAction,Ni as BlockActorDataPacket,Zr as BlockEventPacket,Zg as BlockEventType,ig as BlockFace,Qt as BlockPickRequestPacket,b as BlockPosition,ya as BookActions,yt as BookEditAction,Ur as BookEditPacket,la as BossEventAdd,fg as BossEventColor,Ge as BossEventPacket,ua as BossEventUpdate,N as BossEventUpdateType,Og as CameraAudioListener,$d as CameraFadeDuration,Xd as CameraFadeInstruction,ba as CameraInstructions,an as CameraInstructionsPacket,Jd as CameraPreset,nn as CameraPresetsPacket,Kd as CameraSetEasing,Qd as CameraSetInstruction,Ye as CameraShakePacket,Sd as ChainedSubcommandValues,Ve as ChangeDimensionPacket,Tf as ChunkCoords,po as ChunkRadiusUpdatePacket,kt as ClientBoundDebugRendererPacket,J as ClientBoundMapItemDataPacket,Cl as ClientPredictedVehicle,Ds as ClientToServerHandshakePacket,Bs as ClientboundCloseFormPacket,zd as Color,Wl as CommandBlockActorRuntimeId,Wg as CommandBlockMode,Gl as CommandBlockSettings,ut as CommandBlockUpdatePacket,or as CommandOriginData,aa as CommandOutputData,nc as CommandOutputMessage,fo as CommandOutputPacket,Mh as CommandParameterType,Zh as CommandPermissionLevel,je as CommandRequestPacket,nd as Commands,zi as CompletedUsingItemPacket,gt as ComplexInventoryTransaction,yd as ComponentItem,Vh as CompressionMethod,dr as ContainerClosePacket,Vg as ContainerDataType,Zn as ContainerId,el as ContainerMixDataEntry,Th as ContainerName,_e as ContainerOpenPacket,Dr as ContainerSetDataPacket,Mn as ContainerType,ye as CorrectPlayerMovePredictionPacket,vd as CraftingDataEntry,M as CraftingDataEntryType,se as CraftingDataPacket,uo as CreativeContentPacket,hd as CreativeItems,Pn as CurrectStructureFeaturePacket,Nt as DataItem,f as DataPacket,Zi as DeathInfoPacket,Zd as DeathParameters,Qat as DebugEventPacket,Li as DebugInfoPacket,Fg as DebuggerProtocolVersion,$j as DefaultAbilityValues,Wh as DeviceOS,_n as Difficulty,mn as DimensionDataPacket,Pc as DimensionDefinition,xa as DimensionDefinitionGroup,Kh as DimensionType,Ia as DisconnectMessage,lr as DisconnectPacket,Ch as DisconnectReason,ng as DisplaySlotType,sd as DynamicEnums,Cg as EasingType,hg as EffectType,mg as EmoteFlags,ji as EmoteListPacket,qt as EmotePacket,Dd as Emotes,Bl as EnchantOption,pg as Enchantment,Gf as EntityAttributes,Mr as EntityPickRequestPacket,pd as EnumConstraints,kd as EnumValues,ed as Enums,ug as EquipmentSlot,Qn as Experiments,Sa as Fogs,est as Framer,St as FullContainerName,yc as FurnanceRecipe,Yg as GameRule,Re as GameRuleType,Wr as GameRules,xn as GameRulesChangedPacket,Uh as Gamemode,jg as GeneratorType,sg as HudElement,_d as HudElementData,cg as HudVisibility,zr as HurtArmorPacket,X as InputData,Mg as InputLockFlags,Dg as InputMode,xc as InputTransaction,qr as InteractAction,mr as InteractPacket,Zf as InteractPosition,Ng as InteractionMode,tt as InternalType,$r as InventoryAction,Ue as InventoryContentPacket,yg as InventoryLayout,wg as InventoryLeftTab,bg as InventoryRightTab,$t as InventorySlotPacket,pc as InventorySource,rr as InventorySourceType,pa as InventoryTransaction,ii as InventoryTransactionPacket,wo as ItemComponentPacket,Pf as ItemData,Qr as ItemInstanceUserData,dc as ItemReleaseInventoryTransaction,rg as ItemReleaseInventoryTransactionType,sl as ItemStackActionTakePlace,xl as ItemStackRequest,Er as ItemStackRequestAction,ll as ItemStackRequestActionBeanconPayment,gl as ItemStackRequestActionCraftCreative,JZ as ItemStackRequestActionCraftGrindstoneRequest,XZ as ItemStackRequestActionCraftLoomRequest,ul as ItemStackRequestActionCraftRecipe,hl as ItemStackRequestActionCraftRecipeAuto,dl as ItemStackRequestActionCreate,fl as ItemStackRequestActionDestroyConsume,pl as ItemStackRequestActionDrop,ml as ItemStackRequestActionMineBlock,wl as ItemStackRequestActionOptional,bl as ItemStackRequestActionResultsDeprecated,cl as ItemStackRequestActionSwap,W as ItemStackRequestActionType,bo as ItemStackRequestPacket,K as ItemStackRequestSlotInfo,Po as ItemStackResponsePacket,Qf as ItemStackResponses,$h as ItemStackStatus,Lf as ItemStacks,Gg as ItemTrackedType,Xr as ItemUseInventoryTransaction,tg as ItemUseInventoryTransactionType,Ig as ItemUseMethod,fc as ItemUseOnEntityInventoryTransaction,eg as ItemUseOnEntityInventoryTransactionType,Hs as LegacyTelemetryEventPacket,nr as LegacyTransaction,Ka as LevelChunkPacket,Lh as LevelEvent,Qi as LevelEventGenericPacket,ur as LevelEventPacket,Eh as LevelSoundEvent,Zt as LevelSoundEventPacket,ra as Links,ai as LoginPacket,Jn as LoginTokens,vj as MINECRAFT_TICK_SPEED,Ej as MINECRAFT_VERSION,Ql as MapCreationBits,Sc as MapDecoration,Yl as MapDecorationBits,Ag as MapDecorationType,to as MapInfoRequestPacket,Ll as MapPixel,Xl as MapScale,ti as MapTextureUpdateBits,Kl as MapTrackedItems,rl as MaterialReducerDataEntry,Kg as MaterialRenderMethod,Ca as Materials,qg as MemoryTier,Ht as MobArmorEquipmentPacket,gg as MobEffectEvents,Ut as MobEffectPacket,Xt as MobEquipmentPacket,Wf as ModalFormCanceled,Qh as ModalFormCanceledReason,Hf as ModalFormData,ci as ModalFormRequestPacket,Lt as ModalFormResponsePacket,Ah as ModalFormType,De as MoveActorAbsolutePacket,Rt as MoveActorDeltaPacket,Tg as MoveDeltaFlags,Dn as MoveMode,ot as MovePlayerPacket,tr as MovementEffectPacket,Gn as MovementEffectType,Ba as NbtLoop,wf as NetworkBlockTypeDefinition,gr as NetworkChunkPublisherUpdatePacket,_ as NetworkItemInstanceDescriptor,I as NetworkItemStackDescriptor,Et as NetworkSettingsPacket,Oi as NetworkStackLatencyPacket,dg as NpcDialogueAction,Tt as NpcDialoguePacket,ae as NpcRequestPacket,Rg as NpcRequestType,og as ObjectiveSortOrder,gn as OnScreenTextureAnimationPacket,Ti as OpenSignPacket,k as Optional,Lj as PROTOCOL_VERSION,uC as PackLinks,vh as PackType,p as Packet,Ne as PacketViolationWarningPacket,lot as Packets,Oa as Patterns,Hg as PermissionFlag,Un as PermissionLevel,Ug as PlayMode,Qe as PlaySoundPacket,jh as PlayStatus,Vo as PlayStatusPacket,vt as PlayerActionPacket,er as PlayerActionType,vr as PlayerAuthInputData,D as PlayerAuthInputPacket,ja as PlayerAuthInputTransaction,Hl as PlayerAuthItemStackRequest,Rc as PlayerBlockActionData,Ul as PlayerBlockActions,un as PlayerEnchantOptionsPacket,bn as PlayerFogPacket,yr as PlayerHotbarPacket,Q as PlayerInputTick,Nn as PlayerListAction,li as PlayerListPacket,jf as PlayerListRecord,oe as PlayerSkinPacket,Hi as PlayerStartItemCooldownPacket,Bd as PostFixes,tl as PotionMixDataEntry,Jg as PredictedResult,Wn as PredictionType,bt as PropertySyncData,C as RecipeIngredient,Yt as RecipeUnlockingRequirement,Uo as RemoveEntityPacket,Jo as RemoveObjectivePacket,mi as RequestChunkRadiusPacket,Do as RequestNetworkSettingsPacket,Tr as RequestPermissionsPacket,Xs as ResourceIdVersions,os as ResourcePackChunkDataPacket,gi as ResourcePackChunkRequestPacket,ui as ResourcePackClientResponsePacket,rs as ResourcePackDataInfoPacket,pf as ResourcePackIds,_h as ResourcePackResponse,Ct as ResourcePackStackPacket,Ft as ResourcePacksInfoPacket,xr as RespawnPacket,Gh as RespawnState,hn as RiderJumpPacket,sa as Rotation,ka as RotationByte,ic as SHIELD_NETWORK_ID,Cd as ScoreEntry,Tn as ScoreboardActionType,fa as ScoreboardIdentity,ag as ScoreboardIdentityAction,ke as ScoreboardIdentityType,bi as ScriptMessagePacket,ir as SerializedSkin,Hn as ServerAuthMovementMode,Xi as ServerSettingsResponsePacket,Eo as ServerToClientHandshakePacket,mt as ServerboundDiagnosticsPacket,qi as ServerboundLoadingScreenPacketPacket,kg as ServerboundLoadingScreenType,Me as SetActorDataPacket,wn as SetActorLinkPacket,Ir as SetActorMotionPacket,No as SetCommandsEnabledPacket,In as SetDifficultyPacket,ie as SetDisplayObjectivePacket,kn as SetHealthPacket,Si as SetHudPacket,Mo as SetLocalPlayerAsInitializedPacket,zo as SetPlayerGameTypePacket,ne as SetPlayerInventoryOptionsPacket,Ri as SetScorePacket,ki as SetScoreboardIdentityPacket,Le as SetSpawnPositionPacket,Ao as SetTimePacket,xt as SetTitlePacket,Bg as ShakeAction,Sg as ShakeType,oo as ShapedRecipe,ar as ShapelessRecipe,Yi as ShowCreditsPacket,On as ShowProfilePacket,Ic as SignedBlockPosition,Ln as SkinAnimation,ct as SkinImage,En as SkinPersonaPiece,vn as SkinPersonaTintPiece,ce as SpawnParticleEffectPacket,qn as SpawnType,m as StartGamePacket,Fr as StopSoundPacket,Ke as StructureBlockUpdatePacket,Pa as StructureEditorData,bc as StructureSettings,id as Subcommands,Sn as SyncActorPropertyPacket,Bi as TakeItemActorPacket,x as TelemetryEventType,If as TeleportCause,It as TextPacket,$ as TextPacketType,Nf as TextParameters,Df as TextSource,af as TexturePackInfo,Fh as TitleType,Pi as ToastRequestPacket,vl as TradeOffer,Hh as TransactionSourceType,kr as TransferPacket,_g as TriggerType,$i as TrimDataPacket,Va as UnlockedRecipesEntry,Bn as UnlockedRecipesPacket,hst as UnlockedRecipesType,Fn as UnlockingContext,He as UpdateAbilitiesPacket,re as UpdateAdventureSettingsPacket,Rr as UpdateAttributesPacket,Yh as UpdateBlockFlagsType,Jh as UpdateBlockLayerType,We as UpdateBlockPacket,Ki as UpdateClientInputLocksPacket,st as UpdateTradePacket,C4 as UserDataShapelessRecipe,b2 as VarStringArray,V as Vector2f,l as Vector3f,Nh as ViolationSeverity,Dh as ViolationType,ast as getPacketId};
//# sourceMappingURL=data:application/json;base64,