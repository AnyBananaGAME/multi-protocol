var Oh=Object.defineProperty;var s=(t,e)=>Oh(t,"name",{value:e,configurable:!0});var p=function(t){return t[t.Login=1]="Login",t[t.PlayStatus=2]="PlayStatus",t[t.ServerToClientHandshake=3]="ServerToClientHandshake",t[t.ClientToServerHandshake=4]="ClientToServerHandshake",t[t.Disconnect=5]="Disconnect",t[t.ResourcePacksInfo=6]="ResourcePacksInfo",t[t.ResourcePackStack=7]="ResourcePackStack",t[t.ResourcePackClientResponse=8]="ResourcePackClientResponse",t[t.Text=9]="Text",t[t.SetTime=10]="SetTime",t[t.StartGame=11]="StartGame",t[t.AddPlayer=12]="AddPlayer",t[t.AddEntity=13]="AddEntity",t[t.RemoveEntity=14]="RemoveEntity",t[t.AddItemActor=15]="AddItemActor",t[t.TakeItemActor=17]="TakeItemActor",t[t.MoveActorAbsolute=18]="MoveActorAbsolute",t[t.MovePlayer=19]="MovePlayer",t[t.RiderJump=20]="RiderJump",t[t.UpdateBlock=21]="UpdateBlock",t[t.LevelEvent=25]="LevelEvent",t[t.BlockEvent=26]="BlockEvent",t[t.ActorEvent=27]="ActorEvent",t[t.MobEffect=28]="MobEffect",t[t.UpdateAttributes=29]="UpdateAttributes",t[t.InventoryTransaction=30]="InventoryTransaction",t[t.MobEquipment=31]="MobEquipment",t[t.MobArmorEquipment=32]="MobArmorEquipment",t[t.Interact=33]="Interact",t[t.BlockPickRequest=34]="BlockPickRequest",t[t.EntityPickRequest=35]="EntityPickRequest",t[t.PlayerAction=36]="PlayerAction",t[t.HurtArmor=38]="HurtArmor",t[t.SetActorData=39]="SetActorData",t[t.SetActorMotion=40]="SetActorMotion",t[t.SetActorLink=41]="SetActorLink",t[t.SetHealth=42]="SetHealth",t[t.SetSpawnPosition=43]="SetSpawnPosition",t[t.Animate=44]="Animate",t[t.Respawn=45]="Respawn",t[t.ContainerOpen=46]="ContainerOpen",t[t.ContainerClose=47]="ContainerClose",t[t.PlayerHotbar=48]="PlayerHotbar",t[t.InventoryContent=49]="InventoryContent",t[t.InventorySlot=50]="InventorySlot",t[t.ContainerSetData=51]="ContainerSetData",t[t.CraftingData=52]="CraftingData",t[t.BlockActorData=56]="BlockActorData",t[t.LevelChunk=58]="LevelChunk",t[t.SetCommandsEnabled=59]="SetCommandsEnabled",t[t.SetDifficulty=60]="SetDifficulty",t[t.ChangeDimension=61]="ChangeDimension",t[t.SetPlayerGameType=62]="SetPlayerGameType",t[t.PlayerList=63]="PlayerList",t[t.LegacyTelemetryEvent=65]="LegacyTelemetryEvent",t[t.ClientBoundMapItemData=67]="ClientBoundMapItemData",t[t.MapInfoRequest=68]="MapInfoRequest",t[t.RequestChunkRadius=69]="RequestChunkRadius",t[t.ChunkRadiusUpdate=70]="ChunkRadiusUpdate",t[t.GameRulesChanged=72]="GameRulesChanged",t[t.BossEvent=74]="BossEvent",t[t.ShowCredits=75]="ShowCredits",t[t.AvailableCommands=76]="AvailableCommands",t[t.CommandRequest=77]="CommandRequest",t[t.CommandBlockUpdate=78]="CommandBlockUpdate",t[t.CommandOutput=79]="CommandOutput",t[t.UpdateTrade=80]="UpdateTrade",t[t.ResourcePackDataInfo=82]="ResourcePackDataInfo",t[t.ResourcePackChunkData=83]="ResourcePackChunkData",t[t.ResourcePackChunkRequest=84]="ResourcePackChunkRequest",t[t.Transfer=85]="Transfer",t[t.PlaySound=86]="PlaySound",t[t.StopSound=87]="StopSound",t[t.SetTitle=88]="SetTitle",t[t.StructureBlockUpdate=90]="StructureBlockUpdate",t[t.PlayerSkin=93]="PlayerSkin",t[t.BookEdit=97]="BookEdit",t[t.NpcRequest=98]="NpcRequest",t[t.ModalFormRequest=100]="ModalFormRequest",t[t.ModalFormResponse=101]="ModalFormResponse",t[t.ServerSettingsResponse=103]="ServerSettingsResponse",t[t.ShowProfile=104]="ShowProfile",t[t.RemoveObjective=106]="RemoveObjective",t[t.SetDisplayObjective=107]="SetDisplayObjective",t[t.SetScore=108]="SetScore",t[t.MoveActorDelta=111]="MoveActorDelta",t[t.SetScoreboardIdentity=112]="SetScoreboardIdentity",t[t.SetLocalPlayerAsInitialized=113]="SetLocalPlayerAsInitialized",t[t.NetworkStackLatency=115]="NetworkStackLatency",t[t.SpawnParticleEffect=118]="SpawnParticleEffect",t[t.AvailableActorIdentifiers=119]="AvailableActorIdentifiers",t[t.NetworkChunkPublisherUpdate=121]="NetworkChunkPublisherUpdate",t[t.BiomeDefinitionList=122]="BiomeDefinitionList",t[t.LevelSoundEvent=123]="LevelSoundEvent",t[t.LevelEventGeneric=124]="LevelEventGeneric",t[t.OnScreenTextureAnimation=130]="OnScreenTextureAnimation",t[t.Emote=138]="Emote",t[t.CompletedUsingItem=142]="CompletedUsingItem",t[t.NetworkSettings=143]="NetworkSettings",t[t.PlayerAuthInput=144]="PlayerAuthInput",t[t.CreativeContent=145]="CreativeContent",t[t.PlayerEnchantOptions=146]="PlayerEnchantOptions",t[t.ItemStackRequest=147]="ItemStackRequest",t[t.ItemStackResponse=148]="ItemStackResponse",t[t.EmoteList=152]="EmoteList",t[t.DebugInfo=155]="DebugInfo",t[t.PacketViolationWarning=156]="PacketViolationWarning",t[t.AnimateEntity=158]="AnimateEntity",t[t.CameraShake=159]="CameraShake",t[t.PlayerFog=160]="PlayerFog",t[t.CorrectPlayerMovePrediction=161]="CorrectPlayerMovePrediction",t[t.ItemRegistry=162]="ItemRegistry",t[t.ClientBoundDebugRenderer=164]="ClientBoundDebugRenderer",t[t.SyncActorProperty=165]="SyncActorProperty",t[t.NpcDialogue=169]="NpcDialogue",t[t.PlayerStartItemCooldown=176]="PlayerStartItemCooldown",t[t.ScriptMessage=177]="ScriptMessage",t[t.DimensionData=180]="DimensionData",t[t.RequestPermissions=185]="RequestPermissions",t[t.ToastRequest=186]="ToastRequest",t[t.UpdateAbilities=187]="UpdateAbilities",t[t.UpdateAdventureSettings=188]="UpdateAdventureSettings",t[t.DeathInfo=189]="DeathInfo",t[t.RequestNetworkSettings=193]="RequestNetworkSettings",t[t.UpdateClientInputLocks=196]="UpdateClientInputLocks",t[t.CameraPresetsPacket=198]="CameraPresetsPacket",t[t.UnlockedRecipes=199]="UnlockedRecipes",t[t.CameraInstructions=300]="CameraInstructions",t[t.TrimData=302]="TrimData",t[t.OpenSign=303]="OpenSign",t[t.SetPlayerInventoryOptions=307]="SetPlayerInventoryOptions",t[t.SetHud=308]="SetHud",t[t.AwardAchievement=309]="AwardAchievement",t[t.ClientboundCloseForm=310]="ClientboundCloseForm",t[t.ServerboundLoadingScreenPacket=312]="ServerboundLoadingScreenPacket",t[t.CurrentStructureFeature=314]="CurrentStructureFeature",t[t.ServerboundDiagnosticPacket=315]="ServerboundDiagnosticPacket",t[t.MovementEffect=318]="MovementEffect",t}(p||{});var Vh=function(t){return t[t.Unknown=0]="Unknown",t[t.CantConnectNoInternet=1]="CantConnectNoInternet",t[t.NoPermissions=2]="NoPermissions",t[t.UnrecoverableError=3]="UnrecoverableError",t[t.ThirdPartyBlocked=4]="ThirdPartyBlocked",t[t.ThirdPartyNoInternet=5]="ThirdPartyNoInternet",t[t.ThirdPartyBadIp=6]="ThirdPartyBadIp",t[t.ThirdPartyNoServerOrServerLocked=7]="ThirdPartyNoServerOrServerLocked",t[t.VersionMismatch=8]="VersionMismatch",t[t.SkinIssue=9]="SkinIssue",t[t.InviteSessionNotFound=10]="InviteSessionNotFound",t[t.EduLevelSettingsMissing=11]="EduLevelSettingsMissing",t[t.LocalServerNotFound=12]="LocalServerNotFound",t[t.LegacyDisconnect=13]="LegacyDisconnect",t[t.UserLeaveGameAttempted=14]="UserLeaveGameAttempted",t[t.PlatformLockedSkinsError=15]="PlatformLockedSkinsError",t[t.RealmsWorldUnassigned=16]="RealmsWorldUnassigned",t[t.RealmsServerCantConnect=17]="RealmsServerCantConnect",t[t.RealmsServerHidden=18]="RealmsServerHidden",t[t.RealmsServerDisabledBeta=19]="RealmsServerDisabledBeta",t[t.RealmsServerDisabled=20]="RealmsServerDisabled",t[t.CrossPlatformDisallowed=21]="CrossPlatformDisallowed",t[t.CantConnect=22]="CantConnect",t[t.SessionNotFound=23]="SessionNotFound",t[t.ClientSettingsIncompatibleWithServer=24]="ClientSettingsIncompatibleWithServer",t[t.ServerFull=25]="ServerFull",t[t.InvalidPlatformSkin=26]="InvalidPlatformSkin",t[t.EditionVersionMismatch=27]="EditionVersionMismatch",t[t.EditionMismatch=28]="EditionMismatch",t[t.LevelNewerThanExeVersion=29]="LevelNewerThanExeVersion",t[t.NoFailOccurred=30]="NoFailOccurred",t[t.BannedSkin=31]="BannedSkin",t[t.Timeout=32]="Timeout",t[t.ServerNotFound=33]="ServerNotFound",t[t.OutdatedServer=34]="OutdatedServer",t[t.OutdatedClient=35]="OutdatedClient",t[t.NoPremiumPlatform=36]="NoPremiumPlatform",t[t.MultiplayerDisabled=37]="MultiplayerDisabled",t[t.NoWifi=38]="NoWifi",t[t.WorldCorruption=39]="WorldCorruption",t[t.NoReason=40]="NoReason",t[t.Disconnected=41]="Disconnected",t[t.InvalidPlayer=42]="InvalidPlayer",t[t.LoggedInOtherLocation=43]="LoggedInOtherLocation",t[t.ServerIdConflict=44]="ServerIdConflict",t[t.NotAllowed=45]="NotAllowed",t[t.NotAuthenticated=46]="NotAuthenticated",t[t.InvalidTenant=47]="InvalidTenant",t[t.UnknownPacket=48]="UnknownPacket",t[t.UnexpectedPacket=49]="UnexpectedPacket",t[t.InvalidCommandRequestPacket=50]="InvalidCommandRequestPacket",t[t.HostSuspended=51]="HostSuspended",t[t.LoginPacketNoRequest=52]="LoginPacketNoRequest",t[t.LoginPacketNoCert=53]="LoginPacketNoCert",t[t.MissingClient=54]="MissingClient",t[t.Kicked=55]="Kicked",t[t.KickedForExploit=56]="KickedForExploit",t[t.KickedForIdle=57]="KickedForIdle",t[t.ResourcePackProblem=58]="ResourcePackProblem",t[t.IncompatiblePack=59]="IncompatiblePack",t[t.OutOfStorage=60]="OutOfStorage",t[t.InvalidLevel=61]="InvalidLevel",t[t.DisconnectPacketDeprecated=62]="DisconnectPacketDeprecated",t[t.BlockMismatch=63]="BlockMismatch",t[t.InvalidHeights=64]="InvalidHeights",t[t.InvalidWidths=65]="InvalidWidths",t[t.ConnectionLost=66]="ConnectionLost",t[t.ZombieConnection=67]="ZombieConnection",t[t.Shutdown=68]="Shutdown",t[t.ReasonNotSet=69]="ReasonNotSet",t[t.LoadingStateTimeout=70]="LoadingStateTimeout",t[t.ResourcePackLoadingFailed=71]="ResourcePackLoadingFailed",t[t.SearchingForSessionLoadingScreenFailed=72]="SearchingForSessionLoadingScreenFailed",t[t.ConnProtocolVersion=73]="ConnProtocolVersion",t[t.SubsystemStatusError=74]="SubsystemStatusError",t[t.EmptyAuthFromDiscovery=75]="EmptyAuthFromDiscovery",t[t.EmptyUrlFromDiscovery=76]="EmptyUrlFromDiscovery",t[t.ExpiredAuthFromDiscovery=77]="ExpiredAuthFromDiscovery",t[t.UnknownSignalServiceSignInFailure=78]="UnknownSignalServiceSignInFailure",t[t.XblJoinLobbyFailure=79]="XblJoinLobbyFailure",t[t.UnspecifiedClientInstanceDisconnection=80]="UnspecifiedClientInstanceDisconnection",t[t.ConnSessionNotFound=81]="ConnSessionNotFound",t[t.ConnCreatePeerConnection=82]="ConnCreatePeerConnection",t[t.ConnIce=83]="ConnIce",t[t.ConnConnectRequest=84]="ConnConnectRequest",t[t.ConnConnectResponse=85]="ConnConnectResponse",t[t.ConnNegotiationTimeout=86]="ConnNegotiationTimeout",t[t.ConnInactivityTimeout=87]="ConnInactivityTimeout",t[t.StaleConnectionBeingReplaced=88]="StaleConnectionBeingReplaced",t[t.RealmsSessionNotFound=89]="RealmsSessionNotFound",t[t.BadPacket=90]="BadPacket",t}(Vh||{});var Ch=function(t){return t[t.Zlib=0]="Zlib",t[t.Snappy=1]="Snappy",t[t.NotPresent=2]="NotPresent",t[t.None=255]="None",t}(Ch||{});var jh=function(t){return t[t.LoginSuccess=0]="LoginSuccess",t[t.FailedClient=1]="FailedClient",t[t.FailedServer=2]="FailedServer",t[t.PlayerSpawn=3]="PlayerSpawn",t[t.FailedInvalidTenant=4]="FailedInvalidTenant",t[t.FailedVanillaEdu=5]="FailedVanillaEdu",t[t.FailedIncompatible=6]="FailedIncompatible",t[t.FailedServerFull=7]="FailedServerFull",t[t.FailedEditorVanillaMismatch=8]="FailedEditorVanillaMismatch",t[t.FailedVanillaEditorMismatch=9]="FailedVanillaEditorMismatch",t}(jh||{});var _h=function(t){return t[t.None=0]="None",t[t.Refused=1]="Refused",t[t.SendPacks=2]="SendPacks",t[t.HaveAllPacks=3]="HaveAllPacks",t[t.Completed=4]="Completed",t}(_h||{});var Uh=function(t){return t[t.Survival=0]="Survival",t[t.Creative=1]="Creative",t[t.Adventure=2]="Adventure",t[t.SurvivalSpectator=3]="SurvivalSpectator",t[t.CreativeSpectator=4]="CreativeSpectator",t[t.Fallback=5]="Fallback",t[t.Spectator=6]="Spectator",t}(Uh||{});var _n=function(t){return t[t.Peaceful=0]="Peaceful",t[t.Easy=1]="Easy",t[t.Normal=2]="Normal",t[t.Hard=3]="Hard",t}(_n||{});var ke=function(t){return t[t.Bool=1]="Bool",t[t.Int=2]="Int",t[t.Float=3]="Float",t}(ke||{});var Un=function(t){return t[t.Visitor=0]="Visitor",t[t.Member=1]="Member",t[t.Operator=2]="Operator",t[t.Custom=3]="Custom",t}(Un||{});var Dn=function(t){return t[t.Normal=0]="Normal",t[t.Reset=1]="Reset",t[t.Teleport=2]="Teleport",t[t.Rotation=3]="Rotation",t}(Dn||{});var Nn=function(t){return t[t.Add=0]="Add",t[t.Remove=1]="Remove",t}(Nn||{});var Dh=function(t){return t[t.Malformed=0]="Malformed",t}(Dh||{});var Nh=function(t){return t[t.Warning=0]="Warning",t[t.FanalWarning=1]="FanalWarning",t[t.Terminating=2]="Terminating",t}(Nh||{});var Zh=function(t){return t[t.Normal=0]="Normal",t[t.Operator=1]="Operator",t[t.Automation=2]="Automation",t[t.Host=3]="Host",t[t.Owner=4]="Owner",t[t.Internal=5]="Internal",t}(Zh||{});var Mh=function(t){return t[t.Int=1]="Int",t[t.Float=3]="Float",t[t.Value=4]="Value",t[t.WildcardInt=5]="WildcardInt",t[t.Operator=6]="Operator",t[t.CompareOperator=7]="CompareOperator",t[t.Target=8]="Target",t[t.WildcardTarget=10]="WildcardTarget",t[t.Filepath=17]="Filepath",t[t.FullIntegerRange=23]="FullIntegerRange",t[t.EquipmentSlot=47]="EquipmentSlot",t[t.String=48]="String",t[t.IntPosition=64]="IntPosition",t[t.FloatPosition=65]="FloatPosition",t[t.Message=67]="Message",t[t.RawText=70]="RawText",t[t.Json=74]="Json",t[t.BlockState=84]="BlockState",t[t.Command=87]="Command",t}(Mh||{});var zh=function(t){return t[t.CustomCache=0]="CustomCache",t[t.Base=1]="Base",t[t.Spectator=2]="Spectator",t[t.Commands=3]="Commands",t[t.Editor=4]="Editor",t}(zh||{});var j=function(t){return t[t.Build=0]="Build",t[t.Mine=1]="Mine",t[t.DoorsAndSwitches=2]="DoorsAndSwitches",t[t.OpenContainers=3]="OpenContainers",t[t.AttackPlayers=4]="AttackPlayers",t[t.AttackMobs=5]="AttackMobs",t[t.OperatorCommands=6]="OperatorCommands",t[t.Teleport=7]="Teleport",t[t.Invulnerable=8]="Invulnerable",t[t.Flying=9]="Flying",t[t.MayFly=10]="MayFly",t[t.InstantBuild=11]="InstantBuild",t[t.Lightning=12]="Lightning",t[t.FlySpeed=13]="FlySpeed",t[t.WalkSpeed=14]="WalkSpeed",t[t.Muted=15]="Muted",t[t.WorldBuilder=16]="WorldBuilder",t[t.NoClip=17]="NoClip",t[t.PrivilegedBuilder=18]="PrivilegedBuilder",t[t.VerticalFlySpeed=19]="VerticalFlySpeed",t[t.Count=20]="Count",t}(j||{});var $=function(t){return t[t.Raw=0]="Raw",t[t.Chat=1]="Chat",t[t.Translation=2]="Translation",t[t.Popup=3]="Popup",t[t.JukeboxPopup=4]="JukeboxPopup",t[t.Tip=5]="Tip",t[t.System=6]="System",t[t.Whisper=7]="Whisper",t[t.Announcement=8]="Announcement",t[t.JsonWhisper=9]="JsonWhisper",t[t.Json=10]="Json",t[t.JsonAnnouncement=11]="JsonAnnouncement",t}($||{});var Fh=function(t){return t[t.Clear=0]="Clear",t[t.Reset=1]="Reset",t[t.Title=2]="Title",t[t.Subtitle=3]="Subtitle",t[t.Actionbar=4]="Actionbar",t[t.Times=5]="Times",t[t.TitleTextObject=6]="TitleTextObject",t[t.SubtitleTextObject=7]="SubtitleTextObject",t[t.ActionbarTextObject=8]="ActionbarTextObject",t}(Fh||{});var Hr=function(t){return t[t.Invalid=0]="Invalid",t[t.StopRiding=3]="StopRiding",t[t.InteractUpdate=4]="InteractUpdate",t[t.NpcOpen=5]="NpcOpen",t[t.OpenInventory=6]="OpenInventory",t}(Hr||{});var Zn=function(t){return t[t.None=-1]="None",t[t.Inventory=0]="Inventory",t[t.First=1]="First",t[t.Last=100]="Last",t[t.Offhand=119]="Offhand",t[t.Armor=120]="Armor",t[t.SelectionSlots=122]="SelectionSlots",t[t.Ui=124]="Ui",t[t.Registry=125]="Registry",t}(Zn||{});var Th=function(t){return t[t.AnvilInput=0]="AnvilInput",t[t.AnvilMaterial=1]="AnvilMaterial",t[t.AnvilResult=2]="AnvilResult",t[t.SmithingTableInput=3]="SmithingTableInput",t[t.SmithingTableMaterial=4]="SmithingTableMaterial",t[t.SmithingTableResult=5]="SmithingTableResult",t[t.Armor=6]="Armor",t[t.Container=7]="Container",t[t.BeaconPayment=8]="BeaconPayment",t[t.BrewingInput=9]="BrewingInput",t[t.BrewingResult=10]="BrewingResult",t[t.BrewingFuel=11]="BrewingFuel",t[t.HotbarAndInventory=12]="HotbarAndInventory",t[t.CraftingInput=13]="CraftingInput",t[t.CraftingOutput=14]="CraftingOutput",t[t.RecipeConstruction=15]="RecipeConstruction",t[t.RecipeNature=16]="RecipeNature",t[t.RecipeItems=17]="RecipeItems",t[t.RecipeSearch=18]="RecipeSearch",t[t.RecipeSearchBar=19]="RecipeSearchBar",t[t.RecipeEquipment=20]="RecipeEquipment",t[t.RecipeBook=21]="RecipeBook",t[t.EnchantingInput=22]="EnchantingInput",t[t.EnchantingLapis=23]="EnchantingLapis",t[t.FurnaceFuel=24]="FurnaceFuel",t[t.FurnaceIngredient=25]="FurnaceIngredient",t[t.FurnaceOutput=26]="FurnaceOutput",t[t.HorseEquip=27]="HorseEquip",t[t.Hotbar=28]="Hotbar",t[t.Inventory=29]="Inventory",t[t.Shulker=30]="Shulker",t[t.TradeIngredient1=31]="TradeIngredient1",t[t.TradeIngredient2=32]="TradeIngredient2",t[t.TradeResult=33]="TradeResult",t[t.Offhand=34]="Offhand",t[t.CompCreateInput=35]="CompCreateInput",t[t.CompCreateOutput=36]="CompCreateOutput",t[t.ElementConstructOutput=37]="ElementConstructOutput",t[t.MatReduceInput=38]="MatReduceInput",t[t.MatReduceOutput=39]="MatReduceOutput",t[t.LabTableInput=40]="LabTableInput",t[t.LoomInput=41]="LoomInput",t[t.LoomDye=42]="LoomDye",t[t.LoomMaterial=43]="LoomMaterial",t[t.LoomResult=44]="LoomResult",t[t.BlastFurnaceIngredient=45]="BlastFurnaceIngredient",t[t.SmokerIngredient=46]="SmokerIngredient",t[t.Trade2Ingredient1=47]="Trade2Ingredient1",t[t.Trade2Ingredient2=48]="Trade2Ingredient2",t[t.Trade2Result=49]="Trade2Result",t[t.GrindstoneInput=50]="GrindstoneInput",t[t.GrindstoneAdditional=51]="GrindstoneAdditional",t[t.GrindstoneResult=52]="GrindstoneResult",t[t.StonecutterInput=53]="StonecutterInput",t[t.StonecutterResult=54]="StonecutterResult",t[t.CartographyInput=55]="CartographyInput",t[t.CartographyAdditional=56]="CartographyAdditional",t[t.CartographyResult=57]="CartographyResult",t[t.Barrel=58]="Barrel",t[t.Cursor=59]="Cursor",t[t.CreativeOutput=60]="CreativeOutput",t[t.SmithingTableTemplate=61]="SmithingTableTemplate",t[t.Crafter=62]="Crafter",t[t.Dynamic=63]="Dynamic",t}(Th||{});var Mn=function(t){return t[t.None=-9]="None",t[t.Inventory=-1]="Inventory",t[t.Container=0]="Container",t[t.Workbench=1]="Workbench",t[t.Furnace=2]="Furnace",t[t.Enchantment=3]="Enchantment",t[t.BrewingStand=4]="BrewingStand",t[t.Anvil=5]="Anvil",t[t.Dispenser=6]="Dispenser",t[t.Dropper=7]="Dropper",t[t.Hopper=8]="Hopper",t[t.Cauldron=9]="Cauldron",t[t.MinecartChest=10]="MinecartChest",t[t.MinecartHopper=11]="MinecartHopper",t[t.Horse=12]="Horse",t[t.Beacon=13]="Beacon",t[t.StructureEditor=14]="StructureEditor",t[t.Trading=15]="Trading",t[t.CommandBlock=16]="CommandBlock",t[t.Jukebox=17]="Jukebox",t[t.Armor=18]="Armor",t[t.Hand=19]="Hand",t[t.CompoundCreator=20]="CompoundCreator",t[t.ElementConstructor=21]="ElementConstructor",t[t.MaterialReducer=22]="MaterialReducer",t[t.LabTable=23]="LabTable",t[t.Loom=24]="Loom",t[t.Lectern=25]="Lectern",t[t.Grindstone=26]="Grindstone",t[t.BlastFurnace=27]="BlastFurnace",t[t.Smoker=28]="Smoker",t[t.Stonecutter=29]="Stonecutter",t[t.Cartography=30]="Cartography",t[t.Hud=31]="Hud",t[t.JigsawEditor=32]="JigsawEditor",t[t.SmithingTable=33]="SmithingTable",t[t.ChestBoat=34]="ChestBoat",t[t.DecoratedPot=35]="DecoratedPot",t[t.Crafter=36]="Crafter",t}(Mn||{});var rr=function(t){return t[t.Unknown=-1]="Unknown",t[t.StartDestroyBlock=0]="StartDestroyBlock",t[t.AbortDestroyBlock=1]="AbortDestroyBlock",t[t.StopDestroyBlock=2]="StopDestroyBlock",t[t.GetUpdatedBlock=3]="GetUpdatedBlock",t[t.DropItem=4]="DropItem",t[t.StartSleeping=5]="StartSleeping",t[t.StopSleeping=6]="StopSleeping",t[t.Respawn=7]="Respawn",t[t.StartJump=8]="StartJump",t[t.StartSprinting=9]="StartSprinting",t[t.StopSprinting=10]="StopSprinting",t[t.StartSneaking=11]="StartSneaking",t[t.StopSneaking=12]="StopSneaking",t[t.CreativeDestroyBlock=13]="CreativeDestroyBlock",t[t.ChangeDimensionAck=14]="ChangeDimensionAck",t[t.StartGliding=15]="StartGliding",t[t.StopGliding=16]="StopGliding",t[t.DenyDestroyBlock=17]="DenyDestroyBlock",t[t.CrackBlock=18]="CrackBlock",t[t.ChangeSkin=19]="ChangeSkin",t[t.DEPRECATED_UpdatedEnchantingSeed=20]="DEPRECATED_UpdatedEnchantingSeed",t[t.StartSwimming=21]="StartSwimming",t[t.StopSwimming=22]="StopSwimming",t[t.StartSpinAttack=23]="StartSpinAttack",t[t.StopSpinAttack=24]="StopSpinAttack",t[t.InteractWithBlock=25]="InteractWithBlock",t[t.PredictDestroyBlock=26]="PredictDestroyBlock",t[t.ContinueDestroyBlock=27]="ContinueDestroyBlock",t[t.StartItemUseOn=28]="StartItemUseOn",t[t.StopItemUseOn=29]="StopItemUseOn",t[t.HandledTeleport=30]="HandledTeleport",t[t.MissedSwing=31]="MissedSwing",t[t.StartCrawling=32]="StartCrawling",t[t.StopCrawling=33]="StopCrawling",t[t.StartFlying=34]="StartFlying",t[t.StopFlying=35]="StopFlying",t[t.ClientAckServerData=36]="ClientAckServerData",t[t.StartUsingItem=37]="StartUsingItem",t[t.Count=38]="Count",t}(rr||{});var qh=function(t){return t.Absorption="minecraft:absorption",t.AttackDamage="minecraft:attack_damage",t.FallDamage="minecraft:fall_damage",t.FollowRange="minecraft:follow_range",t.Health="minecraft:health",t.HorseJumpStrength="minecraft:horse.jump_strength",t.KnockbackResistence="minecraft:knockback_resistance",t.LavaMovement="minecraft:lava_movement",t.Luck="minecraft:luck",t.Movement="minecraft:movement",t.PlayerExhaustion="minecraft:player.exhaustion",t.PlayerExperience="minecraft:player.experience",t.PlayerHunger="minecraft:player.hunger",t.PlayerLevel="minecraft:player.level",t.PlayerSaturation="minecraft:player.saturation",t.UnderwaterMovement="minecraft:underwater_movement",t.ZombieSpawnReinforcements="minecraft:zombie.spawn_reinforcements",t}(qh||{});var gt=function(t){return t[t.NormalTransaction=0]="NormalTransaction",t[t.InventoryMismatch=1]="InventoryMismatch",t[t.ItemUseTransaction=2]="ItemUseTransaction",t[t.ItemUseOnEntityTransaction=3]="ItemUseOnEntityTransaction",t[t.ItemReleaseTransaction=4]="ItemReleaseTransaction",t}(gt||{});var Hh=function(t){return t[t.Container=0]="Container",t[t.Global=1]="Global",t[t.WorldInteraction=2]="WorldInteraction",t[t.Creative=3]="Creative",t[t.CraftSlot=100]="CraftSlot",t[t.Craft=9999]="Craft",t}(Hh||{});var Wh=function(t){return t[t.Undefined=0]="Undefined",t[t.Android=1]="Android",t[t.Ios=2]="Ios",t[t.MacOS=3]="MacOS",t[t.FireOS=4]="FireOS",t[t.GearVR=5]="GearVR",t[t.Hololens=6]="Hololens",t[t.Win10=7]="Win10",t[t.Win32=8]="Win32",t[t.Dedicated=9]="Dedicated",t[t.TVOS=10]="TVOS",t[t.Orbis=11]="Orbis",t[t.Switch=12]="Switch",t[t.Xbox=13]="Xbox",t[t.WindowsPhone=14]="WindowsPhone",t[t.Linux=15]="Linux",t}(Wh||{});var Gh=function(t){return t[t.ServerSearchingForSpawn=0]="ServerSearchingForSpawn",t[t.ServerReadyToSpawn=1]="ServerReadyToSpawn",t[t.ClientReadyToSpawn=2]="ClientReadyToSpawn",t}(Gh||{});var Ah=function(t){return t.Action="form",t.Message="modal",t.Modal="custom_form",t.Dialogue="dialogue",t}(Ah||{});var Jh=function(t){return t[t.Normal=0]="Normal",t[t.WaterLogged=1]="WaterLogged",t}(Jh||{});var Yh=function(t){return t[t.None=0]="None",t[t.Neighbors=1]="Neighbors",t[t.Network=2]="Network",t[t.NoGraphic=4]="NoGraphic",t[t.Priority=8]="Priority",t}(Yh||{});var Kh=function(t){return t[t.Overworld=0]="Overworld",t[t.Nether=1]="Nether",t[t.End=2]="End",t}(Kh||{});var Qh=function(t){return t[t.Closed=0]="Closed",t[t.Busy=1]="Busy",t}(Qh||{});var W=function(t){return t[t.Take=0]="Take",t[t.Place=1]="Place",t[t.Swap=2]="Swap",t[t.Drop=3]="Drop",t[t.Destroy=4]="Destroy",t[t.Consume=5]="Consume",t[t.Create=6]="Create",t[t.PlaceInItemContainer_DEPRECATED=7]="PlaceInItemContainer_DEPRECATED",t[t.TakeFromItemContainer_DEPRECATED=8]="TakeFromItemContainer_DEPRECATED",t[t.ScreenLabTableCombine=9]="ScreenLabTableCombine",t[t.ScreenBeaconPayment=10]="ScreenBeaconPayment",t[t.ScreenHUDMineBlock=11]="ScreenHUDMineBlock",t[t.CraftRecipe=12]="CraftRecipe",t[t.CraftRecipeAuto=13]="CraftRecipeAuto",t[t.CraftCreative=14]="CraftCreative",t[t.CraftRecipeOptional=15]="CraftRecipeOptional",t[t.CraftRepairAndDisenchant=16]="CraftRepairAndDisenchant",t[t.CraftLoom=17]="CraftLoom",t[t.CraftNonImplemented_DEPRECATEDASKTYLAING=18]="CraftNonImplemented_DEPRECATEDASKTYLAING",t[t.CraftResults_DEPRECATEDASKTYLAING=19]="CraftResults_DEPRECATEDASKTYLAING",t[t.ifdef=20]="ifdef",t[t.TEST_INFRASTRUCTURE_ENABLED=21]="TEST_INFRASTRUCTURE_ENABLED",t[t.Test=22]="Test",t[t.endif=23]="endif",t}(W||{});var $h=function(t){return t[t.Ok=0]="Ok",t[t.Error=1]="Error",t}($h||{});var Xh=function(t){return t.AttackMobs="attack_mobs",t.AttackPlayers="attack_players",t.Build="build",t.Count="count",t.DoorsAndSwitches="doors_and_switches",t.FlySpeed="fly_speed",t.Flying="flying",t.InstantBuild="instant_build",t.Invulnerable="invulnerable",t.Lightning="lightning",t.MayFly="may_fly",t.Mine="mine",t.Muted="muted",t.NoClip="no_clip",t.OpenContainers="open_containers",t.OperatorCommands="operator_commands",t.PrivilegedBuilder="privileged_builder",t.Teleport="teleport",t.WalkSpeed="walk_speed",t.WorldBuilder="world_builder",t}(Xh||{});var zn=function(t){return t[t.None=0]="None",t[t.SwingArm=1]="SwingArm",t[t.Unknown=2]="Unknown",t[t.WakeUp=3]="WakeUp",t[t.CriticalHit=4]="CriticalHit",t[t.MagicCriticalHit=5]="MagicCriticalHit",t[t.RowRight=128]="RowRight",t[t.RowLeft=129]="RowLeft",t}(zn||{});var Lh=function(t){return t[t.Undefined=0]="Undefined",t[t.SoundClick=1e3]="SoundClick",t[t.SoundClickFail=1001]="SoundClickFail",t[t.SoundLaunch=1002]="SoundLaunch",t[t.SoundOpenDoor=1003]="SoundOpenDoor",t[t.SoundFizz=1004]="SoundFizz",t[t.SoundFuse=1005]="SoundFuse",t[t.SoundPlayRecording=1006]="SoundPlayRecording",t[t.SoundGhastWarning=1007]="SoundGhastWarning",t[t.SoundGhastFireball=1008]="SoundGhastFireball",t[t.SoundBlazeFireball=1009]="SoundBlazeFireball",t[t.SoundZombieWoodenDoor=1010]="SoundZombieWoodenDoor",t[t.SoundZombieDoorCrash=1012]="SoundZombieDoorCrash",t[t.SoundZombieInfected=1016]="SoundZombieInfected",t[t.SoundZombieConverted=1017]="SoundZombieConverted",t[t.SoundEndermanTeleport=1018]="SoundEndermanTeleport",t[t.SoundAnvilBroken=1020]="SoundAnvilBroken",t[t.SoundAnvilUsed=1021]="SoundAnvilUsed",t[t.SoundAnvilLand=1022]="SoundAnvilLand",t[t.SoundInfinityArrowPickup=1030]="SoundInfinityArrowPickup",t[t.SoundTeleportEnderPearl=1032]="SoundTeleportEnderPearl",t[t.SoundAddItem=1040]="SoundAddItem",t[t.SoundItemFrameBreak=1041]="SoundItemFrameBreak",t[t.SoundItemFramePlace=1042]="SoundItemFramePlace",t[t.SoundItemFrameRemoveItem=1043]="SoundItemFrameRemoveItem",t[t.SoundItemFrameRotateItem=1044]="SoundItemFrameRotateItem",t[t.SoundExperienceOrbPickup=1051]="SoundExperienceOrbPickup",t[t.SoundTotemUsed=1052]="SoundTotemUsed",t[t.SoundArmorStandBreak=1060]="SoundArmorStandBreak",t[t.SoundArmorStandHit=1061]="SoundArmorStandHit",t[t.SoundArmorStandLand=1062]="SoundArmorStandLand",t[t.SoundArmorStandPlace=1063]="SoundArmorStandPlace",t[t.SoundPointedDripstoneLand=1064]="SoundPointedDripstoneLand",t[t.SoundDyeUsed=1065]="SoundDyeUsed",t[t.SoundInkSacUsed=1066]="SoundInkSacUsed",t[t.SoundAmethystResonate=1067]="SoundAmethystResonate",t[t.QueueCustomMusic=1900]="QueueCustomMusic",t[t.PlayCustomMusic=1901]="PlayCustomMusic",t[t.StopCustomMusic=1902]="StopCustomMusic",t[t.SetMusicVolume=1903]="SetMusicVolume",t[t.ParticlesShoot=2e3]="ParticlesShoot",t[t.ParticlesDestroyBlock=2001]="ParticlesDestroyBlock",t[t.ParticlesPotionSplash=2002]="ParticlesPotionSplash",t[t.ParticlesEyeOfEnderDeath=2003]="ParticlesEyeOfEnderDeath",t[t.ParticlesMobBlockSpawn=2004]="ParticlesMobBlockSpawn",t[t.ParticleCropGrowth=2005]="ParticleCropGrowth",t[t.ParticleSoundGuardianGhost=2006]="ParticleSoundGuardianGhost",t[t.ParticleDeathSmoke=2007]="ParticleDeathSmoke",t[t.ParticleDenyBlock=2008]="ParticleDenyBlock",t[t.ParticleGenericSpawn=2009]="ParticleGenericSpawn",t[t.ParticlesDragonEgg=2010]="ParticlesDragonEgg",t[t.ParticlesCropEaten=2011]="ParticlesCropEaten",t[t.ParticlesCrit=2012]="ParticlesCrit",t[t.ParticlesTeleport=2013]="ParticlesTeleport",t[t.ParticlesCrackBlock=2014]="ParticlesCrackBlock",t[t.ParticlesBubble=2015]="ParticlesBubble",t[t.ParticlesEvaporate=2016]="ParticlesEvaporate",t[t.ParticlesDestroyArmorStand=2017]="ParticlesDestroyArmorStand",t[t.ParticlesBreakingEgg=2018]="ParticlesBreakingEgg",t[t.ParticleDestroyEgg=2019]="ParticleDestroyEgg",t[t.ParticlesEvaporateWater=2020]="ParticlesEvaporateWater",t[t.ParticlesDestroyBlockNoSound=2021]="ParticlesDestroyBlockNoSound",t[t.ParticlesKnockbackRoar=2022]="ParticlesKnockbackRoar",t[t.ParticlesTeleportTrail=2023]="ParticlesTeleportTrail",t[t.ParticlesPointCloud=2024]="ParticlesPointCloud",t[t.ParticlesExplosion=2025]="ParticlesExplosion",t[t.ParticlesBlockExplosion=2026]="ParticlesBlockExplosion",t[t.ParticlesVibrationSignal=2027]="ParticlesVibrationSignal",t[t.ParticlesDripstoneDrip=2028]="ParticlesDripstoneDrip",t[t.ParticlesFizzEffect=2029]="ParticlesFizzEffect",t[t.WaxOn=2030]="WaxOn",t[t.WaxOff=2031]="WaxOff",t[t.Scrape=2032]="Scrape",t[t.ParticlesElectricSpark=2033]="ParticlesElectricSpark",t[t.ParticleTurtleEgg=2034]="ParticleTurtleEgg",t[t.ParticlesSculkShriek=2035]="ParticlesSculkShriek",t[t.SculkCatalystBloom=2036]="SculkCatalystBloom",t[t.SculkCharge=2037]="SculkCharge",t[t.SculkChargePop=2038]="SculkChargePop",t[t.SonicExplosion=2039]="SonicExplosion",t[t.DustPlume=2040]="DustPlume",t[t.StartRaining=3001]="StartRaining",t[t.StartThunderstorm=3002]="StartThunderstorm",t[t.StopRaining=3003]="StopRaining",t[t.StopThunderstorm=3004]="StopThunderstorm",t[t.GlobalPause=3005]="GlobalPause",t[t.SimTimeStep=3006]="SimTimeStep",t[t.SimTimeScale=3007]="SimTimeScale",t[t.ActivateBlock=3500]="ActivateBlock",t[t.CauldronExplode=3501]="CauldronExplode",t[t.CauldronDyeArmor=3502]="CauldronDyeArmor",t[t.CauldronCleanArmor=3503]="CauldronCleanArmor",t[t.CauldronFillPotion=3504]="CauldronFillPotion",t[t.CauldronTakePotion=3505]="CauldronTakePotion",t[t.CauldronFillWater=3506]="CauldronFillWater",t[t.CauldronTakeWater=3507]="CauldronTakeWater",t[t.CauldronAddDye=3508]="CauldronAddDye",t[t.CauldronCleanBanner=3509]="CauldronCleanBanner",t[t.CauldronFlush=3510]="CauldronFlush",t[t.AgentSpawnEffect=3511]="AgentSpawnEffect",t[t.CauldronFillLava=3512]="CauldronFillLava",t[t.CauldronTakeLava=3513]="CauldronTakeLava",t[t.CauldronFillPowderSnow=3514]="CauldronFillPowderSnow",t[t.CauldronTakePowderSnow=3515]="CauldronTakePowderSnow",t[t.StartBlockCracking=3600]="StartBlockCracking",t[t.StopBlockCracking=3601]="StopBlockCracking",t[t.UpdateBlockCracking=3602]="UpdateBlockCracking",t[t.ParticlesCrackBlockDown=3603]="ParticlesCrackBlockDown",t[t.ParticlesCrackBlockUp=3604]="ParticlesCrackBlockUp",t[t.ParticlesCrackBlockNorth=3605]="ParticlesCrackBlockNorth",t[t.ParticlesCrackBlockSouth=3606]="ParticlesCrackBlockSouth",t[t.ParticlesCrackBlockWest=3607]="ParticlesCrackBlockWest",t[t.ParticlesCrackBlockEast=3608]="ParticlesCrackBlockEast",t[t.ParticlesShootWhiteSmoke=3609]="ParticlesShootWhiteSmoke",t[t.ParticlesBreezeWindExplosion=3610]="ParticlesBreezeWindExplosion",t[t.ParticlesTrialSpawnerDetection=3611]="ParticlesTrialSpawnerDetection",t[t.ParticlesTrialSpawnerSpawning=3612]="ParticlesTrialSpawnerSpawning",t[t.ParticlesTrialSpawnerEjecting=3613]="ParticlesTrialSpawnerEjecting",t[t.ParticlesWindExplosion=3614]="ParticlesWindExplosion",t[t.AllPlayersSleeping=3615]="AllPlayersSleeping",t[t.deprecated=3616]="deprecated",t[t.SleepingPlayers=9801]="SleepingPlayers",t[t.JumpPrevented=9810]="JumpPrevented",t[t.AnimationVaultActivate=9811]="AnimationVaultActivate",t[t.AnimationVaultDeactivate=9812]="AnimationVaultDeactivate",t[t.AnimationVaultEjectItem=9813]="AnimationVaultEjectItem",t[t.AnimationSpawnCobweb=9814]="AnimationSpawnCobweb",t[t.ParticleSmashAttackGroundDust=9815]="ParticleSmashAttackGroundDust",t[t.ParticleCreakingHeartTrail=9816]="ParticleCreakingHeartTrail",t[t.ParticleLegacyEvent=16384]="ParticleLegacyEvent",t}(Lh||{});var Eh=function(t){return t[t.ItemUseOn=0]="ItemUseOn",t[t.Hit=1]="Hit",t[t.Step=2]="Step",t[t.Fly=3]="Fly",t[t.Jump=4]="Jump",t[t.Break=5]="Break",t[t.Place=6]="Place",t[t.HeavyStep=7]="HeavyStep",t[t.Gallop=8]="Gallop",t[t.Fall=9]="Fall",t[t.Ambient=10]="Ambient",t[t.AmbientBaby=11]="AmbientBaby",t[t.AmbientInWater=12]="AmbientInWater",t[t.Breathe=13]="Breathe",t[t.Death=14]="Death",t[t.DeathInWater=15]="DeathInWater",t[t.DeathToZombie=16]="DeathToZombie",t[t.Hurt=17]="Hurt",t[t.HurtInWater=18]="HurtInWater",t[t.Mad=19]="Mad",t[t.Boost=20]="Boost",t[t.Bow=21]="Bow",t[t.SquishBig=22]="SquishBig",t[t.SquishSmall=23]="SquishSmall",t[t.FallBig=24]="FallBig",t[t.FallSmall=25]="FallSmall",t[t.Splash=26]="Splash",t[t.Fizz=27]="Fizz",t[t.Flap=28]="Flap",t[t.Swim=29]="Swim",t[t.Drink=30]="Drink",t[t.Eat=31]="Eat",t[t.Takeoff=32]="Takeoff",t[t.Shake=33]="Shake",t[t.Plop=34]="Plop",t[t.Land=35]="Land",t[t.Saddle=36]="Saddle",t[t.Armor=37]="Armor",t[t.ArmorPlace=38]="ArmorPlace",t[t.AddChest=39]="AddChest",t[t.Throw=40]="Throw",t[t.Attack=41]="Attack",t[t.AttackNoDamage=42]="AttackNoDamage",t[t.AttackStrong=43]="AttackStrong",t[t.Warn=44]="Warn",t[t.Shear=45]="Shear",t[t.Milk=46]="Milk",t[t.Thunder=47]="Thunder",t[t.Explode=48]="Explode",t[t.Fire=49]="Fire",t[t.Ignite=50]="Ignite",t[t.Fuse=51]="Fuse",t[t.Stare=52]="Stare",t[t.Spawn=53]="Spawn",t[t.Shoot=54]="Shoot",t[t.BreakBlock=55]="BreakBlock",t[t.Launch=56]="Launch",t[t.Blast=57]="Blast",t[t.LargeBlast=58]="LargeBlast",t[t.Twinkle=59]="Twinkle",t[t.Remedy=60]="Remedy",t[t.Unfect=61]="Unfect",t[t.LevelUp=62]="LevelUp",t[t.BowHit=63]="BowHit",t[t.BulletHit=64]="BulletHit",t[t.ExtinguishFire=65]="ExtinguishFire",t[t.ItemFizz=66]="ItemFizz",t[t.ChestOpen=67]="ChestOpen",t[t.ChestClosed=68]="ChestClosed",t[t.ShulkerBoxOpen=69]="ShulkerBoxOpen",t[t.ShulkerBoxClosed=70]="ShulkerBoxClosed",t[t.EnderChestOpen=71]="EnderChestOpen",t[t.EnderChestClosed=72]="EnderChestClosed",t[t.PowerOn=73]="PowerOn",t[t.PowerOff=74]="PowerOff",t[t.Attach=75]="Attach",t[t.Detach=76]="Detach",t[t.Deny=77]="Deny",t[t.Tripod=78]="Tripod",t[t.Pop=79]="Pop",t[t.DropSlot=80]="DropSlot",t[t.Note=81]="Note",t[t.Thorns=82]="Thorns",t[t.PistonIn=83]="PistonIn",t[t.PistonOut=84]="PistonOut",t[t.Portal=85]="Portal",t[t.Water=86]="Water",t[t.LavaPop=87]="LavaPop",t[t.Lava=88]="Lava",t[t.Burp=89]="Burp",t[t.BucketFillWater=90]="BucketFillWater",t[t.BucketFillLava=91]="BucketFillLava",t[t.BucketEmptyWater=92]="BucketEmptyWater",t[t.BucketEmptyLava=93]="BucketEmptyLava",t[t.EquipChain=94]="EquipChain",t[t.EquipDiamond=95]="EquipDiamond",t[t.EquipGeneric=96]="EquipGeneric",t[t.EquipGold=97]="EquipGold",t[t.EquipIron=98]="EquipIron",t[t.EquipLeather=99]="EquipLeather",t[t.EquipElytra=100]="EquipElytra",t[t.Record13=101]="Record13",t[t.RecordCat=102]="RecordCat",t[t.RecordBlocks=103]="RecordBlocks",t[t.RecordChirp=104]="RecordChirp",t[t.RecordFar=105]="RecordFar",t[t.RecordMall=106]="RecordMall",t[t.RecordMellohi=107]="RecordMellohi",t[t.RecordStal=108]="RecordStal",t[t.RecordStrad=109]="RecordStrad",t[t.RecordWard=110]="RecordWard",t[t.Record11=111]="Record11",t[t.RecordWait=112]="RecordWait",t[t.RecordNull=113]="RecordNull",t[t.Flop=114]="Flop",t[t.GuardianCurse=115]="GuardianCurse",t[t.MobWarning=116]="MobWarning",t[t.MobWarningBaby=117]="MobWarningBaby",t[t.Teleport=118]="Teleport",t[t.ShulkerOpen=119]="ShulkerOpen",t[t.ShulkerClose=120]="ShulkerClose",t[t.Haggle=121]="Haggle",t[t.HaggleYes=122]="HaggleYes",t[t.HaggleNo=123]="HaggleNo",t[t.HaggleIdle=124]="HaggleIdle",t[t.ChorusGrow=125]="ChorusGrow",t[t.ChorusDeath=126]="ChorusDeath",t[t.Glass=127]="Glass",t[t.PotionBrewed=128]="PotionBrewed",t[t.CastSpell=129]="CastSpell",t[t.PrepareAttackSpell=130]="PrepareAttackSpell",t[t.PrepareSummon=131]="PrepareSummon",t[t.PrepareWololo=132]="PrepareWololo",t[t.Fang=133]="Fang",t[t.Charge=134]="Charge",t[t.TakePicture=135]="TakePicture",t[t.PlaceLeashKnot=136]="PlaceLeashKnot",t[t.BreakLeashKnot=137]="BreakLeashKnot",t[t.AmbientGrowl=138]="AmbientGrowl",t[t.AmbientWhine=139]="AmbientWhine",t[t.AmbientPant=140]="AmbientPant",t[t.AmbientPurr=141]="AmbientPurr",t[t.AmbientPurreow=142]="AmbientPurreow",t[t.DeathMinVolume=143]="DeathMinVolume",t[t.DeathMidVolume=144]="DeathMidVolume",t[t.ImitateBlaze=145]="ImitateBlaze",t[t.ImitateCaveSpider=146]="ImitateCaveSpider",t[t.ImitateCreeper=147]="ImitateCreeper",t[t.ImitateElderGuardian=148]="ImitateElderGuardian",t[t.ImitateEnderDragon=149]="ImitateEnderDragon",t[t.ImitateEnderman=150]="ImitateEnderman",t[t.ImitateEndermite=151]="ImitateEndermite",t[t.ImitateEvocationIllager=152]="ImitateEvocationIllager",t[t.ImitateGhast=153]="ImitateGhast",t[t.ImitateHusk=154]="ImitateHusk",t[t.ImitateIllusionIllager=155]="ImitateIllusionIllager",t[t.ImitateMagmaCube=156]="ImitateMagmaCube",t[t.ImitatePolarBear=157]="ImitatePolarBear",t[t.ImitateShulker=158]="ImitateShulker",t[t.ImitateSilverfish=159]="ImitateSilverfish",t[t.ImitateSkeleton=160]="ImitateSkeleton",t[t.ImitateSlime=161]="ImitateSlime",t[t.ImitateSpider=162]="ImitateSpider",t[t.ImitateStray=163]="ImitateStray",t[t.ImitateVex=164]="ImitateVex",t[t.ImitateVindicationIllager=165]="ImitateVindicationIllager",t[t.ImitateWitch=166]="ImitateWitch",t[t.ImitateWither=167]="ImitateWither",t[t.ImitateWitherSkeleton=168]="ImitateWitherSkeleton",t[t.ImitateWolf=169]="ImitateWolf",t[t.ImitateZombie=170]="ImitateZombie",t[t.ImitateZombiePigman=171]="ImitateZombiePigman",t[t.ImitateZombieVillager=172]="ImitateZombieVillager",t[t.EnderEyePlaced=173]="EnderEyePlaced",t[t.EndPortalCreated=174]="EndPortalCreated",t[t.AnvilUse=175]="AnvilUse",t[t.BottleDragonBreath=176]="BottleDragonBreath",t[t.PortalTravel=177]="PortalTravel",t[t.TridentHit=178]="TridentHit",t[t.TridentReturn=179]="TridentReturn",t[t.TridentRiptide_1=180]="TridentRiptide_1",t[t.TridentRiptide_2=181]="TridentRiptide_2",t[t.TridentRiptide_3=182]="TridentRiptide_3",t[t.TridentThrow=183]="TridentThrow",t[t.TridentThunder=184]="TridentThunder",t[t.TridentHitGround=185]="TridentHitGround",t[t.Default=186]="Default",t[t.FletchingTableUse=187]="FletchingTableUse",t[t.ElementConstructOpen=188]="ElementConstructOpen",t[t.IceBombHit=189]="IceBombHit",t[t.BalloonPop=190]="BalloonPop",t[t.LTReactionIceBomb=191]="LTReactionIceBomb",t[t.LTReactionBleach=192]="LTReactionBleach",t[t.LTReactionElephantToothpaste=193]="LTReactionElephantToothpaste",t[t.LTReactionElephantToothpaste2=194]="LTReactionElephantToothpaste2",t[t.LTReactionGlowStick=195]="LTReactionGlowStick",t[t.LTReactionGlowStick2=196]="LTReactionGlowStick2",t[t.LTReactionLuminol=197]="LTReactionLuminol",t[t.LTReactionSalt=198]="LTReactionSalt",t[t.LTReactionFertilizer=199]="LTReactionFertilizer",t[t.LTReactionFireball=200]="LTReactionFireball",t[t.LTReactionMagnesiumSalt=201]="LTReactionMagnesiumSalt",t[t.LTReactionMiscFire=202]="LTReactionMiscFire",t[t.LTReactionFire=203]="LTReactionFire",t[t.LTReactionMiscExplosion=204]="LTReactionMiscExplosion",t[t.LTReactionMiscMystical=205]="LTReactionMiscMystical",t[t.LTReactionMiscMystical2=206]="LTReactionMiscMystical2",t[t.LTReactionProduct=207]="LTReactionProduct",t[t.SparklerUse=208]="SparklerUse",t[t.GlowStickUse=209]="GlowStickUse",t[t.SparklerActive=210]="SparklerActive",t[t.ConvertToDrowned=211]="ConvertToDrowned",t[t.BucketFillFish=212]="BucketFillFish",t[t.BucketEmptyFish=213]="BucketEmptyFish",t[t.BubbleColumnUpwards=214]="BubbleColumnUpwards",t[t.BubbleColumnDownwards=215]="BubbleColumnDownwards",t[t.BubblePop=216]="BubblePop",t[t.BubbleUpInside=217]="BubbleUpInside",t[t.BubbleDownInside=218]="BubbleDownInside",t[t.HurtBaby=219]="HurtBaby",t[t.DeathBaby=220]="DeathBaby",t[t.StepBaby=221]="StepBaby",t[t.SpawnBaby=222]="SpawnBaby",t[t.Born=223]="Born",t[t.TurtleEggBreak=224]="TurtleEggBreak",t[t.TurtleEggCrack=225]="TurtleEggCrack",t[t.TurtleEggHatched=226]="TurtleEggHatched",t[t.LayEgg=227]="LayEgg",t[t.TurtleEggAttacked=228]="TurtleEggAttacked",t[t.BeaconActivate=229]="BeaconActivate",t[t.BeaconAmbient=230]="BeaconAmbient",t[t.BeaconDeactivate=231]="BeaconDeactivate",t[t.BeaconPower=232]="BeaconPower",t[t.ConduitActivate=233]="ConduitActivate",t[t.ConduitAmbient=234]="ConduitAmbient",t[t.ConduitAttack=235]="ConduitAttack",t[t.ConduitDeactivate=236]="ConduitDeactivate",t[t.ConduitShort=237]="ConduitShort",t[t.Swoop=238]="Swoop",t[t.BambooSaplingPlace=239]="BambooSaplingPlace",t[t.PreSneeze=240]="PreSneeze",t[t.Sneeze=241]="Sneeze",t[t.AmbientTame=242]="AmbientTame",t[t.Scared=243]="Scared",t[t.ScaffoldingClimb=244]="ScaffoldingClimb",t[t.CrossbowLoadingStart=245]="CrossbowLoadingStart",t[t.CrossbowLoadingMiddle=246]="CrossbowLoadingMiddle",t[t.CrossbowLoadingEnd=247]="CrossbowLoadingEnd",t[t.CrossbowShoot=248]="CrossbowShoot",t[t.CrossbowQuickChargeStart=249]="CrossbowQuickChargeStart",t[t.CrossbowQuickChargeMiddle=250]="CrossbowQuickChargeMiddle",t[t.CrossbowQuickChargeEnd=251]="CrossbowQuickChargeEnd",t[t.AmbientAggressive=252]="AmbientAggressive",t[t.AmbientWorried=253]="AmbientWorried",t[t.CantBreed=254]="CantBreed",t[t.ShieldBlock=255]="ShieldBlock",t[t.LecternBookPlace=256]="LecternBookPlace",t[t.GrindstoneUse=257]="GrindstoneUse",t[t.Bell=258]="Bell",t[t.CampfireCrackle=259]="CampfireCrackle",t[t.Roar=260]="Roar",t[t.Stun=261]="Stun",t[t.SweetBerryBushHurt=262]="SweetBerryBushHurt",t[t.SweetBerryBushPick=263]="SweetBerryBushPick",t[t.CartographyTableUse=264]="CartographyTableUse",t[t.StonecutterUse=265]="StonecutterUse",t[t.ComposterEmpty=266]="ComposterEmpty",t[t.ComposterFill=267]="ComposterFill",t[t.ComposterFillLayer=268]="ComposterFillLayer",t[t.ComposterReady=269]="ComposterReady",t[t.BarrelOpen=270]="BarrelOpen",t[t.BarrelClose=271]="BarrelClose",t[t.RaidHorn=272]="RaidHorn",t[t.LoomUse=273]="LoomUse",t[t.AmbientInRaid=274]="AmbientInRaid",t[t.UICartographyTableUse=275]="UICartographyTableUse",t[t.UIStonecutterUse=276]="UIStonecutterUse",t[t.UILoomUse=277]="UILoomUse",t[t.SmokerUse=278]="SmokerUse",t[t.BlastFurnaceUse=279]="BlastFurnaceUse",t[t.SmithingTableUse=280]="SmithingTableUse",t[t.Screech=281]="Screech",t[t.Sleep=282]="Sleep",t[t.FurnaceUse=283]="FurnaceUse",t[t.MooshroomConvert=284]="MooshroomConvert",t[t.MilkSuspiciously=285]="MilkSuspiciously",t[t.Celebrate=286]="Celebrate",t[t.JumpPrevent=287]="JumpPrevent",t[t.AmbientPollinate=288]="AmbientPollinate",t[t.BeehiveDrip=289]="BeehiveDrip",t[t.BeehiveEnter=290]="BeehiveEnter",t[t.BeehiveExit=291]="BeehiveExit",t[t.BeehiveWork=292]="BeehiveWork",t[t.BeehiveShear=293]="BeehiveShear",t[t.HoneybottleDrink=294]="HoneybottleDrink",t[t.AmbientCave=295]="AmbientCave",t[t.Retreat=296]="Retreat",t[t.ConvertToZombified=297]="ConvertToZombified",t[t.Admire=298]="Admire",t[t.StepLava=299]="StepLava",t[t.Tempt=300]="Tempt",t[t.Panic=301]="Panic",t[t.Angry=302]="Angry",t[t.AmbientMoodWarpedForest=303]="AmbientMoodWarpedForest",t[t.AmbientMoodSoulsandValley=304]="AmbientMoodSoulsandValley",t[t.AmbientMoodNetherWastes=305]="AmbientMoodNetherWastes",t[t.AmbientMoodBasaltDeltas=306]="AmbientMoodBasaltDeltas",t[t.AmbientMoodCrimsonForest=307]="AmbientMoodCrimsonForest",t[t.RespawnAnchorCharge=308]="RespawnAnchorCharge",t[t.RespawnAnchorDeplete=309]="RespawnAnchorDeplete",t[t.RespawnAnchorSetSpawn=310]="RespawnAnchorSetSpawn",t[t.RespawnAnchorAmbient=311]="RespawnAnchorAmbient",t[t.SoulEscapeQuiet=312]="SoulEscapeQuiet",t[t.SoulEscapeLoud=313]="SoulEscapeLoud",t[t.RecordPigstep=314]="RecordPigstep",t[t.LinkCompassToLodestone=315]="LinkCompassToLodestone",t[t.UseSmithingTable=316]="UseSmithingTable",t[t.EquipNetherite=317]="EquipNetherite",t[t.AmbientLoopWarpedForest=318]="AmbientLoopWarpedForest",t[t.AmbientLoopSoulsandValley=319]="AmbientLoopSoulsandValley",t[t.AmbientLoopNetherWastes=320]="AmbientLoopNetherWastes",t[t.AmbientLoopBasaltDeltas=321]="AmbientLoopBasaltDeltas",t[t.AmbientLoopCrimsonForest=322]="AmbientLoopCrimsonForest",t[t.AmbientAdditionWarpedForest=323]="AmbientAdditionWarpedForest",t[t.AmbientAdditionSoulsandValley=324]="AmbientAdditionSoulsandValley",t[t.AmbientAdditionNetherWastes=325]="AmbientAdditionNetherWastes",t[t.AmbientAdditionBasaltDeltas=326]="AmbientAdditionBasaltDeltas",t[t.AmbientAdditionCrimsonForest=327]="AmbientAdditionCrimsonForest",t[t.SculkSensorPowerOn=328]="SculkSensorPowerOn",t[t.SculkSensorPowerOff=329]="SculkSensorPowerOff",t[t.BucketFillPowderSnow=330]="BucketFillPowderSnow",t[t.BucketEmptyPowderSnow=331]="BucketEmptyPowderSnow",t[t.PointedDripstoneCauldronDripWater=332]="PointedDripstoneCauldronDripWater",t[t.PointedDripstoneCauldronDripLava=333]="PointedDripstoneCauldronDripLava",t[t.PointedDripstoneDripWater=334]="PointedDripstoneDripWater",t[t.PointedDripstoneDripLava=335]="PointedDripstoneDripLava",t[t.CaveVinesPickBerries=336]="CaveVinesPickBerries",t[t.BigDripleafTiltDown=337]="BigDripleafTiltDown",t[t.BigDripleafTiltUp=338]="BigDripleafTiltUp",t[t.CopperWaxOn=339]="CopperWaxOn",t[t.CopperWaxOff=340]="CopperWaxOff",t[t.Scrape=341]="Scrape",t[t.PlayerHurtDrown=342]="PlayerHurtDrown",t[t.PlayerHurtOnFire=343]="PlayerHurtOnFire",t[t.PlayerHurtFreeze=344]="PlayerHurtFreeze",t[t.UseSpyglass=345]="UseSpyglass",t[t.StopUsingSpyglass=346]="StopUsingSpyglass",t[t.AmethystBlockChime=347]="AmethystBlockChime",t[t.AmbientScreamer=348]="AmbientScreamer",t[t.HurtScreamer=349]="HurtScreamer",t[t.DeathScreamer=350]="DeathScreamer",t[t.MilkScreamer=351]="MilkScreamer",t[t.JumpToBlock=352]="JumpToBlock",t[t.PreRam=353]="PreRam",t[t.PreRamScreamer=354]="PreRamScreamer",t[t.RamImpact=355]="RamImpact",t[t.RamImpactScreamer=356]="RamImpactScreamer",t[t.SquidInkSquirt=357]="SquidInkSquirt",t[t.GlowSquidInkSquirt=358]="GlowSquidInkSquirt",t[t.ConvertToStray=359]="ConvertToStray",t[t.CakeAddCandle=360]="CakeAddCandle",t[t.ExtinguishCandle=361]="ExtinguishCandle",t[t.AmbientCandle=362]="AmbientCandle",t[t.BlockClick=363]="BlockClick",t[t.BlockClickFail=364]="BlockClickFail",t[t.SculkCatalystBloom=365]="SculkCatalystBloom",t[t.SculkShriekerShriek=366]="SculkShriekerShriek",t[t.NearbyClose=367]="NearbyClose",t[t.NearbyCloser=368]="NearbyCloser",t[t.NearbyClosest=369]="NearbyClosest",t[t.Agitated=370]="Agitated",t[t.RecordOtherside=371]="RecordOtherside",t[t.Tongue=372]="Tongue",t[t.CrackIronGolem=373]="CrackIronGolem",t[t.RepairIronGolem=374]="RepairIronGolem",t[t.Listening=375]="Listening",t[t.Heartbeat=376]="Heartbeat",t[t.HornBreak=377]="HornBreak",t[t.SculkSpread=379]="SculkSpread",t[t.SculkCharge=380]="SculkCharge",t[t.SculkSensorPlace=381]="SculkSensorPlace",t[t.SculkShriekerPlace=382]="SculkShriekerPlace",t[t.GoatCall0=383]="GoatCall0",t[t.GoatCall1=384]="GoatCall1",t[t.GoatCall2=385]="GoatCall2",t[t.GoatCall3=386]="GoatCall3",t[t.GoatCall4=387]="GoatCall4",t[t.GoatCall5=388]="GoatCall5",t[t.GoatCall6=389]="GoatCall6",t[t.GoatCall7=390]="GoatCall7",t[t.ImitateWarden=426]="ImitateWarden",t[t.ListeningAngry=427]="ListeningAngry",t[t.Item_Given=428]="Item_Given",t[t.Item_Taken=429]="Item_Taken",t[t.Disappeared=430]="Disappeared",t[t.Reappeared=431]="Reappeared",t[t.DrinkMilk=432]="DrinkMilk",t[t.FrogspawnHatched=433]="FrogspawnHatched",t[t.LaySpawn=434]="LaySpawn",t[t.FrogspawnBreak=435]="FrogspawnBreak",t[t.SonicBoom=436]="SonicBoom",t[t.SonicCharge=437]="SonicCharge",t[t.Item_Thrown=438]="Item_Thrown",t[t.Record5=439]="Record5",t[t.ConvertToFrog=440]="ConvertToFrog",t[t.RecordPlaying=441]="RecordPlaying",t[t.EnchantingTableUse=442]="EnchantingTableUse",t[t.StepSand=443]="StepSand",t[t.DashReady=444]="DashReady",t[t.BundleDropContents=445]="BundleDropContents",t[t.BundleInsert=446]="BundleInsert",t[t.BundleRemoveOne=447]="BundleRemoveOne",t[t.PressurePlateClickOff=448]="PressurePlateClickOff",t[t.PressurePlateClickOn=449]="PressurePlateClickOn",t[t.ButtonClickOff=450]="ButtonClickOff",t[t.ButtonClickOn=451]="ButtonClickOn",t[t.DoorOpen=452]="DoorOpen",t[t.DoorClose=453]="DoorClose",t[t.TrapdoorOpen=454]="TrapdoorOpen",t[t.TrapdoorClose=455]="TrapdoorClose",t[t.FenceGateOpen=456]="FenceGateOpen",t[t.FenceGateClose=457]="FenceGateClose",t[t.Insert=458]="Insert",t[t.Pickup=459]="Pickup",t[t.InsertEnchanted=460]="InsertEnchanted",t[t.PickupEnchanted=461]="PickupEnchanted",t[t.Brush=462]="Brush",t[t.BrushCompleted=463]="BrushCompleted",t[t.ShatterDecoratedPot=464]="ShatterDecoratedPot",t[t.BreakDecoratedPot=465]="BreakDecoratedPot",t[t.SnifferEggCrack=466]="SnifferEggCrack",t[t.SnifferEggHatched=467]="SnifferEggHatched",t[t.WaxedSignInteractFail=468]="WaxedSignInteractFail",t[t.RecordRelic=469]="RecordRelic",t[t.Bump=470]="Bump",t[t.PumpkinCarve=471]="PumpkinCarve",t[t.ConvertHuskToZombie=472]="ConvertHuskToZombie",t[t.PigDeath=473]="PigDeath",t[t.HoglinConvertToZombified=474]="HoglinConvertToZombified",t[t.AmbientUnderwaterEnter=475]="AmbientUnderwaterEnter",t[t.AmbientUnderwaterExit=476]="AmbientUnderwaterExit",t[t.BottleFill=477]="BottleFill",t[t.BottleEmpty=478]="BottleEmpty",t[t.CrafterCraft=479]="CrafterCraft",t[t.CrafterFail=480]="CrafterFail",t[t.DecoratedPotInsert=481]="DecoratedPotInsert",t[t.DecoratedPotInsertFail=482]="DecoratedPotInsertFail",t[t.CrafterDisableSlot=483]="CrafterDisableSlot",t[t.CopperBulbTurnOn=490]="CopperBulbTurnOn",t[t.CopperBulbTurnOff=491]="CopperBulbTurnOff",t[t.Undefined=492]="Undefined",t}(Eh||{});var vh=function(t){return t[t.Addon=1]="Addon",t[t.Cached=2]="Cached",t[t.CopyProtected=3]="CopyProtected",t[t.Behaviour=4]="Behaviour",t[t.PersonaPiece=5]="PersonaPiece",t[t.Resources=6]="Resources",t[t.Skins=7]="Skins",t[t.WorldTemplate=8]="WorldTemplate",t}(vh||{});var ir=function(t){return t[t.ContainerInventory=0]="ContainerInventory",t[t.GlobalInventory=1]="GlobalInventory",t[t.WorldInteraction=2]="WorldInteraction",t[t.CreativeInventory=3]="CreativeInventory",t[t.NonImplementedFeatureTODO=99999]="NonImplementedFeatureTODO",t}(ir||{});var tg=function(t){return t[t.Place=0]="Place",t[t.Use=1]="Use",t[t.Destroy=2]="Destroy",t}(tg||{});var eg=function(t){return t[t.Interact=0]="Interact",t[t.Attack=1]="Attack",t}(eg||{});var rg=function(t){return t[t.Release=0]="Release",t[t.Consume=1]="Consume",t}(rg||{});var ig=function(t){return t[t.Bottom=0]="Bottom",t[t.Top=1]="Top",t[t.North=2]="North",t[t.South=3]="South",t[t.West=4]="West",t[t.East=5]="East",t}(ig||{});var og=function(t){return t[t.Ascending=0]="Ascending",t[t.Descending=1]="Descending",t}(og||{});var ng=function(t){return t.List="slot",t.Sidebar="sidebar",t.BelowName="belowname",t}(ng||{});var ag=function(t){return t[t.Register=0]="Register",t[t.Clear=1]="Clear",t}(ag||{});var sg=function(t){return t[t.PaperDoll=0]="PaperDoll",t[t.Armor=1]="Armor",t[t.ToolTips=2]="ToolTips",t[t.TouchControls=3]="TouchControls",t[t.Crosshair=4]="Crosshair",t[t.HotBar=5]="HotBar",t[t.Health=6]="Health",t[t.ProgressBar=7]="ProgressBar",t[t.Hunger=8]="Hunger",t[t.AirBubbles=9]="AirBubbles",t[t.HorseHealth=10]="HorseHealth",t[t.StatusEffects=11]="StatusEffects",t[t.ItemText=12]="ItemText",t[t.Count=13]="Count",t}(sg||{});var cg=function(t){return t[t.Hide=0]="Hide",t[t.Reset=1]="Reset",t[t.Count=2]="Count",t}(cg||{});var pg=function(t){return t[t.Protection=0]="Protection",t[t.FireProtection=1]="FireProtection",t[t.FeatherFalling=2]="FeatherFalling",t[t.BlastProtection=3]="BlastProtection",t[t.ProjectileProtection=4]="ProjectileProtection",t[t.Thorns=5]="Thorns",t[t.Respiration=6]="Respiration",t[t.DepthStrider=7]="DepthStrider",t[t.AquaAffinity=8]="AquaAffinity",t[t.Sharpness=9]="Sharpness",t[t.Smite=10]="Smite",t[t.BaneOfArthropods=11]="BaneOfArthropods",t[t.Knockback=12]="Knockback",t[t.FireAspect=13]="FireAspect",t[t.Looting=14]="Looting",t[t.Efficiency=15]="Efficiency",t[t.SilkTouch=16]="SilkTouch",t[t.Unbreaking=17]="Unbreaking",t[t.Fortune=18]="Fortune",t[t.Power=19]="Power",t[t.Punch=20]="Punch",t[t.Flame=21]="Flame",t[t.Infinity=22]="Infinity",t[t.LuckOfTheSea=23]="LuckOfTheSea",t[t.Lure=24]="Lure",t[t.FrostWalker=25]="FrostWalker",t[t.Mending=26]="Mending",t[t.CurseOfBinding=27]="CurseOfBinding",t[t.CurseOfVanishing=28]="CurseOfVanishing",t[t.Impaling=29]="Impaling",t[t.Riptide=30]="Riptide",t[t.Loyalty=31]="Loyalty",t[t.Channeling=32]="Channeling",t[t.Multishot=33]="Multishot",t[t.Piercing=34]="Piercing",t[t.QuickCharge=35]="QuickCharge",t[t.SoulSpeed=36]="SoulSpeed",t[t.SweepingEdge=37]="SweepingEdge",t[t.None=38]="None",t[t.Unknown=39]="Unknown",t}(pg||{});var N=function(t){return t[t.Add=0]="Add",t[t.PlayerAdded=1]="PlayerAdded",t[t.Remove=2]="Remove",t[t.PlayerRemoved=3]="PlayerRemoved",t[t.UpdatePercent=4]="UpdatePercent",t[t.UpdateName=5]="UpdateName",t[t.UpdateProperties=6]="UpdateProperties",t[t.UpdateStyle=7]="UpdateStyle",t[t.Query=8]="Query",t}(N||{});var fg=function(t){return t[t.Pink=0]="Pink",t[t.Blue=1]="Blue",t[t.Red=2]="Red",t[t.Green=3]="Green",t[t.Yellow=4]="Yellow",t[t.Magenta=5]="Magenta",t[t.Purple=6]="Purple",t[t.White=7]="White",t}(fg||{});var dg=function(t){return t[t.Open=0]="Open",t[t.Close=1]="Close",t}(dg||{});var lg=function(t){return t[t.None=0]="None",t[t.Jump=1]="Jump",t[t.Hurt=2]="Hurt",t[t.Death=3]="Death",t[t.StartAttacking=4]="StartAttacking",t[t.StopAttacking=5]="StopAttacking",t[t.TamingFailed=6]="TamingFailed",t[t.TamingSucceeded=7]="TamingSucceeded",t[t.ShakeWetness=8]="ShakeWetness",t[t.EatGrass=10]="EatGrass",t[t.FishhookBubble=11]="FishhookBubble",t[t.FishhookFishPos=12]="FishhookFishPos",t[t.FishhookHookTime=13]="FishhookHookTime",t[t.FishhookTease=14]="FishhookTease",t[t.SquidFleeing=15]="SquidFleeing",t[t.ZombieConverting=16]="ZombieConverting",t[t.PlayAmbient=17]="PlayAmbient",t[t.SpawnAlive=18]="SpawnAlive",t[t.StartOfferFlower=19]="StartOfferFlower",t[t.StopOfferFlower=20]="StopOfferFlower",t[t.LoveHearts=21]="LoveHearts",t[t.VillagerAngry=22]="VillagerAngry",t[t.VillagerHappy=23]="VillagerHappy",t[t.WitchHatMagic=24]="WitchHatMagic",t[t.FireworksExplode=25]="FireworksExplode",t[t.InLoveHearts=26]="InLoveHearts",t[t.SilverfishMergeAnim=27]="SilverfishMergeAnim",t[t.GuardianAttackSound=28]="GuardianAttackSound",t[t.DrinkPotion=29]="DrinkPotion",t[t.ThrowPotion=30]="ThrowPotion",t[t.PrimeTntCart=31]="PrimeTntCart",t[t.PrimeCreeper=32]="PrimeCreeper",t[t.AirSupply=33]="AirSupply",t[t.AddPlayerLevels=34]="AddPlayerLevels",t[t.GuardianMiningFatigue=35]="GuardianMiningFatigue",t[t.AgentSwingArm=36]="AgentSwingArm",t[t.DragonStartDeathAnim=37]="DragonStartDeathAnim",t[t.GroundDust=38]="GroundDust",t[t.Shake=39]="Shake",t[t.Feed=57]="Feed",t[t.BabyAge=60]="BabyAge",t[t.InstantDeath=61]="InstantDeath",t[t.NotifyTrade=62]="NotifyTrade",t[t.LeashDestroyed=63]="LeashDestroyed",t[t.CaravanUpdated=64]="CaravanUpdated",t[t.TalismanActivate=65]="TalismanActivate",t[t.DeprecatedUpdateStructureFeature=66]="DeprecatedUpdateStructureFeature",t[t.PlayerSpawnedMob=67]="PlayerSpawnedMob",t[t.Puke=68]="Puke",t[t.UpdateStackSize=69]="UpdateStackSize",t[t.StartSwimming=70]="StartSwimming",t[t.BalloonPop=71]="BalloonPop",t[t.TreasureHunt=72]="TreasureHunt",t[t.SummonAgent=73]="SummonAgent",t[t.FinishedChargingItem=74]="FinishedChargingItem",t[t.ActorGrowUp=76]="ActorGrowUp",t[t.VibrationDetected=77]="VibrationDetected",t[t.DrinkMilk=78]="DrinkMilk",t}(lg||{});var mg=function(t){return t[t.SERVER=0]="SERVER",t[t.MUTE_CHAT=1]="MUTE_CHAT",t}(mg||{});var ug=function(t){return t[t.Head=0]="Head",t[t.Chest=1]="Chest",t[t.Legs=2]="Legs",t[t.Feet=3]="Feet",t}(ug||{});var hg=function(t){return t[t.Speed=1]="Speed",t[t.Slowness=2]="Slowness",t[t.Haste=3]="Haste",t[t.MiningFatigue=4]="MiningFatigue",t[t.Strength=5]="Strength",t[t.InstantHealth=6]="InstantHealth",t[t.InstantDamage=7]="InstantDamage",t[t.JumpBoost=8]="JumpBoost",t[t.Nausea=9]="Nausea",t[t.Regeneration=10]="Regeneration",t[t.Resistance=11]="Resistance",t[t.FireResistance=12]="FireResistance",t[t.WaterBreathing=13]="WaterBreathing",t[t.Invisibility=14]="Invisibility",t[t.Blindness=15]="Blindness",t[t.NightVision=16]="NightVision",t[t.Hunger=17]="Hunger",t[t.Weakness=18]="Weakness",t[t.Poison=19]="Poison",t[t.Wither=20]="Wither",t[t.HealthBoost=21]="HealthBoost",t[t.Absorption=22]="Absorption",t[t.Saturation=23]="Saturation",t[t.Levitation=24]="Levitation",t[t.FatalPoison=25]="FatalPoison",t[t.ConduitPower=26]="ConduitPower",t[t.SlowFalling=27]="SlowFalling",t[t.BadOmen=28]="BadOmen",t[t.HeroOfTheVillage=29]="HeroOfTheVillage",t[t.Darkness=30]="Darkness",t[t.TrialOmen=31]="TrialOmen",t[t.WindCharged=32]="WindCharged",t[t.Weaving=33]="Weaving",t[t.Oozing=34]="Oozing",t[t.Infested=35]="Infested",t}(hg||{});var gg=function(t){return t[t.EffectAdd=1]="EffectAdd",t[t.EffectModify=2]="EffectModify",t[t.EffectRemove=3]="EffectRemove",t}(gg||{});var yg=function(t){return t[t.NONE=0]="NONE",t[t.SURVIVAL=1]="SURVIVAL",t[t.RECIPE_BOOK=2]="RECIPE_BOOK",t[t.CREATIVE=3]="CREATIVE",t}(yg||{});var wg=function(t){return t[t.NONE=0]="NONE",t[t.CONSTRUCTION=1]="CONSTRUCTION",t[t.EQUIPMENT=2]="EQUIPMENT",t[t.ITEMS=3]="ITEMS",t[t.NATURE=4]="NATURE",t[t.SEARCH=5]="SEARCH",t[t.SURVIVAL=6]="SURVIVAL",t}(wg||{});var bg=function(t){return t[t.NONE=0]="NONE",t[t.FULL_SCREEN=1]="FULL_SCREEN",t[t.CRAFTING=2]="CRAFTING",t[t.ARMOR=3]="ARMOR",t}(bg||{});var io=function(t){return t[t.Reserved0=0]="Reserved0",t[t.StructuralIntegrity=1]="StructuralIntegrity",t[t.Variant=2]="Variant",t[t.ColorIndex=3]="ColorIndex",t[t.Name=4]="Name",t[t.Owner=5]="Owner",t[t.Target=6]="Target",t[t.AirSupply=7]="AirSupply",t[t.EffectColor=8]="EffectColor",t[t.Reserved009=9]="Reserved009",t[t.Reserved010=10]="Reserved010",t[t.Hurt=11]="Hurt",t[t.HurtDirection=12]="HurtDirection",t[t.RowTimeLeft=13]="RowTimeLeft",t[t.RowTimeRight=14]="RowTimeRight",t[t.Value=15]="Value",t[t.DisplayTileRuntimeId=16]="DisplayTileRuntimeId",t[t.DisplayOffset=17]="DisplayOffset",t[t.CustomDisplay=18]="CustomDisplay",t[t.Swell=19]="Swell",t[t.OldSwell=20]="OldSwell",t[t.SwellDirection=21]="SwellDirection",t[t.ChargeAmount=22]="ChargeAmount",t[t.CarryBlockRuntimeId=23]="CarryBlockRuntimeId",t[t.ClientEvent=24]="ClientEvent",t[t.UsingItem=25]="UsingItem",t[t.PlayerFlags=26]="PlayerFlags",t[t.PlayerIndex=27]="PlayerIndex",t[t.BedPosition=28]="BedPosition",t[t.XPower=29]="XPower",t[t.YPower=30]="YPower",t[t.ZPower=31]="ZPower",t[t.AuxPower=32]="AuxPower",t[t.Fishx=33]="Fishx",t[t.Fishz=34]="Fishz",t[t.Fishangle=35]="Fishangle",t[t.AuxValueData=36]="AuxValueData",t[t.LeashHolder=37]="LeashHolder",t[t.Reserved038=38]="Reserved038",t[t.HasNpc=39]="HasNpc",t[t.NpcData=40]="NpcData",t[t.Actions=41]="Actions",t[t.AirSupplyMax=42]="AirSupplyMax",t[t.MarkVariant=43]="MarkVariant",t[t.ContainerType=44]="ContainerType",t[t.ContainerSize=45]="ContainerSize",t[t.ContainerStrengthModifier=46]="ContainerStrengthModifier",t[t.BlockTarget=47]="BlockTarget",t[t.Inv=48]="Inv",t[t.TargetA=49]="TargetA",t[t.TargetB=50]="TargetB",t[t.TargetC=51]="TargetC",t[t.AerialAttack=52]="AerialAttack",t[t.Reserved053=53]="Reserved053",t[t.Reserved054=54]="Reserved054",t[t.FuseTime=55]="FuseTime",t[t.Reserved056=56]="Reserved056",t[t.SeatLockPassengerRotation=57]="SeatLockPassengerRotation",t[t.SeatLockPassengerRotationDegrees=58]="SeatLockPassengerRotationDegrees",t[t.SeatRotationOffset=59]="SeatRotationOffset",t[t.SeatRotationOffsetDegrees=60]="SeatRotationOffsetDegrees",t[t.DataRadius=61]="DataRadius",t[t.DataWaiting=62]="DataWaiting",t[t.DataParticle=63]="DataParticle",t[t.PeekId=64]="PeekId",t[t.AttachFace=65]="AttachFace",t[t.Attached=66]="Attached",t[t.AttachPos=67]="AttachPos",t[t.TradeTarget=68]="TradeTarget",t[t.Career=69]="Career",t[t.HasCommandBlock=70]="HasCommandBlock",t[t.CommandName=71]="CommandName",t[t.LastCommandOutput=72]="LastCommandOutput",t[t.TrackCommandOutput=73]="TrackCommandOutput",t[t.Reserved074=74]="Reserved074",t[t.Strength=75]="Strength",t[t.StrengthMax=76]="StrengthMax",t[t.DataSpellCastingColor=77]="DataSpellCastingColor",t[t.DataLifetimeTicks=78]="DataLifetimeTicks",t[t.PoseIndex=79]="PoseIndex",t[t.DataTickOffset=80]="DataTickOffset",t[t.NametagAlwaysShow=81]="NametagAlwaysShow",t[t.Color2Index=82]="Color2Index",t[t.NameAuthor=83]="NameAuthor",t[t.Score=84]="Score",t[t.BalloonAnchor=85]="BalloonAnchor",t[t.PuffedState=86]="PuffedState",t[t.BubbleTime=87]="BubbleTime",t[t.Agent=88]="Agent",t[t.SittingAmount=89]="SittingAmount",t[t.SittingAmountPrevious=90]="SittingAmountPrevious",t[t.EatingCounter=91]="EatingCounter",t[t.Reserved092=92]="Reserved092",t[t.LayingAmount=93]="LayingAmount",t[t.LayingAmountPrevious=94]="LayingAmountPrevious",t[t.DataDuration=95]="DataDuration",t[t.DataSpawnTimeDeprecated=96]="DataSpawnTimeDeprecated",t[t.DataChangeRate=97]="DataChangeRate",t[t.DataChangeOnPickup=98]="DataChangeOnPickup",t[t.DataPickupCount=99]="DataPickupCount",t[t.InteractText=100]="InteractText",t[t.TradeTier=101]="TradeTier",t[t.MaxTradeTier=102]="MaxTradeTier",t[t.TradeExperience=103]="TradeExperience",t[t.SkinId=104]="SkinId",t[t.SpawningFrames=105]="SpawningFrames",t[t.CommandBlockTickDelay=106]="CommandBlockTickDelay",t[t.CommandBlockExecuteOnFirstTick=107]="CommandBlockExecuteOnFirstTick",t[t.AmbientSoundInterval=108]="AmbientSoundInterval",t[t.AmbientSoundIntervalRange=109]="AmbientSoundIntervalRange",t[t.AmbientSoundEventName=110]="AmbientSoundEventName",t[t.FallDamageMultiplier=111]="FallDamageMultiplier",t[t.NameRawText=112]="NameRawText",t[t.CanRideTarget=113]="CanRideTarget",t[t.LowTierCuredTradeDiscount=114]="LowTierCuredTradeDiscount",t[t.HighTierCuredTradeDiscount=115]="HighTierCuredTradeDiscount",t[t.NearbyCuredTradeDiscount=116]="NearbyCuredTradeDiscount",t[t.NearbyCuredDiscountTimeStamp=117]="NearbyCuredDiscountTimeStamp",t[t.Hitbox=118]="Hitbox",t[t.IsBuoyant=119]="IsBuoyant",t[t.FreezingEffectStrength=120]="FreezingEffectStrength",t[t.BuoyancyData=121]="BuoyancyData",t[t.GoatHornCount=122]="GoatHornCount",t[t.BaseRuntimeId=123]="BaseRuntimeId",t[t.MovementSoundDistanceOffset=124]="MovementSoundDistanceOffset",t[t.HeartbeatIntervalTicks=125]="HeartbeatIntervalTicks",t[t.HeartbeatSoundEvent=126]="HeartbeatSoundEvent",t[t.PlayerLastDeathPos=127]="PlayerLastDeathPos",t[t.PlayerLastDeathDimension=128]="PlayerLastDeathDimension",t[t.PlayerHasDied=129]="PlayerHasDied",t[t.CollisionBox=130]="CollisionBox",t[t.VisibleMobEffects=131]="VisibleMobEffects",t[t.FilteredName=132]="FilteredName",t[t.EnterBedPositon=133]="EnterBedPositon",t[t.Count=134]="Count",t}(io||{});var Pg=function(t){return t[t.Unknown=-1]="Unknown",t[t.OnFire=0]="OnFire",t[t.Sneaking=1]="Sneaking",t[t.Riding=2]="Riding",t[t.Sprinting=3]="Sprinting",t[t.UsingItem=4]="UsingItem",t[t.Invisible=5]="Invisible",t[t.Tempted=6]="Tempted",t[t.InLove=7]="InLove",t[t.Saddled=8]="Saddled",t[t.Powered=9]="Powered",t[t.Ignited=10]="Ignited",t[t.Baby=11]="Baby",t[t.Converting=12]="Converting",t[t.Critical=13]="Critical",t[t.CanShowName=14]="CanShowName",t[t.AlwaysShowName=15]="AlwaysShowName",t[t.NoAi=16]="NoAi",t[t.Silent=17]="Silent",t[t.WallClimbing=18]="WallClimbing",t[t.CanClimb=19]="CanClimb",t[t.CanSwim=20]="CanSwim",t[t.CanFly=21]="CanFly",t[t.CanWalk=22]="CanWalk",t[t.Resting=23]="Resting",t[t.Sitting=24]="Sitting",t[t.Angry=25]="Angry",t[t.Interested=26]="Interested",t[t.Charged=27]="Charged",t[t.Tamed=28]="Tamed",t[t.Orphaned=29]="Orphaned",t[t.Leashed=30]="Leashed",t[t.Sheared=31]="Sheared",t[t.Gliding=32]="Gliding",t[t.Elder=33]="Elder",t[t.Moving=34]="Moving",t[t.Breathing=35]="Breathing",t[t.Chested=36]="Chested",t[t.Stackable=37]="Stackable",t[t.ShowBottom=38]="ShowBottom",t[t.Standing=39]="Standing",t[t.Shaking=40]="Shaking",t[t.Idling=41]="Idling",t[t.Casting=42]="Casting",t[t.Charging=43]="Charging",t[t.WasdControlled=44]="WasdControlled",t[t.CanPowerJump=45]="CanPowerJump",t[t.CanDash=46]="CanDash",t[t.Lingering=47]="Lingering",t[t.HasCollision=48]="HasCollision",t[t.HasGravity=49]="HasGravity",t[t.FireImmune=50]="FireImmune",t[t.Dancing=51]="Dancing",t[t.Enchanted=52]="Enchanted",t[t.ReturnTrident=53]="ReturnTrident",t[t.ContainerIsPrivate=54]="ContainerIsPrivate",t[t.IsTransforming=55]="IsTransforming",t[t.DamageNearbyMobs=56]="DamageNearbyMobs",t[t.Swimming=57]="Swimming",t[t.Bribed=58]="Bribed",t[t.IsPregnant=59]="IsPregnant",t[t.LayingEgg=60]="LayingEgg",t[t.PassengerCanPick=61]="PassengerCanPick",t[t.TransitionSitting=62]="TransitionSitting",t[t.Eating=63]="Eating",t[t.LayingDown=64]="LayingDown",t[t.Sneezing=65]="Sneezing",t[t.Trusting=66]="Trusting",t[t.Rolling=67]="Rolling",t[t.Scared=68]="Scared",t[t.InScaffolding=69]="InScaffolding",t[t.OverScaffolding=70]="OverScaffolding",t[t.DescendThroughBlock=71]="DescendThroughBlock",t[t.Blocking=72]="Blocking",t[t.TransitionBlocking=73]="TransitionBlocking",t[t.BlockedUsingShield=74]="BlockedUsingShield",t[t.BlockedUsingDamagedShield=75]="BlockedUsingDamagedShield",t[t.Sleeping=76]="Sleeping",t[t.WantsToWake=77]="WantsToWake",t[t.TradeInterest=78]="TradeInterest",t[t.DoorBreaker=79]="DoorBreaker",t[t.BreakingObstruction=80]="BreakingObstruction",t[t.DoorOpener=81]="DoorOpener",t[t.IsIllagerCaptain=82]="IsIllagerCaptain",t[t.Stunned=83]="Stunned",t[t.Roaring=84]="Roaring",t[t.DelayedAttack=85]="DelayedAttack",t[t.IsAvoidingMobs=86]="IsAvoidingMobs",t[t.IsAvoidingBlock=87]="IsAvoidingBlock",t[t.FacingTargetToRangeAttack=88]="FacingTargetToRangeAttack",t[t.HiddenWhenInvisible=89]="HiddenWhenInvisible",t[t.IsInUi=90]="IsInUi",t[t.Stalking=91]="Stalking",t[t.Emoting=92]="Emoting",t[t.Celebrating=93]="Celebrating",t[t.Admiring=94]="Admiring",t[t.CelebratingSpecial=95]="CelebratingSpecial",t[t.OutOfControl=96]="OutOfControl",t[t.RamAttack=97]="RamAttack",t[t.PlayingDead=98]="PlayingDead",t[t.InAscendableBlock=99]="InAscendableBlock",t[t.OverDescendableBlock=100]="OverDescendableBlock",t[t.Croaking=101]="Croaking",t[t.EatMob=102]="EatMob",t[t.JumpGoalJump=103]="JumpGoalJump",t[t.Emerging=104]="Emerging",t[t.Sniffing=105]="Sniffing",t[t.Digging=106]="Digging",t[t.SonicBoom=107]="SonicBoom",t[t.HasDashCooldown=108]="HasDashCooldown",t[t.PushTowardsClosestSpace=109]="PushTowardsClosestSpace",t[t.Deprecated1=110]="Deprecated1",t[t.Deprecated2=111]="Deprecated2",t[t.Deprecated3=112]="Deprecated3",t[t.Searching=113]="Searching",t[t.Crawling=114]="Crawling",t[t.TimerFlag1=115]="TimerFlag1",t[t.TimerFlag2=116]="TimerFlag2",t[t.TimerFlag3=117]="TimerFlag3",t[t.BodyRotationBlocked=118]="BodyRotationBlocked",t[t.RendersWhenInvisible=119]="RendersWhenInvisible",t[t.Count=120]="Count",t}(Pg||{});var Z=function(t){return t[t.Byte=0]="Byte",t[t.Short=1]="Short",t[t.Int=2]="Int",t[t.Float=3]="Float",t[t.String=4]="String",t[t.CompoundTag=5]="CompoundTag",t[t.BlockPos=6]="BlockPos",t[t.Long=7]="Long",t[t.Vec3=8]="Vec3",t}(Z||{});var xg=function(t){return t[t.None=-1]="None",t[t.Override=0]="Override",t[t.Contact=1]="Contact",t[t.EntityAttack=2]="EntityAttack",t[t.Projectile=3]="Projectile",t[t.Suffocation=4]="Suffocation",t[t.Fall=5]="Fall",t[t.Fire=6]="Fire",t[t.FireTick=7]="FireTick",t[t.Lava=8]="Lava",t[t.Drowning=9]="Drowning",t[t.BlockExplosion=10]="BlockExplosion",t[t.EntityExplosion=11]="EntityExplosion",t[t.Void=12]="Void",t[t.SelfDestruct=13]="SelfDestruct",t[t.Magic=14]="Magic",t[t.Wither=15]="Wither",t[t.Starve=16]="Starve",t[t.Anvil=17]="Anvil",t[t.Thorns=18]="Thorns",t[t.FallingBlock=19]="FallingBlock",t[t.Piston=20]="Piston",t[t.FlyIntoWall=21]="FlyIntoWall",t[t.Magma=22]="Magma",t[t.Fireworks=23]="Fireworks",t[t.Lightning=24]="Lightning",t[t.Charging=25]="Charging",t[t.Temperature=26]="Temperature",t[t.Freezing=27]="Freezing",t[t.Stalactite=28]="Stalactite",t[t.Stalagmite=29]="Stalagmite",t[t.RamAttack=30]="RamAttack",t[t.SonicBoom=31]="SonicBoom",t[t.Campfire=32]="Campfire",t[t.SoulCampfire=33]="SoulCampfire",t[t.All=34]="All",t}(xg||{});var Rg=function(t){return t[t.Unknown=-1]="Unknown",t[t.EquipArmor=0]="EquipArmor",t[t.Eat=1]="Eat",t[t.Attack=2]="Attack",t[t.Consume=3]="Consume",t[t.Throw=4]="Throw",t[t.Shoot=5]="Shoot",t[t.Place=6]="Place",t[t.FillBottle=7]="FillBottle",t[t.FillBucket=8]="FillBucket",t[t.PourBucket=9]="PourBucket",t[t.UseTool=10]="UseTool",t[t.Interact=11]="Interact",t[t.Retrieved=12]="Retrieved",t[t.Dyed=13]="Dyed",t[t.Traded=14]="Traded",t[t.BrushingCompleted=15]="BrushingCompleted",t[t.OpenedVault=16]="OpenedVault",t[t._Count=17]="_Count",t}(Rg||{});var kg=function(t){return t[t.SetActions=0]="SetActions",t[t.ExecuteAction=1]="ExecuteAction",t[t.ExecuteClosingCommands=2]="ExecuteClosingCommands",t[t.SetName=3]="SetName",t[t.SetSkin=4]="SetSkin",t[t.SetInteractText=5]="SetInteractText",t[t.ExecuteOpeningCommands=6]="ExecuteOpeningCommands",t}(kg||{});var Ig=function(t){return t[t.Unknown=0]="Unknown",t[t.StartLoadingScreen=1]="StartLoadingScreen",t[t.EndLoadingScreen=2]="EndLoadingScreen",t}(Ig||{});var Sg=function(t){return t[t.Positional=0]="Positional",t[t.Rotational=1]="Rotational",t}(Sg||{});var Bg=function(t){return t[t.Add=0]="Add",t[t.Stop=1]="Stop",t}(Bg||{});var yt=function(t){return t[t.ReplacePage=0]="ReplacePage",t[t.AddPage=1]="AddPage",t[t.DeletePage=2]="DeletePage",t[t.SwapPage=3]="SwapPage",t[t.Finalize=4]="Finalize",t}(yt||{});var Og=function(t){return t[t.Camera=0]="Camera",t[t.Player=1]="Player",t}(Og||{});var Vg=function(t){return t[t.Linear=0]="Linear",t[t.Spring=1]="Spring",t[t.InQuad=2]="InQuad",t[t.OutQuad=3]="OutQuad",t[t.InOutQuad=4]="InOutQuad",t[t.InCubic=5]="InCubic",t[t.OutCubic=6]="OutCubic",t[t.InOutCubic=7]="InOutCubic",t[t.InQuart=8]="InQuart",t[t.OutQuart=9]="OutQuart",t[t.InOutQuart=10]="InOutQuart",t[t.InQuint=11]="InQuint",t[t.OutQuint=12]="OutQuint",t[t.InOutQuint=13]="InOutQuint",t[t.InSine=14]="InSine",t[t.OutSine=15]="OutSine",t[t.InOutSine=16]="InOutSine",t[t.InExpo=17]="InExpo",t[t.OutExpo=18]="OutExpo",t[t.InOutExpo=19]="InOutExpo",t[t.InCirc=20]="InCirc",t[t.OutCirc=21]="OutCirc",t[t.InOutCirc=22]="InOutCirc",t[t.InBounce=23]="InBounce",t[t.OutBounce=24]="OutBounce",t[t.InOutBounce=25]="InOutBounce",t[t.InBack=26]="InBack",t[t.OutBack=27]="OutBack",t[t.InOutBack=28]="InOutBack",t[t.InElastic=29]="InElastic",t[t.OutElastic=30]="OutElastic",t[t.InOutElastic=31]="InOutElastic",t}(Vg||{});var M=function(t){return t[t.ShapelessRecipe=0]="ShapelessRecipe",t[t.ShapedRecipe=1]="ShapedRecipe",t[t.FurnaceRecipe=2]="FurnaceRecipe",t[t.FurnaceAuxRecipe=3]="FurnaceAuxRecipe",t[t.MultiRecipe=4]="MultiRecipe",t[t.UserDataShapelessRecipe=5]="UserDataShapelessRecipe",t[t.ShapelessChemistryRecipe=6]="ShapelessChemistryRecipe",t[t.ShapedChemistryRecipe=7]="ShapedChemistryRecipe",t[t.SmithingTransformRecipe=8]="SmithingTransformRecipe",t[t.SmithingTrimRecipe=9]="SmithingTrimRecipe",t[t.COUNT=10]="COUNT",t}(M||{});var tt=function(t){return t[t.Invalid=0]="Invalid",t[t.Default=1]="Default",t[t.Molang=2]="Molang",t[t.ItemTag=3]="ItemTag",t[t.Deferred=4]="Deferred",t[t.ComplexAlias=5]="ComplexAlias",t}(tt||{});var Fn=function(t){return t[t.None=0]="None",t[t.AlwaysUnlocked=1]="AlwaysUnlocked",t[t.PlayerInWater=2]="PlayerInWater",t[t.PlayerHasManyItems=3]="PlayerHasManyItems",t}(Fn||{});var Cg=function(t){return t[t.FurnanceTickCount=0]="FurnanceTickCount",t[t.FurnaceLitTime=1]="FurnaceLitTime",t[t.FurnaceLitDuration=2]="FurnaceLitDuration",t[t.FurnaceStoredXp=3]="FurnaceStoredXp",t[t.FurnaceFuelAux=4]="FurnaceFuelAux",t[t.BrewTime=5]="BrewTime",t[t.BrewFuelAmount=6]="BrewFuelAmount",t[t.BrewFuelTotal=7]="BrewFuelTotal",t}(Cg||{});var Ie=function(t){return t[t.Invalid=0]="Invalid",t[t.Player=1]="Player",t[t.Entity=2]="Entity",t[t.FakePlayer=3]="FakePlayer",t}(Ie||{});var Tn=function(t){return t[t.Change=0]="Change",t[t.Remove=1]="Remove",t}(Tn||{});var jg=function(t){return t[t.Legacy=0]="Legacy",t[t.Overworld=1]="Overworld",t[t.Flat=2]="Flat",t[t.Nether=3]="Nether",t[t.TheEnd=4]="TheEnd",t[t.Void=5]="Void",t}(jg||{});var _g=function(t){return t[t.Unknown=0]="Unknown",t[t.PlayerInput=1]="PlayerInput",t[t.SimulationTick=2]="SimulationTick",t}(_g||{});var X=function(t){return t[t.Ascend=0]="Ascend",t[t.Descend=1]="Descend",t[t.NorthJump_DEPRECATED=2]="NorthJump_DEPRECATED",t[t.JumpDown=3]="JumpDown",t[t.SprintDown=4]="SprintDown",t[t.ChangeHeight=5]="ChangeHeight",t[t.Jumping=6]="Jumping",t[t.AutoJumpingInWater=7]="AutoJumpingInWater",t[t.Sneaking=8]="Sneaking",t[t.SneakDown=9]="SneakDown",t[t.Up=10]="Up",t[t.Down=11]="Down",t[t.Left=12]="Left",t[t.Right=13]="Right",t[t.UpLeft=14]="UpLeft",t[t.UpRight=15]="UpRight",t[t.WantUp=16]="WantUp",t[t.WantDown=17]="WantDown",t[t.WantDownSlow=18]="WantDownSlow",t[t.WantUpSlow=19]="WantUpSlow",t[t.Sprinting=20]="Sprinting",t[t.AscendBlock=21]="AscendBlock",t[t.DescendBlock=22]="DescendBlock",t[t.SneakToggleDown=23]="SneakToggleDown",t[t.PersistSneak=24]="PersistSneak",t[t.StartSprinting=25]="StartSprinting",t[t.StopSprinting=26]="StopSprinting",t[t.StartSneaking=27]="StartSneaking",t[t.StopSneaking=28]="StopSneaking",t[t.StartSwimming=29]="StartSwimming",t[t.StopSwimming=30]="StopSwimming",t[t.StartJumping=31]="StartJumping",t[t.StartGliding=32]="StartGliding",t[t.StopGliding=33]="StopGliding",t[t.PerformItemInteraction=34]="PerformItemInteraction",t[t.PerformBlockActions=35]="PerformBlockActions",t[t.PerformItemStackRequest=36]="PerformItemStackRequest",t[t.HandledTeleport=37]="HandledTeleport",t[t.Emoting=38]="Emoting",t[t.MissedSwing=39]="MissedSwing",t[t.StartCrawling=40]="StartCrawling",t[t.StopCrawling=41]="StopCrawling",t[t.StartFlying=42]="StartFlying",t[t.StopFlying=43]="StopFlying",t[t.ClientAckServerData=44]="ClientAckServerData",t[t.IsInClientPredictedVehicle=45]="IsInClientPredictedVehicle",t[t.PaddlingLeft=46]="PaddlingLeft",t[t.PaddlingRight=47]="PaddlingRight",t[t.BlockBreakingDelayEnabled=48]="BlockBreakingDelayEnabled",t[t.HorizontalCollision=49]="HorizontalCollision",t[t.VerticalCollision=50]="VerticalCollision",t[t.DownLeft=51]="DownLeft",t[t.DownRight=52]="DownRight",t[t.StartUsingItem=53]="StartUsingItem",t[t.IsCameraRelativeMovementEnabled=54]="IsCameraRelativeMovementEnabled",t[t.IsRotControlledByMoveDirection=55]="IsRotControlledByMoveDirection",t[t.StartSpinAttack=56]="StartSpinAttack",t[t.StopSpinAttack=57]="StopSpinAttack",t[t.IsHotbarOnlyTouch=58]="IsHotbarOnlyTouch",t[t.JumpReleasedRaw=59]="JumpReleasedRaw",t[t.JumpPressedRaw=60]="JumpPressedRaw",t[t.JumpCurrentRaw=61]="JumpCurrentRaw",t[t.SneakReleasedRaw=62]="SneakReleasedRaw",t[t.SneakPressedRaw=63]="SneakPressedRaw",t[t.SneakCurrentRaw=64]="SneakCurrentRaw",t}(X||{});var Ug=function(t){return t[t.Normal=0]="Normal",t[t.Teaser=1]="Teaser",t[t.Screen=2]="Screen",t[t.Viewer=3]="Viewer",t[t.Reality=4]="Reality",t[t.Placement=5]="Placement",t[t.LivingRoom=6]="LivingRoom",t[t.ExitLevel=7]="ExitLevel",t[t.ExitLevelLivingRoom=8]="ExitLevelLivingRoom",t[t.NumberModes=9]="NumberModes",t}(Ug||{});var Dg=function(t){return t[t.Unknown=0]="Unknown",t[t.Mouse=1]="Mouse",t[t.Touch=2]="Touch",t[t.GamePad=3]="GamePad",t[t.MotionController=4]="MotionController",t}(Dg||{});var Ng=function(t){return t[t.Touch=0]="Touch",t[t.Crosshair=1]="Crosshair",t[t.Classic=2]="Classic",t}(Ng||{});var Zg=function(t){return t[t.Sound=0]="Sound",t[t.ChangeState=1]="ChangeState",t}(Zg||{});var Mg=function(t){return t[t.None=0]="None",t[t.Camera=2]="Camera",t[t.Movement=4]="Movement",t}(Mg||{});var zg=function(t){return t[t.Remove=0]="Remove",t[t.Rider=1]="Rider",t[t.Passenger=2]="Passenger",t}(zg||{});var Fg=function(t){return t[t.Initial=1]="Initial",t[t.SupportTargetModuleUuid=2]="SupportTargetModuleUuid",t[t.SupportTargetSelection=3]="SupportTargetSelection",t[t.SupportPasscode=4]="SupportPasscode",t}(Fg||{});var Tg=function(t){return t[t.HasX=1]="HasX",t[t.HasY=2]="HasY",t[t.HasZ=4]="HasZ",t[t.HasRotationX=8]="HasRotationX",t[t.HasRotationY=16]="HasRotationY",t[t.HasRotationZ=32]="HasRotationZ",t[t.OnGround=64]="OnGround",t[t.Teleport=128]="Teleport",t[t.ForceMove=256]="ForceMove",t[t.All=63]="All",t}(Tg||{});var x=function(t){return t[t.AchievementAwarded=0]="AchievementAwarded",t[t.EntityInteract=1]="EntityInteract",t[t.PortalBuilt=2]="PortalBuilt",t[t.PortalUsed=3]="PortalUsed",t[t.MobKilled=4]="MobKilled",t[t.CauldronUsed=5]="CauldronUsed",t[t.PlayerDeath=6]="PlayerDeath",t[t.BossKilled=7]="BossKilled",t[t.AgentCommand=8]="AgentCommand",t[t.AgentCreated=9]="AgentCreated",t[t.BannerPatternRemoved=10]="BannerPatternRemoved",t[t.CommandExecuted=11]="CommandExecuted",t[t.FishBucketed=12]="FishBucketed",t[t.MobBorn=13]="MobBorn",t[t.PetDied=14]="PetDied",t[t.CauldronBlockUsed=15]="CauldronBlockUsed",t[t.ComposterBlockUsed=16]="ComposterBlockUsed",t[t.BellBlockUsed=17]="BellBlockUsed",t[t.ActorDefinition=18]="ActorDefinition",t[t.RaidUpdate=19]="RaidUpdate",t[t.PlayerMovementAnomaly=20]="PlayerMovementAnomaly",t[t.PlayerMovementCorrected=21]="PlayerMovementCorrected",t[t.HoneyHarvested=22]="HoneyHarvested",t[t.TargetBlockHit=23]="TargetBlockHit",t[t.PiglinBarter=24]="PiglinBarter",t[t.WaxedOrUnwaxedCopper=25]="WaxedOrUnwaxedCopper",t[t.CodeBuilderRuntimeAction=26]="CodeBuilderRuntimeAction",t[t.CodeBuilderScoreboard=27]="CodeBuilderScoreboard",t[t.StriderRiddenInLavaInOverworld=28]="StriderRiddenInLavaInOverworld",t[t.SneakCloseToSculkSensor=29]="SneakCloseToSculkSensor",t[t.CarefulRestoration=30]="CarefulRestoration",t[t.ItemUsed=31]="ItemUsed",t}(x||{});var qn=function(t){return t[t.Player=0]="Player",t[t.World=1]="World",t}(qn||{});var Hn=function(t){return t[t.LegacyClientAuthoritativeV1=0]="LegacyClientAuthoritativeV1",t[t.ClientAuthoritativeV2=1]="ClientAuthoritativeV2",t[t.ServerAuthoritativeV3=2]="ServerAuthoritativeV3",t}(Hn||{});var qg=function(t){return t[t.Undetermined=0]="Undetermined",t[t.SuperLow=1]="SuperLow",t[t.Low=2]="Low",t[t.Mid=3]="Mid",t[t.Hight=4]="Hight",t[t.SuperHigh=5]="SuperHigh",t}(qg||{});var Hg=function(t){return t[t.Build=1]="Build",t[t.Mine=2]="Mine",t[t.DoorsAndSwitches=4]="DoorsAndSwitches",t[t.OpenContainers=8]="OpenContainers",t[t.AttackPlayers=16]="AttackPlayers",t[t.AttackMobs=32]="AttackMobs",t[t.OperatorCommands=64]="OperatorCommands",t[t.Teleport=128]="Teleport",t}(Hg||{});var Wg=function(t){return t[t.Impulse=0]="Impulse",t[t.Repeating=1]="Repeating",t[t.Chain=2]="Chain",t}(Wg||{});var Wn=function(t){return t[t.Player=0]="Player",t[t.Vehicle=1]="Vehicle",t}(Wn||{});var Gn=function(t){return t[t.GlideBoost=0]="GlideBoost",t}(Gn||{});var Gg=function(t){return t[t.Entity=0]="Entity",t[t.BlockEntity=1]="BlockEntity",t[t.Other=2]="Other",t}(Gg||{});var Ag=function(t){return t[t.MarkerWhite=0]="MarkerWhite",t[t.MarkerGreen=1]="MarkerGreen",t[t.MarkerRed=2]="MarkerRed",t[t.MarkerBlue=3]="MarkerBlue",t[t.XWhite=4]="XWhite",t[t.TriangleRed=5]="TriangleRed",t[t.SquareWhite=6]="SquareWhite",t[t.MarkerSign=7]="MarkerSign",t[t.MarkerPink=8]="MarkerPink",t[t.MarkerOrange=9]="MarkerOrange",t[t.MarkerYellow=10]="MarkerYellow",t[t.MarkerTeal=11]="MarkerTeal",t[t.TriangleGreen=12]="TriangleGreen",t[t.SmallSquareWhite=13]="SmallSquareWhite",t[t.Mansion=14]="Mansion",t[t.Monument=15]="Monument",t[t.NoDraw=16]="NoDraw",t[t.VillageDesert=17]="VillageDesert",t[t.VillagePlains=18]="VillagePlains",t[t.VillageSavanna=19]="VillageSavanna",t[t.VillageSnowy=20]="VillageSnowy",t[t.VillageTaiga=21]="VillageTaiga",t[t.JungleTemple=22]="JungleTemple",t[t.WitchHut=23]="WitchHut",t[t.TrialChambers=24]="TrialChambers",t[t.Count=25]="Count",t[t.Player=0]="Player",t[t.PlayerOffMap=6]="PlayerOffMap",t[t.PlayerOffLimits=13]="PlayerOffLimits",t[t.PlayerHidden=16]="PlayerHidden",t[t.ItemFrame=1]="ItemFrame",t}(Ag||{});var Jg=function(t){return t[t.Failure=0]="Failure",t[t.Success=1]="Success",t}(Jg||{});var Yg=function(t){return t.CommandBlockOutput="commandBlockOutput",t.DoDaylightCycle="doDayLightCycle",t.DoEntityDrops="doEntityDrops",t.DoFireTick="doFireTick",t.RecipesUnlock="recipesUnlock",t.DoLimitedCrafting="doLimitedCrafting",t.DoMobLoot="doMobLoot",t.DoMobSpawning="doMobSpawning",t.DoTileDrops="doTileDrops",t.DoWeatherCycle="doWeatherCycle",t.DrowningDamage="drowningDamage",t.FallDamage="fallDamage",t.FireDamage="fireDamage",t.KeepInventory="keepInventory",t.MobGriefing="mobGriefing",t.PvP="pvp",t.ShowCoordinates="showCoordinates",t.ShowDaysPlayed="showDaysPlayed",t.NaturalRegeneration="naturalRegeneration",t.TNTExplodes="tntExplodes",t.SendCommandFeedback="sendCommandFeedback",t.DoInsomnia="doInsomnia",t.CommandBlocksEnabled="commandBlocksEnabled",t.DoImmediateRespawn="doImmediateRespawn",t.ShowDeathMessages="showDeathMessages",t.ShowTags="showTags",t.FreezeDamage="freezeDamage",t.RespawnBlocksExplode="respawnBlocksExplode",t.ShowBorderEffect="showBorderEffect",t.ShowRecipeMessages="showRecipeMessages",t.ProjectilesCanBreakBlocks="projectilesCanBreakBlocks",t.TNTExplosionDropDecay="tntExplosionDropDecay",t}(Yg||{});var Kg=function(t){return t.AlphaTest="alpha_test",t.AlphaTestSingleSided="alpha_test_single_sided",t.Blend="blend",t.DoubleSided="double_sided",t.Opaque="opaque",t}(Kg||{});var Qg=function(t){return t[t.All=0]="All",t[t.Construction=1]="Construction",t[t.Nature=2]="Nature",t[t.Equipment=3]="Equipment",t[t.Items=4]="Items",t[t.ItemCommandOnly=5]="ItemCommandOnly",t[t.Undefined=6]="Undefined",t[t.NUM_CATEGORIES=7]="NUM_CATEGORIES",t}(Qg||{});var $g=function(t){return t.Offhand="slot.weapon.offhand",t.Head="slot.armor.head",t.Chest="slot.armor.chest",t.Legs="slot.armor.legs",t.Feet="slot.armor.feet",t}($g||{});var Xg=function(t){return t.Planks="itemGroup.name.planks",t.Walls="itemGroup.name.walls",t.Fence="itemGroup.name.fence",t.FenceGate="itemGroup.name.fenceGate",t.Stairs="itemGroup.name.stairs",t.Door="itemGroup.name.door",t.Trapdoor="itemGroup.name.trapdoor",t.Glass="itemGroup.name.glass",t.GlassPane="itemGroup.name.glassPane",t.Slab="itemGroup.name.slab",t.StoneBrick="itemGroup.name.stoneBrick",t.Sandstone="itemGroup.name.sandstone",t.Copper="itemGroup.name.copper",t.Wool="itemGroup.name.wool",t.WoolCarpet="itemGroup.name.woolCarpet",t.ConcretePowder="itemGroup.name.concretePowder",t.Concrete="itemGroup.name.concrete",t.StainedClay="itemGroup.name.stainedClay",t.GlazedTerracotta="itemGroup.name.glazedTerracotta",t.Ore="itemGroup.name.ore",t.Stone="itemGroup.name.stone",t.Log="itemGroup.name.log",t.Wood="itemGroup.name.wood",t.Leaves="itemGroup.name.leaves",t.Sapling="itemGroup.name.sapling",t.Seed="itemGroup.name.seed",t.Crop="itemGroup.name.crop",t.Grass="itemGroup.name.grass",t.CoralDecorations="itemGroup.name.coral_decorations",t.Flower="itemGroup.name.flower",t.Dye="itemGroup.name.dye",t.RawFood="itemGroup.name.rawFood",t.Mushroom="itemGroup.name.mushroom",t.MonsterStoneEgg="itemGroup.name.monsterStoneEgg",t.MobEgg="itemGroup.name.mobEgg",t.Coral="itemGroup.name.coral",t.Sculk="itemGroup.name.sculk",t.Helmet="itemGroup.name.helmet",t.Chestplate="itemGroup.name.chestplate",t.Leggings="itemGroup.name.leggings",t.Boots="itemGroup.name.boots",t.Sword="itemGroup.name.sword",t.Axe="itemGroup.name.axe",t.Pickaxe="itemGroup.name.pickaxe",t.Shovel="itemGroup.name.shovel",t.Hoe="itemGroup.name.hoe",t.Arrow="itemGroup.name.arrow",t.CookedFood="itemGroup.name.cookedFood",t.MiscFood="itemGroup.name.miscFood",t.GoatHorn="itemGroup.name.goatHorn",t.Bundles="itemGroup.name.bundles",t.HorseArmor="itemGroup.name.horseArmor",t.Potion="itemGroup.name.potion",t.SplashPotion="itemGroup.name.splashPotion",t.LingeringPotion="itemGroup.name.lingeringPotion",t.OminousBottle="itemGroup.name.ominousBottle",t.Bed="itemGroup.name.bed",t.Candles="itemGroup.name.candles",t.Anvil="itemGroup.name.anvil",t.Chest="itemGroup.name.chest",t.ShulkerBox="itemGroup.name.shulkerBox",t.Record="itemGroup.name.record",t.Sign="itemGroup.name.sign",t.HangingSign="itemGroup.name.hanging_sign",t.Skull="itemGroup.name.skull",t.EnchantedBook="itemGroup.name.enchantedBook",t.Boat="itemGroup.name.boat",t.ChestBoat="itemGroup.name.chestboat",t.Rail="itemGroup.name.rail",t.Minecart="itemGroup.name.minecart",t.Buttons="itemGroup.name.buttons",t.PressurePlate="itemGroup.name.pressurePlate",t.Banner="itemGroup.name.banner",t.BannerPattern="itemGroup.name.banner_pattern",t.PotterySherds="itemGroup.name.potterySherds",t.SmithingTemplates="itemGroup.name.smithing_templates",t.Firework="itemGroup.name.firework",t.FireworkStars="itemGroup.name.fireworkStars",t}(Xg||{});import{Endianness as _a,Float32 as Ua,VarLong as Eb,VarString as vb,ZigZong as tP}from"@serenityjs/binarystream";import{Serialize as dt,Proto as eP}from"@serenityjs/raknet";import{Endianness as An}from"@serenityjs/binarystream";import{DataType as Lg}from"@serenityjs/raknet";var Jn=class nf extends Lg{static{s(this,"LoginTokens")}client;identity;constructor(e,r){super(),this.client=e,this.identity=r}static read(e){e.readVarInt();let r=e.readString32(An.Little),o=e.readString32(An.Little);return new nf(o,r)}static write(e,r){e.writeVarInt(r.identity.length+r.client.length+8),e.writeString32(r.identity,An.Little),e.writeString32(r.client,An.Little)}};import{Endianness as Yn}from"@serenityjs/binarystream";import{DataType as Eg}from"@serenityjs/raknet";var lV=class af extends Eg{static{s(this,"BehaviorPackInfo")}contentIdentity;contentKey;hasScripts;size;subpackName;uuid;version;addonPack;constructor(e,r,o,n,i,a,c,d){super(),this.contentIdentity=e,this.contentKey=r,this.hasScripts=o,this.size=n,this.subpackName=i,this.uuid=a,this.version=c,this.addonPack=d}static read(e){let r=[],o=e.readInt16(Yn.Little);for(let n=0;n<o;n++){let i=e.readVarString(),a=e.readVarString(),c=e.readUint32(Yn.Little),d=e.readVarString(),m=e.readVarString(),w=e.readVarString(),P=e.readBool(),k=e.readBool();r.push(new af(w,d,P,c,m,i,a,k))}return r}static write(e,r){e.writeInt16(r.length,Yn.Little);for(let o of r)e.writeVarString(o.uuid),e.writeVarString(o.version),e.writeUint32(o.size,Yn.Little),e.writeVarString(o.contentKey),e.writeVarString(o.subpackName),e.writeVarString(o.contentIdentity),e.writeBool(o.hasScripts),e.writeBool(o.addonPack)}};import{Endianness as Kn}from"@serenityjs/binarystream";import{DataType as vg}from"@serenityjs/raknet";var sf=class extends vg{static{s(this,"TexturePackInfo")}contentIdentity;contentKey;hasScripts;rtxEnabled;size;subpackName;uuid;version;addonPack;cdnLink;constructor(e,r,o,n,i,a,c,d,m,w){super(),this.contentIdentity=e,this.contentKey=r,this.hasScripts=o,this.rtxEnabled=n,this.size=i,this.subpackName=a,this.uuid=c,this.version=d,this.addonPack=m,this.cdnLink=w}static read(e){let r=[],o=e.readInt16(Kn.Little);for(let n=0;n<o;n++){let i=e.readUuid(),a=e.readVarString(),c=e.readUint64(Kn.Little),d=e.readVarString(),m=e.readVarString(),w=e.readVarString(),P=e.readBool(),k=e.readBool(),O=e.readBool(),S=e.readVarString();r.push(new this(w,d,P,O,c,m,i,a,k,S))}return r}static write(e,r){e.writeInt16(r.length,Kn.Little);for(let o of r)e.writeUuid(o.uuid),e.writeVarString(o.version),e.writeUint64(o.size,Kn.Little),e.writeVarString(o.contentKey),e.writeVarString(o.subpackName),e.writeVarString(o.contentIdentity),e.writeBool(o.hasScripts),e.writeBool(o.rtxEnabled),e.writeBool(o.addonPack),e.writeVarString(o.cdnLink)}};import{DataType as ty}from"@serenityjs/raknet";var xV=class cf extends ty{static{s(this,"PackLinks")}id;url;constructor(e,r){super(),this.id=e,this.url=r}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readVarString(),a=e.readVarString();r.push(new cf(i,a))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeVarString(o.id),e.writeVarString(o.url)}};import{Endianness as pf}from"@serenityjs/binarystream";import{DataType as ey}from"@serenityjs/raknet";var ff=class extends ey{static{s(this,"ResourcePackIds")}static read(e){let r=[],o=e.readInt16(pf.Little);for(let n=0;n<o;n++){let i=e.readVarString();r.push(i)}return r}static write(e,r){e.writeInt16(r.length,pf.Little);for(let o of r)e.writeVarString(o)}};import{DataType as ry}from"@serenityjs/raknet";var Xs=class df extends ry{static{s(this,"ResourceIdVersions")}name;uuid;version;constructor(e,r,o){super(),this.name=e,this.uuid=r,this.version=o}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readVarString(),a=e.readVarString(),c=e.readVarString();r.push(new df(c,i,a))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeVarString(o.uuid),e.writeVarString(o.version),e.writeVarString(o.name)}};import{Endianness as lf}from"@serenityjs/binarystream";import{DataType as iy}from"@serenityjs/raknet";var Qn=class mf extends iy{static{s(this,"Experiments")}enabled;name;constructor(e,r){super(),this.name=e,this.enabled=r}static read(e){let r=[],o=e.readInt32(lf.Little);for(let n=0;n<o;n++){let i=e.readVarString(),a=e.readBool();r.push(new mf(i,a))}return r}static write(e,r){e.writeInt32(r.length,lf.Little);for(let o of r)e.writeVarString(o.name),e.writeBool(o.enabled)}};import{Endianness as Wr}from"@serenityjs/binarystream";import{DataType as oy}from"@serenityjs/raknet";var l=class L extends oy{static{s(this,"Vector3f")}x;y;z;constructor(e,r,o){super(),this.x=e,this.y=r,this.z=o}set(e){this.x=e.x,this.y=e.y,this.z=e.z}round(){let e=Math.round(this.x),r=Math.round(this.y),o=Math.round(this.z);return new L(e,r,o)}ceil(){let e=Math.ceil(this.x),r=Math.ceil(this.y),o=Math.ceil(this.z);return new L(e,r,o)}floor(){let e=Math.floor(this.x),r=Math.floor(this.y),o=Math.floor(this.z);return new L(e,r,o)}add(e){return new L(this.x+e.x,this.y+e.y,this.z+e.z)}subtract(e){return new L(this.x-e.x,this.y-e.y,this.z-e.z)}multiply(e){return new L(this.x*e,this.y*e,this.z*e)}divide(e){return new L(this.x/e,this.y/e,this.z/e)}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}cross(e){let r=this.y*e.z-this.z*e.y,o=this.z*e.x-this.x*e.z,n=this.x*e.y-this.y*e.x;return new L(r,o,n)}length(){return Math.hypot(this.x,this.y,this.z)}lengthSqrt(){return this.x*this.x+this.y*this.y+this.z*this.z}normalize(){let e=this.length();return new L(this.x/e,this.y/e,this.z/e)}lerp(e,r){return new L(this.x+(e.x-this.x)*r,this.y+(e.y-this.y)*r,this.z+(e.z-this.z)*r)}slerp(e,r){let o=this.dot(e),n=Math.acos(o),i=Math.sin(n),a=Math.sin((1-r)*n)/i,c=Math.sin(r*n)/i;return this.multiply(a).add(e.multiply(c))}equals(e){return this.x===e.x&&this.y===e.y&&this.z===e.z}distance(e){return Math.hypot(this.x-e.x,this.y-e.y,this.z-e.z)}distanceManhattan(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}absolute(){return new L(Math.abs(this.x),Math.abs(this.y),Math.abs(this.z))}isZero(){return Math.abs(this.x)<Number.EPSILON&&Math.abs(this.y)<Number.EPSILON&&Math.abs(this.z)<Number.EPSILON}clone(){return new L(this.x,this.y,this.z)}static fromArray(e){return new L(e[0],e[1],e[2])}static read(e){let r=e.readFloat32(Wr.Little),o=e.readFloat32(Wr.Little),n=e.readFloat32(Wr.Little);return new L(r,o,n)}static write(e,r){e.writeFloat32(r.x,Wr.Little),e.writeFloat32(r.y,Wr.Little),e.writeFloat32(r.z,Wr.Little)}};import{Endianness as $n}from"@serenityjs/binarystream";import{DataType as ny}from"@serenityjs/raknet";var _=class uf extends ny{static{s(this,"Vector2f")}x;y;constructor(e,r){super(),this.x=e,this.y=r}static read(e){let r=e.readFloat32($n.Little),o=e.readFloat32($n.Little);return new uf(r,o)}static write(e,r){e.writeFloat32(r.x,$n.Little),e.writeFloat32(r.y,$n.Little)}};import{DataType as ay}from"@serenityjs/raknet";import{BinaryStream as hf}from"@serenityjs/binarystream";var b=class E extends ay{static{s(this,"BlockPosition")}x;y;z;constructor(e,r,o){super(),this.x=e,this.y=r,this.z=o}round(){let e=Math.round(this.x),r=Math.round(this.y),o=Math.round(this.z);return new E(e,r,o)}ceil(){let e=Math.ceil(this.x),r=Math.ceil(this.y),o=Math.ceil(this.z);return new E(e,r,o)}floor(){let e=Math.floor(this.x),r=Math.floor(this.y),o=Math.floor(this.z);return new E(e,r,o)}add(e){return new E(this.x+e.x,this.y+e.y,this.z+e.z)}subtract(e){return new E(this.x-e.x,this.y-e.y,this.z-e.z)}multiply(e){return new E(this.x*e,this.y*e,this.z*e)}divide(e){return new E(this.x/e,this.y/e,this.z/e)}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}cross(e){let r=this.y*e.z-this.z*e.y,o=this.z*e.x-this.x*e.z,n=this.x*e.y-this.y*e.x;return new E(r,o,n)}length(){return Math.hypot(this.x,this.y,this.z)}lengthSqrt(){return this.x*this.x+this.y*this.y+this.z*this.z}normalize(){let e=this.length();return new E(this.x/e,this.y/e,this.z/e)}lerp(e,r){return new E(this.x+(e.x-this.x)*r,this.y+(e.y-this.y)*r,this.z+(e.z-this.z)*r)}slerp(e,r){let o=this.dot(e),n=Math.acos(o),i=Math.sin(n),a=Math.sin((1-r)*n)/i,c=Math.sin(r*n)/i;return this.multiply(a).add(e.multiply(c))}equals(e){return this.x===e.x&&this.y===e.y&&this.z===e.z}distance(e){return Math.hypot(this.x-e.x,this.y-e.y,this.z-e.z)}distanceManhattan(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}absolute(){return new E(Math.abs(this.x),Math.abs(this.y),Math.abs(this.z))}static read(e){let r=e.readZigZag(),o=e.readVarInt(),n=e.readZigZag();return o=4294967231>=o?o:o-4294967296,new E(r,o,n)}static write(e,r){let o=r.y<0?4294967296+r.y:r.y;e.writeZigZag(r.x),e.writeVarInt(o),e.writeZigZag(r.z)}static fromVector3f(e){return new E(Math.floor(e.x),Math.floor(e.y),Math.floor(e.z))}static from(e){return new E(Math.floor(e.x),Math.floor(e.y),Math.floor(e.z))}static toVector3f(e){return new l(e.x,e.y,e.z)}static hash(e){let r=new hf;this.write(r,e);let o=0n;for(let n of r.getBuffer())o=o<<8n|BigInt(n);return o}static unhash(e){let r=[];for(;e>0;)r.push(Number(e&0xffn)),e>>=8n;let o=Buffer.from(r.reverse()),n=new hf(o);return this.read(n)}};import{Endianness as gf}from"@serenityjs/binarystream";import{DataType as sy}from"@serenityjs/raknet";var Gr=class yf extends sy{static{s(this,"GameRules")}editable;name;type;value;constructor(e,r,o,n){super(),this.editable=e,this.name=r,this.type=o,this.value=n}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readVarString(),a=e.readBool(),c=e.readVarInt(),d;switch(c){default:throw new Error(`Reading unknown GameRuleType: ${c}`);case ke.Bool:{d=e.readBool();break}case ke.Int:{d=e.readZigZag();break}case ke.Float:{d=e.readFloat32(gf.Little);break}}r.push(new yf(a,i,c,d))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)switch(e.writeVarString(o.name),e.writeBool(o.editable),e.writeVarInt(o.type),o.type){default:throw new Error(`Writing unknown GameRuleType: ${o.type}`);case ke.Bool:{e.writeBool(o.value);break}case ke.Int:{e.writeZigZag(o.value);break}case ke.Float:{e.writeFloat32(o.value,gf.Little);break}}}};import{DataType as cy}from"@serenityjs/raknet";import{CompoundTag as wf}from"@serenityjs/nbt";var bf=class extends cy{static{s(this,"NetworkBlockTypeDefinition")}identifier;nbt;constructor(e,r){super(),this.identifier=e,this.nbt=r}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readVarString(),a=wf.read(e,!0);r.push(new this(i,a))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeVarString(o.identifier),wf.write(e,o.nbt,!0)}};import{Endianness as Pf}from"@serenityjs/binarystream";import{DataType as py}from"@serenityjs/raknet";import{CompoundTag as xf}from"@serenityjs/nbt";var Rf=class extends py{static{s(this,"ItemData")}identifier;networkId;isComponentBased;itemVersion;properties;constructor(e,r,o,n,i){super(),this.identifier=e,this.networkId=r,this.isComponentBased=o,this.itemVersion=n,this.properties=i}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readVarString(),a=e.readInt16(Pf.Little),c=e.readBool(),d=e.readZigZag(),m=xf.read(e,!0);r.push(new this(i,a,c,d,m))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeVarString(o.identifier),e.writeInt16(o.networkId,Pf.Little),e.writeBool(o.isComponentBased),e.writeZigZag(o.itemVersion),xf.write(e,o.properties,!0)}};import{DataType as fy}from"@serenityjs/raknet";var kf=class If extends fy{static{s(this,"TeleportCause")}cause;sourceEntityType;constructor(e,r){super(),this.cause=e,this.sourceEntityType=r}static read(e,r,o){if(o===Dn.Teleport){let n=e.readInt32(r),i=e.readInt32(r);return new If(n,i)}else return null}static write(e,r,o,n){n===Dn.Teleport&&(e.writeInt32(r.cause,o),e.writeInt32(r.sourceEntityType,o))}};import{DataType as gy}from"@serenityjs/raknet";import{Endianness as jf}from"@serenityjs/binarystream";import{DataType as hy}from"@serenityjs/raknet";import{Endianness as Jr}from"@serenityjs/binarystream";import{DataType as dy}from"@serenityjs/raknet";import{Endianness as Xn}from"@serenityjs/binarystream";var ct=class Sf extends dy{static{s(this,"SkinImage")}width;height;data;constructor(e,r,o){super(),this.width=e,this.height=r,this.data=o}static read(e){let r=e.readUint32(Xn.Little),o=e.readUint32(Xn.Little),n=e.readVarInt(),i=e.readBuffer(n);return new Sf(r,o,i)}static write(e,r){e.writeUint32(r.width,Xn.Little),e.writeUint32(r.height,Xn.Little),e.writeVarInt(r.data.length),e.writeBuffer(r.data)}};import{DataType as ly}from"@serenityjs/raknet";import{Endianness as Ar}from"@serenityjs/binarystream";var Ln=class Bf extends ly{static{s(this,"SkinAnimation")}image;type;frames;expression;constructor(e,r,o,n){super(),this.image=e,this.type=r,this.frames=o,this.expression=n}static read(e){let r=ct.read(e),o=e.readUint32(Ar.Little),n=e.readFloat32(Ar.Little),i=e.readUint32(Ar.Little);return new Bf(r,o,n,i)}static write(e,r){ct.write(e,r.image),e.writeUint32(r.type,Ar.Little),e.writeFloat32(r.frames,Ar.Little),e.writeUint32(r.expression,Ar.Little)}};import{DataType as my}from"@serenityjs/raknet";var En=class Of extends my{static{s(this,"SkinPersonaPiece")}identifier;type;packIdentifier;isDefault;productIdentifier;constructor(e,r,o,n,i){super(),this.identifier=e,this.type=r,this.packIdentifier=o,this.isDefault=n,this.productIdentifier=i}static read(e){let r=e.readVarString(),o=e.readVarString(),n=e.readVarString(),i=e.readBool(),a=e.readVarString();return new Of(r,o,n,i,a)}static write(e,r){e.writeVarString(r.identifier),e.writeVarString(r.type),e.writeVarString(r.packIdentifier),e.writeBool(r.isDefault),e.writeVarString(r.productIdentifier)}};import{DataType as uy}from"@serenityjs/raknet";import{Endianness as Vf}from"@serenityjs/binarystream";var vn=class Cf extends uy{static{s(this,"SkinPersonaTintPiece")}type;colors;constructor(e,r){super(),this.type=e,this.colors=r}static read(e){let r=e.readVarString(),o=e.readUint32(Vf.Little),n=[];for(let i=0;i<o;i++)n.push(e.readVarString());return new Cf(r,n)}static write(e,r){e.writeVarString(r.type),e.writeUint32(r.colors.length,Vf.Little);for(let o of r.colors)e.writeVarString(o)}};var or=class Ls extends hy{static{s(this,"SerializedSkin")}identifier;playFabIdentifier;resourcePatch;skinImage;animations;capeImage;geometryData;geometryVersion;animationData;capeIdentifier;fullIdentifier;armSize;skinColor;personaPieces;tintPieces;isPremium;isPersona;isPersonaCapeOnClassic;isPrimaryUser;overridingPlayerAppearance;constructor(e,r,o,n,i,a,c,d,m,w,P,k,O,S,F,ht,be,Pe,xe,ro){super(),this.identifier=e,this.playFabIdentifier=r,this.resourcePatch=o,this.skinImage=n,this.animations=i,this.capeImage=a,this.geometryData=c,this.geometryVersion=d,this.animationData=m,this.capeIdentifier=w,this.fullIdentifier=P,this.armSize=k,this.skinColor=O,this.personaPieces=S,this.tintPieces=F,this.isPremium=ht,this.isPersona=be,this.isPersonaCapeOnClassic=Pe,this.isPrimaryUser=xe,this.overridingPlayerAppearance=ro}static read(e){let r=e.readVarString(),o=e.readVarString(),n=e.readVarString(),i=ct.read(e),a=e.readUint32(Jr.Little),c=[];for(let Re=0;Re<a;Re++)c.push(Ln.read(e));let d=ct.read(e),m=e.readVarString(),w=e.readVarString(),P=e.readVarString(),k=e.readVarString(),O=e.readVarString(),S=e.readVarString(),F=e.readVarString(),ht=e.readUint32(Jr.Little),be=[];for(let Re=0;Re<ht;Re++)be.push(En.read(e));let Pe=e.readUint32(Jr.Little),xe=[];for(let Re=0;Re<Pe;Re++)xe.push(vn.read(e));let ro=e.readBool(),Qs=e.readBool(),$s=e.readBool(),Sh=e.readBool(),Bh=e.readBool();return new Ls(r,o,n,i,c,d,m,w,P,k,O,S,F,be,xe,ro,Qs,$s,Sh,Bh)}static write(e,r){e.writeVarString(r.identifier),e.writeVarString(r.playFabIdentifier),e.writeVarString(r.resourcePatch),ct.write(e,r.skinImage),e.writeUint32(r.animations.length,Jr.Little);for(let o of r.animations)Ln.write(e,o);ct.write(e,r.capeImage),e.writeVarString(r.geometryData),e.writeVarString(r.geometryVersion),e.writeVarString(r.animationData),e.writeVarString(r.capeIdentifier),e.writeVarString(r.fullIdentifier),e.writeVarString(r.armSize),e.writeVarString(r.skinColor),e.writeUint32(r.personaPieces.length,Jr.Little);for(let o of r.personaPieces)En.write(e,o);e.writeUint32(r.tintPieces.length,Jr.Little);for(let o of r.tintPieces)vn.write(e,o);e.writeBool(r.isPremium),e.writeBool(r.isPersona),e.writeBool(r.isPersonaCapeOnClassic),e.writeBool(r.isPrimaryUser),e.writeBool(r.overridingPlayerAppearance)}static from(e){return{identifier:e.SkinId,playFabIdentifier:e.PlayFabId,resourcePatch:Buffer.from(e.SkinResourcePatch,"base64").toString("utf8"),skinImage:new ct(e.SkinImageWidth,e.SkinImageHeight,Buffer.from(e.SkinData,"base64")),animations:e.AnimatedImageData.map(r=>new Ln(new ct(r.ImageWidth,r.ImageHeight,Buffer.from(r.Image,"base64")),r.Frames,r.AnimationExpression,r.Type)),capeImage:new ct(e.CapeImageWidth,e.CapeImageHeight,Buffer.from(e.CapeData,"base64")),geometryData:Buffer.from(e.SkinGeometryData,"base64").toString("utf8"),geometryVersion:Buffer.from(e.SkinGeometryDataEngineVersion,"base64").toString("utf8"),animationData:e.SkinAnimationData,capeIdentifier:e.CapeId,fullIdentifier:e.SkinId+e.CapeId,armSize:e.ArmSize,skinColor:e.SkinColor,personaPieces:e.PersonaPieces.map(r=>new En(r.PieceId,r.PieceType,r.PackId,r.IsDefault,r.ProductId)),tintPieces:e.PieceTintColors.map(r=>new vn(r.PieceType,r.Colors)),isPremium:e.PremiumSkin,isPersona:e.PersonaSkin,isPersonaCapeOnClassic:e.CapeOnClassicSkin,isPrimaryUser:e.TrustedSkin,overridingPlayerAppearance:e.OverrideSkin}}static empty(){return new Ls("","","",new ct(0,0,Buffer.alloc(0)),[],new ct(0,0,Buffer.alloc(0)),"","","","","","","",[],[],!1,!1,!1,!1,!1)}};var _f=class Es extends gy{static{s(this,"PlayerListRecord")}uuid;uniqueId;username;xuid;platformChatIdentifier;platformBuild;skin;isTeacher;isHost;isVisitor;constructor(e,r,o,n,i,a,c,d,m,w){super(),this.uuid=e,this.uniqueId=r??null,this.username=o??null,this.xuid=n??null,this.platformChatIdentifier=i??null,this.platformBuild=a??null,this.skin=c??null,this.isTeacher=d??null,this.isHost=m??null,this.isVisitor=w??null}static read(e,r,o){if(o===Nn.Remove){let a=e.readVarInt(),c=[];for(let d=0;d<a;d++)c.push(new Es(e.readUuid()));return c}let n=e.readVarInt(),i=[];for(let a=0;a<n;a++){let c=e.readUuid(),d=e.readZigZong(),m=e.readVarString(),w=e.readVarString(),P=e.readVarString(),k=e.readInt32(jf.Little),O=or.read(e),S=e.readBool(),F=e.readBool(),ht=e.readBool();i.push(new Es(c,d,m,w,P,k,O,S,F,ht))}for(let a=0;a<n;a++)e.readBool();return i}static write(e,r,o,n){if(e.writeVarInt(r.length),n===Nn.Remove){for(let i of r)e.writeUuid(i.uuid);return}for(let i of r)e.writeUuid(i.uuid),e.writeZigZong(i.uniqueId),e.writeVarString(i.username),e.writeVarString(i.xuid),e.writeVarString(i.platformChatIdentifier),e.writeInt32(i.platformBuild,jf.Little),or.write(e,i.skin),e.writeBool(i.isTeacher),e.writeBool(i.isHost),e.writeBool(i.isVisitor);for(let i=0;i<r.length;i++)e.writeBool(!0)}};import{Endianness as Se}from"@serenityjs/binarystream";import{DataType as wy}from"@serenityjs/raknet";import{DataType as yy}from"@serenityjs/raknet";import{Endianness as ta}from"@serenityjs/binarystream";var vs=class Uf extends yy{static{s(this,"AbilitySet")}ability;value;constructor(e,r){super(),this.ability=e,this.value=r}static read(e){let r=[],o=e.readUint32(ta.Little),n=e.readUint32(ta.Little);for(let i of Object.values(j)){if(!(o&1<<i))continue;let a=(n&1<<i)!==0;r.push(new Uf(i,a))}return r}static write(e,r){let o=0,n=0;for(let{ability:i,value:a}of r)o|=1<<i,n|=a?1<<i:0;e.writeUint32(o,ta.Little),e.writeUint32(n,ta.Little)}};var ea=class extends wy{static{s(this,"AbilityLayer")}type;abilities;flySpeed;verticalFlySpeed;walkSpeed;constructor(e,r,o,n,i){super(),this.type=e,this.abilities=r,this.flySpeed=o,this.verticalFlySpeed=n,this.walkSpeed=i}static read(e){let r=[],o=e.readUint8();for(let n=0;n<o;n++){let i=e.readUint16(Se.Little),a=vs.read(e),c=e.readFloat32(Se.Little),d=e.readFloat32(Se.Little),m=e.readFloat32(Se.Little);r.push(new this(i,a,c,d,m))}return r}static write(e,r){e.writeUint8(r.length);for(let o of r)e.writeUint16(o.type,Se.Little),vs.write(e,o.abilities),e.writeFloat32(o.flySpeed,Se.Little),e.writeFloat32(o.verticalFlySpeed,Se.Little),e.writeFloat32(o.walkSpeed,Se.Little)}};import{DataType as by}from"@serenityjs/raknet";var Df=class extends by{static{s(this,"TextSource")}static read(e,r,o){return o===$.Chat||o===$.Whisper||o===$.Announcement?e.readVarString():null}static write(e,r,o,n){(n===$.Chat||n===$.Whisper||n===$.Announcement)&&e.writeVarString(r)}};import{DataType as Py}from"@serenityjs/raknet";var Nf=class extends Py{static{s(this,"TextParameters")}static read(e,r,o){if(o===$.Translation||o===$.Popup||o===$.JukeboxPopup){let n=[],i=e.readVarInt();for(let a=0;a<i;a++)n.push(e.readVarString());return n}else return null}static write(e,r,o,n){if(n===$.Translation||n===$.Popup||n===$.JukeboxPopup){e.writeVarInt(r.length);for(let i of r)e.writeVarString(i)}}};import{DataType as xy}from"@serenityjs/raknet";var Zf=class extends xy{static{s(this,"InteractPosition")}static read(e,r,o){return o===Hr.InteractUpdate||o===Hr.StopRiding?l.read(e):null}static write(e,r,o,n){(n===Hr.InteractUpdate||n===Hr.StopRiding)&&l.write(e,r)}};import{Endianness as wt}from"@serenityjs/binarystream";import{DataType as ky}from"@serenityjs/raknet";import{Endianness as Yr}from"@serenityjs/binarystream";import{DataType as Ry}from"@serenityjs/raknet";var tc=class extends Ry{static{s(this,"AttributeModifier")}id;name;amount;operation;operand;serializable;constructor(e,r,o,n,i,a){super(),this.id=e,this.name=r,this.amount=o,this.operation=n,this.operand=i,this.serializable=a}static read(e){let r=e.readVarString(),o=e.readVarString(),n=e.readInt32(Yr.Little),i=e.readInt32(Yr.Little),a=e.readFloat32(Yr.Little),c=e.readBool();return new this(r,o,n,i,a,c)}static write(e,r){e.writeVarString(r.id),e.writeVarString(r.name),e.writeInt32(r.amount,Yr.Little),e.writeInt32(r.operation,Yr.Little),e.writeFloat32(r.operand,Yr.Little),e.writeBool(r.serializable)}};var Mf=class zf extends ky{static{s(this,"Attribute")}min;max;current;defaultMin;defaultMax;default;name;modifiers;constructor(e,r,o,n,i,a,c,d){super(),this.min=e,this.max=r,this.current=o,this.defaultMin=n,this.defaultMax=i,this.default=a,this.name=c,this.modifiers=d}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readFloat32(wt.Little),a=e.readFloat32(wt.Little),c=e.readFloat32(wt.Little),d=e.readFloat32(wt.Little),m=e.readFloat32(wt.Little),w=e.readFloat32(wt.Little),P=e.readVarString(),k=[],O=e.readVarInt();for(let S=0;S<O;S++)k.push(tc.read(e));r.push(new this(i,a,c,d,m,w,P,k))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r){e.writeFloat32(o.min,wt.Little),e.writeFloat32(o.max,wt.Little),e.writeFloat32(o.current,wt.Little),e.writeFloat32(o.defaultMin,wt.Little),e.writeFloat32(o.defaultMax,wt.Little),e.writeFloat32(o.default,wt.Little),e.writeVarString(o.name),e.writeVarInt(o.modifiers.length);for(let n of o.modifiers)tc.write(e,n)}}static create(e,r,o,n,i){return new zf(r,o,n??o,r,o,i??o,e,[])}};import{Endianness as Ff}from"@serenityjs/binarystream";import{DataType as Iy}from"@serenityjs/raknet";var Tf=class ec extends Iy{static{s(this,"ChunkCoords")}x;z;constructor(e,r){super(),this.x=e,this.z=r}static read(e){let r=[],o=e.readUint32(Ff.Little);for(let n=0;n<o;n++){let i=e.readZigZag(),a=e.readZigZag();r.push(new ec(i,a))}return r}static write(e,r){e.writeUint32(r.length,Ff.Little);for(let o of r)e.writeZigZag(o.x),e.writeZigZag(o.z)}static hash(e){let r=BigInt(e.x),o=BigInt(e.z);return r<<32n|o&0xffffffffn}static unhash(e){let r=Number(e>>32n),o=e&0xffffffffn,n=Number(o>=0x80000000n?o-0x100000000n:o);return new ec(r,n)}};import{DataType as Sy}from"@serenityjs/raknet";var ra=class qf extends Sy{static{s(this,"Links")}immediate;riddenEntityId;riderEntityId;riderInitiated;type;constructor(e,r,o,n,i){super(),this.immediate=e,this.riddenEntityId=r,this.riderEntityId=o,this.riderInitiated=n,this.type=i}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readZigZong(),a=e.readZigZong(),c=e.readUint8(),d=e.readBool(),m=e.readBool();r.push(new qf(d,i,a,m,c))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeZigZong(o.riddenEntityId),e.writeZigZong(o.riderEntityId),e.writeUint8(o.type),e.writeBool(o.immediate),e.writeBool(o.riderInitiated)}};import{DataType as By}from"@serenityjs/raknet";var Hf=class extends By{static{s(this,"ModalFormData")}static read(e,r,o){return o?e.readVarString():null}static write(e,r,o,n){n&&e.writeVarString(r)}};import{DataType as Oy}from"@serenityjs/raknet";var Wf=class extends Oy{static{s(this,"ModalFormCanceled")}static read(e,r,o){return o?e.readUint8():null}static write(e,r,o,n){n&&e.writeUint8(r)}};import{Endianness as Kr}from"@serenityjs/binarystream";import{DataType as Vy}from"@serenityjs/raknet";var Gf=class Af extends Vy{static{s(this,"EntityAttributes")}name;min;value;max;constructor(e,r,o,n){super(),this.name=e,this.min=r,this.value=o,this.max=n}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readVarString(),a=e.readFloat32(Kr.Little),c=e.readFloat32(Kr.Little),d=e.readFloat32(Kr.Little);r.push(new Af(i,a,c,d))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeVarString(o.name),e.writeFloat32(o.min,Kr.Little),e.writeFloat32(o.value,Kr.Little),e.writeFloat32(o.max,Kr.Little)}};import{DataType as jy}from"@serenityjs/raknet";import{DataType as Cy}from"@serenityjs/raknet";import{Endianness as Jf}from"@serenityjs/binarystream";var St=class Yf extends Cy{static{s(this,"FullContainerName")}identifier;dynamicIdentifier;constructor(e,r){super(),this.identifier=e,this.dynamicIdentifier=r}static read(e){let r=e.readUint8(),n=e.readBool()?e.readUint32(Jf.Little):void 0;return new Yf(r,n)}static write(e,r){e.writeUint8(r.identifier),r.dynamicIdentifier?(e.writeBool(!0),e.writeUint32(r.dynamicIdentifier,Jf.Little)):e.writeBool(!1)}};var K=class Kf extends jy{static{s(this,"ItemStackRequestSlotInfo")}container;slot;stackId;constructor(e,r,o){super(),this.container=e,this.slot=r,this.stackId=o}static read(e){let r=St.read(e),o=e.readUint8(),n=e.readZigZag();return new Kf(r,o,n)}static write(e,r){St.write(e,r.container),e.writeUint8(r.slot),e.writeZigZag(r.stackId)}};import{DataType as _y}from"@serenityjs/raknet";var Qf=class rc extends _y{static{s(this,"ItemStackResponses")}status;id;containers;constructor(e,r,o){super(),this.status=e,this.id=r,this.containers=o}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readUint8(),a=e.readZigZag();if(i>0)r.push(new rc(i,a));else{let c=e.readVarInt(),d=[],m=e.readUint8(),w=e.readVarInt(),P=[];for(let k=0;k<w;k++)for(let O=0;O<c;O++){let S=e.readUint8(),F=e.readUint8(),ht=e.readUint8(),be=e.readZigZag(),Pe=e.readVarString(),xe=e.readZigZag();P.push({amount:ht,nametag:Pe,durabilityCorrection:xe,hotbarSlot:F,runtimeId:be,slot:S})}d.push({slots:P,type:m}),r.push(new rc(i,a,d))}}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)if(e.writeUint8(o.status),e.writeZigZag(o.id),!(o.status>0)){e.writeVarInt(o.containers.length);for(let n of o.containers){e.writeUint8(n.type),e.writeVarInt(n.slots.length);for(let i of n.slots)e.writeUint8(i.slot),e.writeUint8(i.hotbarSlot),e.writeUint8(i.amount),e.writeZigZag(i.runtimeId),e.writeVarString(i.nametag),e.writeZigZag(i.durabilityCorrection)}}}};import{DataType as Zy}from"@serenityjs/raknet";import{DataType as Dy}from"@serenityjs/raknet";import{BinaryStream as Ny,Endianness as ia}from"@serenityjs/binarystream";import{Endianness as pt}from"@serenityjs/binarystream";import{CompoundTag as $f}from"@serenityjs/nbt";import{DataType as Uy}from"@serenityjs/raknet";var n2={[j.Build]:!0,[j.Mine]:!0,[j.DoorsAndSwitches]:!0,[j.OpenContainers]:!0,[j.AttackPlayers]:!0,[j.AttackMobs]:!0,[j.OperatorCommands]:!1,[j.Teleport]:!1,[j.Invulnerable]:!1,[j.Flying]:!1,[j.MayFly]:!1,[j.InstantBuild]:!1,[j.Lightning]:!1,[j.FlySpeed]:!0,[j.WalkSpeed]:!0,[j.Muted]:!1,[j.WorldBuilder]:!1,[j.NoClip]:!1,[j.PrivilegedBuilder]:!1,[j.VerticalFlySpeed]:!0,[j.Count]:!1};var s2=776,c2="1.21.60.27",p2=50,ic=380;var Qr=class Xf extends Uy{static{s(this,"ItemInstanceUserData")}nbt;canPlaceOn;canDestroy;ticking;constructor(e,r,o,n){super(),this.nbt=e,this.canPlaceOn=r,this.canDestroy=o,this.ticking=n}static read(e,r,o){let n=e.readUint16(pt.Little),i;if(n===65535){let P=e.readInt8();switch(P){case 1:{i=$f.read(e);break}default:throw new Error(`Unsupported NBT formatting version: ${P}`)}}else i=null;let a=[],c=e.readInt32(pt.Little);for(let P=0;P<c;P++){let k=e.readString32(pt.Little);a.push(k)}let d=[],m=e.readInt32(pt.Little);for(let P=0;P<m;P++){let k=e.readString32(pt.Little);d.push(k)}let w=o===ic?e.readInt64(pt.Little):null;return new Xf(i,a,d,w)}static write(e,r,o,n){r.nbt?(e.writeUint16(65535,pt.Little),e.writeInt8(1),$f.write(e,r.nbt,!1)):e.writeUint16(0,pt.Little),e.writeInt32(r.canPlaceOn.length,pt.Little);for(let i of r.canPlaceOn)e.writeString32(i,pt.Little);e.writeInt32(r.canDestroy.length,pt.Little);for(let i of r.canDestroy)e.writeString32(i,pt.Little);n===ic&&e.writeInt64(r.ticking??BigInt(0),pt.Little)}};var R=class oc extends Dy{static{s(this,"NetworkItemStackDescriptor")}network;stackSize;metadata;stackNetId;networkBlockId;extras;constructor(e,r,o,n,i,a){super(),this.network=e,this.stackSize=r??null,this.metadata=o??null,this.stackNetId=n??null,this.networkBlockId=i??null,this.extras=a??null}static read(e){let r=e.readZigZag();if(r===0)return new oc(r);let o=e.readUint16(ia.Little),n=e.readVarInt(),i=e.readBool()?e.readVarInt():null,a=e.readZigZag(),d=e.readVarInt()>0?Qr.read(e,ia.Little,r):null;return new oc(r,o,n,i,a,d)}static write(e,r){if(e.writeZigZag(r.network),r.network!==0)if(e.writeUint16(r.stackSize??0,ia.Little),e.writeVarInt(r.metadata??0),r.stackNetId?(e.writeBool(!0),e.writeVarInt(r.stackNetId)):e.writeBool(!1),e.writeZigZag(r.networkBlockId??0),r.extras){let o=new Ny;Qr.write(o,r.extras,ia.Little,r.network),e.writeVarInt(o.binary.length),e.write(o.binary)}else e.writeVarInt(0)}};var Lf=class extends Zy{static{s(this,"ItemStacks")}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=R.read(e);r.push(i)}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)R.write(e,o)}};import{DataType as My}from"@serenityjs/raknet";var C2=class extends My{static{s(this,"VariableStringArray")}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++)r.push(e.readVarString());return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeVarString(o)}};import{Uint16 as Ef,Uint32 as vf,Uint8 as td}from"@serenityjs/binarystream";import{DataType as zy}from"@serenityjs/raknet";var ed=class rd extends zy{static{s(this,"Enums")}name;values;constructor(e,r){super(),this.name=e,this.values=r}static read(e,r,o){let n=[],i=e.readVarInt();for(let a=0;a<i;a++){let c=e.readVarString(),d=[],m=e.readVarInt();for(let w=0;w<m;w++){let P=o.length<255?td:o.length<65535?Ef:vf;d.push(P.read(e,r))}n.push(new rd(c,d))}return n}static write(e,r,o,n){e.writeVarInt(r.length);for(let i of r){e.writeVarString(i.name),e.writeVarInt(i.values.length);for(let a of i.values)(n.length<255?td:n.length<65535?Ef:vf).write(e,a,o)}}};import{Endianness as oa}from"@serenityjs/binarystream";import{DataType as Fy}from"@serenityjs/raknet";var id=class od extends Fy{static{s(this,"Subcommands")}name;values;constructor(e,r){super(),this.name=e,this.values=r}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readVarString(),a=[],c=e.readVarInt();for(let d=0;d<c;d++){let m=e.readUint16(oa.Little),w=e.readUint16(oa.Little);a.push({index:m,value:w})}r.push(new od(i,a))}return r}static write(e,r){e.writeVarInt(r.length);for(let{name:o,values:n}of r){e.writeVarString(o),e.writeVarInt(n.length);for(let{index:i,value:a}of n)e.writeUint16(i,oa.Little),e.writeUint16(a,oa.Little)}}};import{Endianness as Be}from"@serenityjs/binarystream";import{DataType as Ty}from"@serenityjs/raknet";var nd=class ad extends Ty{static{s(this,"Commands")}name;description;flags;permissionLevel;alias;subcommands;overloads;constructor(e,r,o,n,i,a,c){super(),this.name=e,this.description=r,this.flags=o,this.permissionLevel=n,this.alias=i,this.subcommands=a,this.overloads=c}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readVarString(),a=e.readVarString(),c=e.readUint16(Be.Little),d=e.readUint8(),m=e.readInt32(Be.Little),w=[],P=e.readVarInt();for(let S=0;S<P;S++)w.push(e.readUint16(Be.Little));let k=[],O=e.readVarInt();for(let S=0;S<O;S++){let F=e.readBool(),ht=[],be=e.readVarInt();for(let Pe=0;Pe<be;Pe++){let xe=e.readVarString(),ro=e.readUint32(Be.Little),Qs=e.readBool(),$s=e.readUint8();ht.push({symbol:ro,name:xe,optional:Qs,options:$s})}k.push({chaining:F,parameters:ht})}r.push(new ad(i,a,c,d,m,w,k))}return r}static write(e,r){e.writeVarInt(r.length);for(let{name:o,description:n,flags:i,permissionLevel:a,alias:c,subcommands:d,overloads:m}of r){e.writeVarString(o),e.writeVarString(n),e.writeUint16(i,Be.Little),e.writeUint8(a),e.writeInt32(c,Be.Little),e.writeVarInt(d.length);for(let w of d)e.writeUint16(w,Be.Little);e.writeVarInt(m.length);for(let{chaining:w,parameters:P}of m){e.writeBool(w),e.writeVarInt(P.length);for(let{name:k,symbol:O,optional:S,options:F}of P)e.writeVarString(k),e.writeUint32(O,Be.Little),e.writeBool(S),e.writeUint8(F)}}}};import{DataType as qy}from"@serenityjs/raknet";var sd=class cd extends qy{static{s(this,"DynamicEnums")}name;values;constructor(e,r){super(),this.name=e,this.values=r}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readVarString(),a=[],c=e.readVarInt();for(let d=0;d<c;d++)a.push(e.readVarString());r.push(new cd(i,a))}return r}static write(e,r){e.writeVarInt(r.length);for(let{name:o,values:n}of r){e.writeVarString(o),e.writeVarInt(n.length);for(let i of n)e.writeVarString(i)}}};import{DataType as Hy}from"@serenityjs/raknet";import{Endianness as na}from"@serenityjs/binarystream";var pd=class fd extends Hy{static{s(this,"EnumConstraints")}valueIndex;enumIndex;constaints;constructor(e,r,o){super(),this.valueIndex=e,this.enumIndex=r,this.constaints=o}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readUint32(na.Little),a=e.readUint32(na.Little),c=[],d=e.readVarInt();for(let m=0;m<d;m++)c.push(e.readUint8());r.push(new fd(i,a,c))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r){e.writeUint32(o.valueIndex,na.Little),e.writeUint32(o.enumIndex,na.Little),e.writeVarInt(o.constaints.length);for(let n of o.constaints)e.writeUint8(n)}}};import{Endianness as Wy}from"@serenityjs/binarystream";import{DataType as Gy}from"@serenityjs/raknet";var dd=class extends Gy{static{s(this,"AnimateAction")}static read(e,r,o){return o===zn.RowRight||o===zn.RowLeft?e.readFloat32(r):null}static write(e,r){r!==null&&e.writeFloat32(r,Wy.Little)}};import{DataType as Ay}from"@serenityjs/raknet";var nr=class ld extends Ay{static{s(this,"CommandOriginData")}origin;uuid;requestId;playerActorUniqueId;constructor(e,r,o,n){super(),this.origin=e,this.uuid=r,this.requestId=o,this.playerActorUniqueId=n??0n}static read(e){let r=e.readVarInt(),o=e.readUuid(),n=e.readVarString(),i=0n;return(r===3||r===4)&&(i=e.readVarLong()),new ld(r,o,n,i)}static write(e,r){e.writeVarInt(r.origin),e.writeUuid(r.uuid),e.writeVarString(r.requestId),(r.origin===3||r.origin===4)&&e.writeVarLong(r.playerActorUniqueId)}};import{DataType as Yy}from"@serenityjs/raknet";import{DataType as Jy}from"@serenityjs/raknet";var nc=class md extends Jy{static{s(this,"CommandOutputMessage")}isInternal;messageId;parameters;constructor(e,r,o){super(),this.isInternal=e,this.messageId=r,this.parameters=o}static read(e){let r=e.readBool(),o=e.readVarString(),n=[],i=e.readVarInt();for(let a=0;a<i;a++)n.push(e.readVarString());return new md(r,o,n)}static write(e,r){e.writeBool(r.isInternal),e.writeVarString(r.messageId),e.writeVarInt(r.parameters.length);for(let o of r.parameters)e.writeVarString(o)}};var aa=class ud extends Yy{static{s(this,"CommandOutputData")}originData;outputType;successCount;messages;data;constructor(e,r,o,n,i){super(),this.originData=e,this.outputType=r,this.successCount=o,this.messages=n,this.data=i}static read(e){let r=nr.read(e),o=e.readByte(),n=e.readVarInt(),i=e.readVarInt(),a=[];for(let d=0;d<i;d++)a.push(nc.read(e));let c="";return o===3&&(c=e.readVarString()),new ud(r,o,n,a,c)}static write(e,r){nr.write(e,r.originData),e.writeByte(r.outputType),e.writeVarInt(r.successCount),e.writeVarInt(r.messages.length);for(let o of r.messages)nc.write(e,o)}};import{DataType as Ky}from"@serenityjs/raknet";var sa=class ac extends Ky{static{s(this,"Rotation")}yaw;pitch;headYaw;constructor(e,r,o){super(),this.yaw=e,this.pitch=r,this.headYaw=o}set(e){this.yaw=e.yaw,this.pitch=e.pitch,this.headYaw=e.headYaw}floor(){return this.yaw=Math.floor(this.yaw),this.pitch=Math.floor(this.pitch),this.headYaw=Math.floor(this.headYaw),this}static fromVector3f(e){let r=e.floor();return new ac(r.x,r.y,r.z)}static read(e){let r=e.readByte()*1.40625,o=e.readByte()*(360/256),n=e.readByte()*(360/256);return new ac(r,o,n)}static write(e,r){e.writeByte(Math.floor(r.pitch/(360/256))),e.writeByte(Math.floor(r.headYaw/(360/256))),e.writeByte(Math.floor(r.yaw/(360/256)))}};import{DataType as Qy}from"@serenityjs/raknet";import{BinaryStream as $y,Endianness as ca}from"@serenityjs/binarystream";var C=class sc extends Qy{static{s(this,"NetworkItemInstanceDescriptor")}network;stackSize;metadata;networkBlockId;extras;constructor(e,r,o,n,i){super(),this.network=e,this.stackSize=r??null,this.metadata=o??null,this.networkBlockId=n??null,this.extras=i??null}static read(e){let r=e.readZigZag();if(r===0)return new sc(r);let o=e.readUint16(ca.Little),n=e.readVarInt(),i=e.readZigZag(),c=e.readVarInt()>0?Qr.read(e,ca.Little,r):null;return new sc(r,o,n,i,c)}static write(e,r){if(e.writeZigZag(r.network),r.network!==0)if(e.writeUint16(r.stackSize??0,ca.Little),e.writeVarInt(r.metadata??0),e.writeZigZag(r.networkBlockId??0),r.extras){let o=new $y;Qr.write(o,r.extras,ca.Little,r.network),e.writeVarInt(o.binary.length),e.write(o.binary)}else e.writeVarInt(0)}};import{DataType as Xy}from"@serenityjs/raknet";var hd=class extends Xy{static{s(this,"CreativeItem")}itemIndex;itemInstance;groupIndex;constructor(e,r,o){super(),this.itemIndex=e,this.itemInstance=r,this.groupIndex=o}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readVarInt(),a=C.read(e),c=e.readVarInt();r.push(new this(i,a,c))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeVarInt(o.itemIndex),C.write(e,o.itemInstance),e.writeVarInt(o.groupIndex)}};import{DataType as Ly}from"@serenityjs/raknet";var ar=class cc extends Ly{static{s(this,"LegacyTransaction")}request;actions;constructor(e,r){super(),this.request=e,this.actions=r??null}static read(e){let r=e.readZigZag();if(r===0)return new cc(r);let o=[],n=e.readVarInt();for(let i=0;i<n;i++){let a=e.readUint8(),c=[],d=e.readVarInt();for(let m=0;m<d;m++){let w=e.readUint8();c.push(w)}o.push({containerId:a,changedSlots:c})}return new cc(r,o)}static write(e,r){if(e.writeZigZag(r.request),r.request!==0){if(r.actions===null)throw new Error("actions are not present.");e.writeVarInt(r.actions.length);for(let o of r.actions){e.writeUint8(o.containerId),e.writeVarInt(o.changedSlots.length);for(let n of o.changedSlots)e.writeUint8(n)}}}};import{DataType as iw}from"@serenityjs/raknet";import{DataType as vy}from"@serenityjs/raknet";import{DataType as Ey}from"@serenityjs/raknet";var pc=class gd extends Ey{static{s(this,"InventorySource")}type;containerId;bitFlags;constructor(e,r,o){super(),this.type=e,this.containerId=r??null,this.bitFlags=o??null}static read(e){let r=e.readVarInt(),o=null,n=null;switch(r){case ir.ContainerInventory:{o=e.readVarInt();break}case ir.WorldInteraction:{n=e.readVarInt();break}case ir.CreativeInventory:break;default:throw new Error(`Unknown/not implemented inventory source type: ${r}`)}return new gd(r,o,n)}static write(e,r){switch(e.writeVarInt(r.type),r.type){case ir.ContainerInventory:{if(r.containerId===null)throw new Error("ContainerInventory type must have a containerId value");e.writeVarInt(r.containerId);break}case ir.WorldInteraction:{if(r.bitFlags===null)throw new Error("WorldInteraction type must have a bitFlags value");e.writeVarInt(r.bitFlags);break}default:throw new Error(`Unknown/not implemented inventory source type: ${r.type}`)}}};var $r=class yd extends vy{static{s(this,"InventoryAction")}source;slot;oldItem;newItem;constructor(e,r,o,n){super(),this.source=e,this.slot=r,this.oldItem=o,this.newItem=n}static read(e){let r=pc.read(e),o=e.readVarInt(),n=R.read(e),i=R.read(e);return new yd(r,o,n,i)}static write(e,r){pc.write(e,r.source),e.writeVarInt(r.slot),R.write(e,r.oldItem),R.write(e,r.newItem)}};import{DataType as tw}from"@serenityjs/raknet";var Xr=class wd extends tw{static{s(this,"ItemUseInventoryTransaction")}type;triggerType;blockPosition;face;slot;item;fromPosition;clickPosition;networkBlockId;clientPrediction;constructor(e,r,o,n,i,a,c,d,m,w){super(),this.type=e,this.triggerType=r,this.blockPosition=o,this.face=n,this.slot=i,this.item=a,this.fromPosition=c,this.clickPosition=d,this.networkBlockId=m,this.clientPrediction=w}static read(e){let r=e.readVarInt(),o=e.readVarInt(),n=b.read(e),i=e.readZigZag(),a=e.readZigZag(),c=R.read(e),d=l.read(e),m=l.read(e),w=e.readZigZag(),P=e.readVarInt();return new wd(r,o,n,i,a,c,d,m,w,P)}static write(e,r){e.writeVarInt(r.type),e.writeVarInt(r.triggerType),b.write(e,r.blockPosition),e.writeZigZag(r.face),e.writeZigZag(r.slot),R.write(e,r.item),l.write(e,r.fromPosition),l.write(e,r.clickPosition),e.writeZigZag(r.networkBlockId),e.writeVarInt(r.clientPrediction)}};import{DataType as ew}from"@serenityjs/raknet";var fc=class bd extends ew{static{s(this,"ItemUseOnEntityInventoryTransaction")}actorRuntimeId;type;slot;item;fromPosition;clickPosition;constructor(e,r,o,n,i,a){super(),this.actorRuntimeId=e,this.type=r,this.slot=o,this.item=n,this.fromPosition=i,this.clickPosition=a}static read(e){let r=e.readVarLong(),o=e.readVarInt(),n=e.readZigZag(),i=R.read(e),a=l.read(e),c=l.read(e);return new bd(r,o,n,i,a,c)}static write(e,r){e.writeVarLong(r.actorRuntimeId),e.writeVarInt(r.type),e.writeZigZag(r.slot),R.write(e,r.item),l.write(e,r.fromPosition),l.write(e,r.clickPosition)}};import{DataType as rw}from"@serenityjs/raknet";var dc=class Pd extends rw{static{s(this,"ItemReleaseInventoryTransaction")}type;slot;item;headPosition;constructor(e,r,o,n){super(),this.type=e,this.slot=r,this.item=o,this.headPosition=n}static read(e){let r=e.readVarInt(),o=e.readZigZag(),n=R.read(e),i=l.read(e);return new Pd(r,o,n,i)}static write(e,r){e.writeVarInt(r.type),e.writeZigZag(r.slot),R.write(e,r.item),l.write(e,r.headPosition)}};var pa=class oo extends iw{static{s(this,"InventoryTransaction")}type;actions;itemUse;itemUseOnEntity;itemRelease;constructor(e,r,o,n,i){super(),this.type=e,this.actions=r,this.itemUse=o??null,this.itemUseOnEntity=n??null,this.itemRelease=i??null}static read(e){let r=e.readVarInt(),o=e.readVarInt(),n=[];for(let i=0;i<o;i++){let a=$r.read(e);n.push(a)}switch(r){default:throw new Error(`Unknown/not implemented inventory transaction type: ${r}`);case gt.NormalTransaction:case gt.InventoryMismatch:return new oo(r,n);case gt.ItemUseTransaction:{let i=Xr.read(e);return new oo(r,n,i)}case gt.ItemUseOnEntityTransaction:{let i=fc.read(e);return new oo(r,n,null,i)}case gt.ItemReleaseTransaction:{let i=dc.read(e);return new oo(r,n,null,null,i)}}}static write(e,r){e.writeVarInt(r.type),e.writeVarInt(r.actions.length);for(let o of r.actions)$r.write(e,o);switch(r.type){default:throw new Error(`Unknown/not implemented inventory transaction type: ${r.type}`);case gt.NormalTransaction:case gt.InventoryMismatch:return;case gt.ItemUseTransaction:{Xr.write(e,r.itemUse);return}case gt.ItemUseOnEntityTransaction:{fc.write(e,r.itemUseOnEntity);return}case gt.ItemReleaseTransaction:{dc.write(e,r.itemRelease);return}}}};import{DataType as ow}from"@serenityjs/raknet";var xd=class extends ow{static{s(this,"EnumValues")}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++)r.push(e.readVarString());return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeVarString(o)}};import{DataType as nw}from"@serenityjs/raknet";var Rd=class extends nw{static{s(this,"ChainedSubcommandValues")}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++)r.push(e.readVarString());return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeVarString(o)}};import{DataType as aw}from"@serenityjs/raknet";var kd=class extends aw{static{s(this,"PostFixes")}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++)r.push(e.readVarString());return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeVarString(o)}};import{DataType as sw}from"@serenityjs/raknet";import{Endianness as Id}from"@serenityjs/binarystream";var Sd=class Bd extends sw{static{s(this,"ScoreEntry")}scoreboardId;objectiveName;score;identityType;actorUniqueId;customName;constructor(e,r,o,n,i,a){super(),this.scoreboardId=e,this.objectiveName=r,this.score=o,this.identityType=n,this.actorUniqueId=i,this.customName=a}static read(e,r,o){let n=[],i=e.readVarInt();for(let a=0;a<i;a++){let c=e.readVarLong(),d=e.readVarString(),m=e.readInt32(Id.Little),w=null,P=null,k=null;if(o===Tn.Change)switch(w=e.readByte(),w){case Ie.Player:case Ie.Entity:{P=e.readZigZong();break}case Ie.FakePlayer:{k=e.readVarString();break}}n.push(new Bd(c,d,m,w,P,k))}return n}static write(e,r,o,n){e.writeVarInt(r.length);for(let i of r)if(e.writeVarLong(i.scoreboardId),e.writeVarString(i.objectiveName),e.writeInt32(i.score,Id.Little),n===Tn.Change)switch(e.writeByte(i.identityType),i.identityType){case Ie.Player:case Ie.Entity:{e.writeZigZong(i.actorUniqueId);break}case Ie.FakePlayer:{e.writeVarString(i.customName);break}}}};import{DataType as cw}from"@serenityjs/raknet";var fa=class Od extends cw{static{s(this,"ScoreboardIdentity")}scoreboardId;entityUniqueId;constructor(e,r){super(),this.scoreboardId=e,this.entityUniqueId=r}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readVarLong(),a=e.readVarLong();r.push(new Od(i,a))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeVarLong(o.scoreboardId),e.writeVarLong(o.entityUniqueId)}};import{DataType as pw}from"@serenityjs/raknet";var Vd=class extends pw{static{s(this,"HudElementData")}element;constructor(e){super(),this.element=e}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readUint8();r.push(new this(i))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeUint8(o.element)}};import{Endianness as da}from"@serenityjs/binarystream";import{DataType as fw}from"@serenityjs/raknet";var la=class extends fw{static{s(this,"BossEventAdd")}title;percent;darkenScreen;color;overlay;constructor(e,r,o,n,i){super(),this.title=e,this.percent=r,this.darkenScreen=o,this.color=n,this.overlay=i}static read(e,r,o){if(o===N.Add){let n=e.readVarString();e.readVarString();let i=e.readFloat32(da.Little),a=e.readInt16(da.Little),c=e.readVarInt(),d=e.readVarInt();return new this(n,i,a,c,d)}else return null}static write(e,r,o,n){n===N.Add&&(e.writeVarString(r.title),e.writeVarString(r.title),e.writeFloat32(r.percent,da.Little),e.writeInt16(r.darkenScreen,da.Little),e.writeVarInt(r.color),e.writeVarInt(r.overlay))}};import{DataType as dw}from"@serenityjs/raknet";import{Endianness as ma}from"@serenityjs/binarystream";var ua=class extends dw{static{s(this,"BossEventUpdate")}playerUniqueId;percent;title;darkenScreen;color;overlay;constructor(e,r,o,n,i,a){super(),this.playerUniqueId=e,this.percent=r,this.title=o,this.darkenScreen=n,this.color=i,this.overlay=a}static read(e,r,o){switch(o){case N.Add:case N.Remove:return null;case N.PlayerAdded:case N.PlayerRemoved:{let n=e.readZigZong();return new this(n)}case N.UpdatePercent:{let n=e.readFloat32(ma.Little);return new this(null,n)}case N.UpdateName:{let n=e.readVarString();return e.readVarString(),new this(null,null,n)}case N.UpdateProperties:{let n=e.readInt16(ma.Little),i=e.readVarInt(),a=e.readVarInt();return new this(null,null,null,n,i,a)}case N.UpdateStyle:{let n=e.readVarInt(),i=e.readVarInt();return new this(null,null,null,null,n,i)}case N.Query:{let n=e.readZigZong();return new this(n)}}}static write(e,r,o,n){switch(n){case N.Add:case N.Remove:break;case N.PlayerAdded:case N.PlayerRemoved:{e.writeZigZong(r.playerUniqueId??BigInt(0));break}case N.UpdatePercent:{e.writeFloat32(r.percent??0,ma.Little);break}case N.UpdateName:{e.writeVarString(r.title??""),e.writeVarString(r.title??"");break}case N.UpdateProperties:{e.writeInt16(r.darkenScreen??0,ma.Little),e.writeVarInt(r.color??0),e.writeVarInt(r.overlay??0);break}case N.UpdateStyle:{e.writeVarInt(r.color??0),e.writeVarInt(r.overlay??0);break}case N.Query:{e.writeZigZong(r.playerUniqueId??BigInt(0));break}}}};import{DataType as lw}from"@serenityjs/raknet";var ha=class Cd extends lw{static{s(this,"AnimateEntity")}actorRuntimeId;constructor(e){super(),this.actorRuntimeId=e}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readZigZong(),a=new Cd(i);r.push(a)}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeZigZong(o.actorRuntimeId)}};import{DataType as mw}from"@serenityjs/raknet";var jd=class _d extends mw{static{s(this,"Emotes")}uuid;constructor(e){super(),this.uuid=e}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readUuid();r.push(new _d(i))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeUuid(o.uuid)}};import{DataType as uw}from"@serenityjs/raknet";var Ud=class Dd extends uw{static{s(this,"DeathParameters")}message;constructor(e){super(),this.message=e}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readVarString();r.push(new Dd(i))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeVarString(o.message)}};import{DataType as hw}from"@serenityjs/raknet";var Nd=class lc extends hw{static{s(this,"Color")}alpha;red;green;blue;constructor(e,r,o,n){super(),this.alpha=n&255,this.red=e&255,this.green=r&255,this.blue=o&255}static mix(e,r){let o=Math.round((e.alpha+r.alpha)/2),n=Math.round((e.red+r.red)/2),i=Math.round((e.green+r.green)/2),a=Math.round((e.blue+r.blue)/2);return new lc(o,n,i,a)}toInt(){return this.red|this.green<<8|this.blue<<16|this.alpha<<24}static fromInt(e){let r=e>>24&255,o=e>>16&255,n=e>>8&255,i=e&255;return new lc(r,o,n,i)}static write(e,r){e.writeUint32(r.toInt())}};import{DataType as gw}from"@serenityjs/raknet";import{Endianness as ga}from"@serenityjs/binarystream";import{CompoundTag as Zd}from"@serenityjs/nbt";var Nt=class Md extends gw{static{s(this,"DataItem")}identifier;type;value;constructor(e,r,o){super(),this.identifier=e,this.type=r,this.value=o}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readVarInt(),a=e.readVarInt(),c;switch(a){case Z.Byte:{c=e.readInt8();break}case Z.Short:{c=e.readInt16(ga.Little);break}case Z.Int:{c=e.readZigZag();break}case Z.Float:{c=e.readFloat32(ga.Little);break}case Z.String:{c=e.readVarString();break}case Z.CompoundTag:{c=Zd.read(e,!0);break}case Z.BlockPos:{c=b.read(e);break}case Z.Long:{c=e.readZigZong();break}case Z.Vec3:{c=l.read(e);break}}r.push(new Md(i,a,c))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)switch(e.writeVarInt(o.identifier),e.writeVarInt(o.type),o.type){case Z.Byte:{e.writeInt8(o.value);break}case Z.Short:{e.writeInt16(o.value,ga.Little);break}case Z.Int:{e.writeZigZag(o.value);break}case Z.Float:{e.writeFloat32(o.value,ga.Little);break}case Z.String:{e.writeVarString(o.value);break}case Z.CompoundTag:{Zd.write(e,o.value);break}case Z.BlockPos:{b.write(e,o.value);break}case Z.Long:{e.writeZigZong(o.value);break}case Z.Vec3:{l.write(e,o.value);break}}}};import{Endianness as zd}from"@serenityjs/binarystream";import{DataType as yw}from"@serenityjs/raknet";var bt=class Fd extends yw{static{s(this,"PropertySyncData")}floats;ints;constructor(e,r){super(),this.floats=e,this.ints=r}static read(e){let r=[],o=e.readVarInt();for(let a=0;a<o;a++){let c=e.readVarInt(),d=e.readZigZag();r.push({index:c,value:d})}let n=[],i=e.readVarInt();for(let a=0;a<i;a++){let c=e.readVarInt(),d=e.readFloat32(zd.Little);n.push({index:c,value:d})}return new Fd(n,r)}static write(e,r){e.writeVarInt(r.ints.length);for(let o of r.ints)e.writeVarInt(o.index),e.writeZigZag(o.value);e.writeVarInt(r.floats.length);for(let o of r.floats)e.writeVarInt(o.index),e.writeFloat32(o.value,zd.Little)}};import{DataType as ww}from"@serenityjs/raknet";var ya=class Td extends ww{static{s(this,"BookActions")}pageIndex;pageIndexB;textA;textB;xuid;constructor(e,r,o,n,i){super(),this.pageIndex=e,this.textA=r,this.textB=o,this.xuid=n,this.pageIndexB=i}static read(e,r,o){let n=0,i=0,a="",c="",d="";switch(o){case yt.ReplacePage:case yt.AddPage:{n=e.readByte(),a=e.readVarString(),c=e.readVarString();break}case yt.DeletePage:{n=e.readByte();break}case yt.SwapPage:{n=e.readByte(),i=e.readByte();break}case yt.Finalize:a=e.readVarString(),c=e.readVarString(),d=e.readVarString()}return new Td(n,a,c,d,i)}static write(e,r,o,n){switch(n){case yt.ReplacePage:case yt.AddPage:{e.writeByte(r.pageIndex),e.writeVarString(r.textA),e.writeVarString(r.textB);break}case yt.DeletePage:{e.writeByte(r.pageIndex);break}case yt.SwapPage:{e.writeByte(r.pageIndex),e.writeByte(r.pageIndexB);break}case yt.Finalize:{e.writeVarString(r.textA),e.writeVarString(r.textB),e.writeVarString(r.xuid);break}}}};import{DataType as bw}from"@serenityjs/raknet";import{Bool as Pw,Float32 as xw,Float64 as Rw,Uint32 as kw,Uint64 as Iw,VarString as Sw,ZigZag as Bw,ZigZong as Ow}from"@serenityjs/binarystream";var I=class qd extends bw{static{s(this,"Optional")}static read(e,r,o,n){let i=e.readBool(),a=s(m=>m instanceof m,"isDataValue");if(!i)return;let c,d=n;if(d){if(a(d)){c=d.read(e,r,o);return}c=d.read(e,r,o)}return c}static write(e,r,o,n,i){let a=r!=null,c=s(m=>m instanceof m,"isDataValue");if(e.writeBool(a),!a)return;let d=i??qd.getType(r);if(d){if(c(d)){d.write(e,r,o,n);return}d.write(e,r,o)}}static getType(e){switch(typeof e){case"string":return Sw;case"number":return e%1!=0?xw:e<0?Bw:kw;case"bigint":return e%1n!=0n?Rw:e<0n?Ow:Iw;case"boolean":return Pw}}};import{DataType as Vw}from"@serenityjs/raknet";import{Bool as wa,Endianness as et,Float32 as rt,Uint8 as Hd}from"@serenityjs/binarystream";var Wd=class Gd extends Vw{static{s(this,"CameraPreset")}name;parent;position;rotation;speed;snapToTarget;viewOffset;entityOffset;radius;listener;effects;constructor(e,r,o,n,i,a,c,d,m,w,P){super(),this.name=e,this.parent=r,this.position=o,this.rotation=n,this.speed=i,this.snapToTarget=a,this.viewOffset=c,this.entityOffset=d,this.radius=m,this.listener=w,this.effects=P}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++)r.push(new Gd(e.readVarString(),e.readVarString(),new l(I.read(e,et.Little,void 0,rt),I.read(e,et.Little,void 0,rt),I.read(e,et.Little,void 0,rt)),new _(I.read(e,et.Little,void 0,rt),I.read(e,et.Little,void 0,rt)),I.read(e,et.Little,void 0,rt),I.read(e,void 0,void 0,wa),I.read(e,void 0,void 0,_),I.read(e,void 0,void 0,l),I.read(e,et.Little,void 0,rt),I.read(e,void 0,void 0,Hd),I.read(e,void 0,void 0,wa)));return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeVarString(o.name),e.writeVarString(o.parent),I.write(e,o.position?.x,et.Little,null,rt),I.write(e,o.position?.y,et.Little,null,rt),I.write(e,o.position?.z,et.Little,null,rt),I.write(e,o.rotation?.x,et.Little,null,rt),I.write(e,o.rotation?.y,et.Little,null,rt),I.write(e,o.speed,et.Little,null,rt),I.write(e,o.snapToTarget,void 0,null,wa),I.write(e,o.viewOffset,void 0,null,_),I.write(e,o.entityOffset,void 0,null,l),I.write(e,o.radius,et.Little,null,rt),I.write(e,o.listener,void 0,null,Hd),I.write(e,o.effects,void 0,null,wa)}};import{DataType as _w}from"@serenityjs/raknet";import{Bool as Uw,Endianness as Dw}from"@serenityjs/binarystream";import{DataType as Cw}from"@serenityjs/raknet";import{Endianness as jw}from"@serenityjs/binarystream";var Ad=class extends Cw{static{s(this,"CameraSetEasing")}type;duration;constructor(e,r){super(),this.type=e,this.duration=r}static write(e,r){e.writeUint8(r.type),e.writeFloat32(r.duration,jw.Little)}};var Jd=class extends _w{static{s(this,"CameraSetInstruction")}runtimeId;easing;position;rotation;facing;constructor(e,r,o,n,i){super(),this.runtimeId=e,this.easing=r,this.position=o,this.rotation=n,this.facing=i}static write(e,r){e.writeInt32(r.runtimeId,Dw.Little),I.write(e,r.easing,void 0,null,Ad),I.write(e,r.position,void 0,null,l),I.write(e,r.rotation,void 0,null,_),I.write(e,r.facing,void 0,null,l),I.write(e,void 0,void 0,void 0,Uw)}};import{DataType as Mw}from"@serenityjs/raknet";import{Bool as zw}from"@serenityjs/binarystream";import{DataType as Zw}from"@serenityjs/raknet";import{DataType as Nw}from"@serenityjs/raknet";import{Endianness as mc}from"@serenityjs/binarystream";var Yd=class extends Nw{static{s(this,"CameraFadeDuration")}fadeIn;hold;fadeOut;constructor(e,r,o){super(),this.fadeIn=e,this.hold=r,this.fadeOut=o}static write(e,r){e.writeFloat32(r.fadeIn,mc.Little),e.writeFloat32(r.hold,mc.Little),e.writeFloat32(r.fadeOut,mc.Little)}};var Kd=class extends Zw{static{s(this,"CameraFadeInstruction")}duration;color;constructor(e,r){super(),this.duration=e,this.color=r}static write(e,r){I.write(e,r.duration,void 0,null,Yd),I.write(e,r.color,void 0,null,l)}};var ba=class extends Mw{static{s(this,"CameraInstructions")}Set;Clear;Fade;constructor(e,r,o){super(),this.Set=e,this.Clear=r,this.Fade=o}static write(e,r){I.write(e,r.Set,void 0,null,Jd),I.write(e,r.Clear,void 0,null,zw),I.write(e,r.Fade,void 0,null,Kd)}};import{DataType as Fw}from"@serenityjs/raknet";import{Endianness as Lr}from"@serenityjs/binarystream";var V=class extends Fw{static{s(this,"RecipeIngredient")}type;default;molang;itemTag;deferred;complexAlias;stackSize;constructor(e,r,o,n,i,a,c){super(),this.type=e,this.default=r,this.molang=o,this.itemTag=n,this.deferred=i,this.complexAlias=a,this.stackSize=c}static read(e){let r=e.readUint8(),o=null,n=null,i=null,a=null,c=null;switch(r){default:throw new Error(`Unknown ingredient type: ${r}, offset: ${e.offset}`);case tt.Invalid:break;case tt.Default:{let m=e.readInt16(Lr.Little),w=m===0?0:e.readInt16(Lr.Little);o={networkId:m,metadata:w};break}case tt.Molang:{let m=e.readVarString(),w=e.readUint8();n={molang:m,version:w};break}case tt.ItemTag:{i={tag:e.readVarString()};break}case tt.Deferred:{let m=e.readVarString(),w=e.readInt16(Lr.Little);a={name:m,metadata:w};break}case tt.ComplexAlias:{c={name:e.readVarString()};break}}let d=e.readZigZag();return new this(r,o,n,i,a,c,d)}static write(e,r){switch(e.writeUint8(r.type),r.type){default:throw new Error(`Unknown ingredient type: ${r.type}`);case tt.Invalid:break;case tt.Default:{let o=r.default;e.writeInt16(o.networkId,Lr.Little),o.networkId!==0&&e.writeInt16(o.metadata,Lr.Little);break}case tt.Molang:{let o=r.molang;e.writeVarString(o.molang),e.writeUint8(o.version);break}case tt.ItemTag:{let o=r.itemTag;e.writeVarString(o.tag);break}case tt.Deferred:{let o=r.deferred;e.writeVarString(o.name),e.writeInt16(o.metadata,Lr.Little);break}case tt.ComplexAlias:{let o=r.complexAlias;e.writeVarString(o.name);break}}e.writeZigZag(r.stackSize)}};import{DataType as Tw}from"@serenityjs/raknet";var Yt=class Qd extends Tw{static{s(this,"RecipeUnlockingRequirement")}context;ingredients;constructor(e,r){super(),this.context=e,this.ingredients=r}static read(e){let r=e.readByte();if(r!==Fn.None)return new Qd(r,null);let o=[],n=e.readVarInt();for(let i=0;i<n;i++){let a=V.read(e);o.push(a)}return new this(r,o)}static write(e,r){if(e.writeByte(r.context),r.context===Fn.None){let o=r.ingredients;e.writeVarInt(o.length);for(let n of o)V.write(e,n)}}};import{DataType as Kw}from"@serenityjs/raknet";import{DataType as qw}from"@serenityjs/raknet";var sr=class extends qw{static{s(this,"ShapelessRecipe")}identifier;ingredients;resultants;uuid;tag;priority;requirement;recipeNetorkId;constructor(e,r,o,n,i,a,c,d){super(),this.identifier=e,this.ingredients=r,this.resultants=o,this.uuid=n,this.tag=i,this.priority=a,this.requirement=c,this.recipeNetorkId=d}static read(e){let r=e.readVarString(),o=e.readVarInt(),n=[];for(let k=0;k<o;k++){let O=V.read(e);n.push(O)}let i=e.readVarInt(),a=[];for(let k=0;k<i;k++){let O=C.read(e);a.push(O)}let c=e.readUuid(),d=e.readVarString(),m=e.readZigZag(),w=Yt.read(e),P=e.readVarInt();return new this(r,n,a,c,d,m,w,P)}static write(e,r){e.writeVarString(r.identifier);let o=r.ingredients;e.writeVarInt(o.length);for(let i of o)V.write(e,i);let n=r.resultants;e.writeVarInt(n.length);for(let i of n)C.write(e,i);e.writeUuid(r.uuid),e.writeVarString(r.tag),e.writeZigZag(r.priority),Yt.write(e,r.requirement),e.writeVarInt(r.recipeNetorkId)}};import{DataType as Hw}from"@serenityjs/raknet";var uc=class extends Hw{static{s(this,"SmithingTransformRecipe")}identifier;templateIngredient;baseIngredient;additionalIngredient;resultant;tag;recipeNetworkId;constructor(e,r,o,n,i,a,c){super(),this.identifier=e,this.templateIngredient=r,this.baseIngredient=o,this.additionalIngredient=n,this.resultant=i,this.tag=a,this.recipeNetworkId=c}static read(e){let r=e.readVarString(),o=V.read(e),n=V.read(e),i=V.read(e),a=C.read(e),c=e.readVarString(),d=e.readVarInt();return new this(r,o,n,i,a,c,d)}static write(e,r){e.writeVarString(r.identifier),V.write(e,r.templateIngredient),V.write(e,r.baseIngredient),V.write(e,r.additionalIngredient),C.write(e,r.resultant),e.writeVarString(r.tag),e.writeVarInt(r.recipeNetworkId)}};import{DataType as Ww}from"@serenityjs/raknet";var hc=class extends Ww{static{s(this,"MultiRecipe")}uuid;networkId;constructor(e,r){super(),this.uuid=e,this.networkId=r}static read(e){let r=e.readUuid(),o=e.readVarInt();return new this(r,o)}static write(e,r){e.writeUuid(r.uuid),e.writeVarInt(r.networkId)}};import{DataType as Gw}from"@serenityjs/raknet";var gc=class extends Gw{static{s(this,"FurnanceAuxRecipe")}data;metadata;resultant;tag;constructor(e,r,o,n){super(),this.data=e,this.metadata=r,this.resultant=o,this.tag=n}static read(e){let r=e.readZigZag(),o=e.readZigZag(),n=C.read(e),i=e.readVarString();return new this(r,o,n,i)}static write(e,r){e.writeZigZag(r.data),e.writeZigZag(r.metadata),C.write(e,r.resultant),e.writeVarString(r.tag)}};import{DataType as Aw}from"@serenityjs/raknet";var yc=class $d extends Aw{static{s(this,"FurnanceRecipe")}data;resultant;tag;constructor(e,r,o){super(),this.data=e,this.resultant=r,this.tag=o}static read(e){let r=e.readZigZag(),o=C.read(e),n=e.readVarString();return new $d(r,o,n)}static write(e,r){e.writeZigZag(r.data),C.write(e,r.resultant),e.writeVarString(r.tag)}};import{DataType as Jw}from"@serenityjs/raknet";var no=class extends Jw{static{s(this,"ShapedRecipe")}identifier;width;height;ingredients;resultants;uuid;tag;priority;symmetrical;requirement;recipeNetorkId;constructor(e,r,o,n,i,a,c,d,m,w,P){super(),this.identifier=e,this.width=r,this.height=o,this.ingredients=n,this.resultants=i,this.uuid=a,this.tag=c,this.priority=d,this.symmetrical=m,this.requirement=w,this.recipeNetorkId=P}static read(e){let r=e.readVarString(),o=e.readZigZag(),n=e.readZigZag(),i=[];for(let S=0;S<o*n;S++){let F=V.read(e);i.push(F)}let a=[],c=e.readVarInt();for(let S=0;S<c;S++){let F=C.read(e);a.push(F)}let d=e.readUuid(),m=e.readVarString(),w=e.readZigZag(),P=e.readBool(),k=Yt.read(e),O=e.readVarInt();return new this(r,o,n,i,a,d,m,w,P,k,O)}static write(e,r){e.writeVarString(r.identifier),e.writeZigZag(r.width),e.writeZigZag(r.height);for(let o of r.ingredients)V.write(e,o);e.writeVarInt(r.resultants.length);for(let o of r.resultants)C.write(e,o);e.writeUuid(r.uuid),e.writeVarString(r.tag),e.writeZigZag(r.priority),e.writeBool(r.symmetrical),Yt.write(e,r.requirement),e.writeVarInt(r.recipeNetorkId)}};import{DataType as Yw}from"@serenityjs/raknet";var wc=class extends Yw{static{s(this,"SmithingTrimRecipe")}identifier;templateIngredient;baseIngredient;additionalIngredient;tag;recipeNetworkId;constructor(e,r,o,n,i,a){super(),this.identifier=e,this.templateIngredient=r,this.baseIngredient=o,this.additionalIngredient=n,this.tag=i,this.recipeNetworkId=a}static read(e){let r=e.readVarString(),o=V.read(e),n=V.read(e),i=V.read(e),a=e.readVarString(),c=e.readVarInt();return new this(r,o,n,i,a,c)}static write(e,r){e.writeVarString(r.identifier),V.write(e,r.templateIngredient),V.write(e,r.baseIngredient),V.write(e,r.additionalIngredient),e.writeVarString(r.tag),e.writeVarInt(r.recipeNetworkId)}};var Xd=class extends Kw{static{s(this,"CraftingDataEntry")}type;shapeless;shaped;furnace;furnaceAux;multi;userDataShapeless;shapelessChemistry;shapedChemistry;smithingTransform;smithingTrim;constructor(e,r,o,n,i,a,c,d,m,w,P){super(),this.type=e,this.shapeless=r,this.shaped=o,this.furnace=n,this.furnaceAux=i,this.multi=a,this.userDataShapeless=c,this.shapelessChemistry=d,this.shapedChemistry=m,this.smithingTransform=w,this.smithingTrim=P}static read(e){let r=e.readVarInt(),o=[];for(let n=0;n<r;n++){let i=e.readZigZag(),a=null,c=null,d=null,m=null,w=null,P=null,k=null,O=null,S=null,F=null;switch(i){default:throw new Error(`Unknown crafting data entry type: ${i}, index: ${n}, offset: ${e.offset}`);case M.ShapelessRecipe:{a=sr.read(e);break}case M.ShapedRecipe:{c=no.read(e);break}case M.FurnaceRecipe:{d=yc.read(e);break}case M.FurnaceAuxRecipe:{m=gc.read(e);break}case M.MultiRecipe:{w=hc.read(e);break}case M.UserDataShapelessRecipe:{P=sr.read(e);break}case M.ShapelessChemistryRecipe:{k=sr.read(e);break}case M.ShapedChemistryRecipe:{O=no.read(e);break}case M.SmithingTransformRecipe:{S=uc.read(e);break}case M.SmithingTrimRecipe:{F=wc.read(e);break}}let ht=new this(i,a,c,d,m,w,P,k,O,S,F);o.push(ht)}return o}static write(e,r){e.writeVarInt(r.length);for(let o of r)switch(e.writeZigZag(o.type),o.type){default:throw new Error(`Unknown crafting data entry type: ${o.type}`);case M.ShapelessRecipe:{sr.write(e,o.shapeless);break}case M.ShapedRecipe:{no.write(e,o.shaped);break}case M.FurnaceRecipe:{yc.write(e,o.furnace);break}case M.FurnaceAuxRecipe:{gc.write(e,o.furnaceAux);break}case M.MultiRecipe:{hc.write(e,o.multi);break}case M.UserDataShapelessRecipe:{sr.write(e,o.userDataShapeless);break}case M.ShapelessChemistryRecipe:{sr.write(e,o.shapelessChemistry);break}case M.ShapedChemistryRecipe:{no.write(e,o.shapedChemistry);break}case M.SmithingTransformRecipe:{uc.write(e,o.smithingTransform);break}case M.SmithingTrimRecipe:{wc.write(e,o.smithingTrim);break}}}};import{DataType as Qw}from"@serenityjs/raknet";var Ld=class extends Qw{static{s(this,"PotionMixDataEntry")}inputNetworkId;inputMetadata;ingredientNetworkId;ingredientMetadata;resultantNetworkId;resultantMetadata;constructor(e,r,o,n,i,a){super(),this.inputNetworkId=e,this.inputMetadata=r,this.ingredientNetworkId=o,this.ingredientMetadata=n,this.resultantNetworkId=i,this.resultantMetadata=a}static read(e){let r=e.readVarInt(),o=[];for(let n=0;n<r;n++){let i=e.readZigZag(),a=e.readZigZag(),c=e.readZigZag(),d=e.readZigZag(),m=e.readZigZag(),w=e.readZigZag();o.push(new this(i,a,c,d,m,w))}return o}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeZigZag(o.inputNetworkId),e.writeZigZag(o.inputMetadata),e.writeZigZag(o.ingredientNetworkId),e.writeZigZag(o.ingredientMetadata),e.writeZigZag(o.resultantNetworkId),e.writeZigZag(o.resultantMetadata)}};import{DataType as $w}from"@serenityjs/raknet";var Ed=class extends $w{static{s(this,"ContainerMixDataEntry")}inputNetworkId;reactantNetworkId;resultantNetworkId;constructor(e,r,o){super(),this.inputNetworkId=e,this.reactantNetworkId=r,this.resultantNetworkId=o}static read(e){let r=new Array,o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readZigZag(),a=e.readZigZag(),c=e.readZigZag(),d=new this(i,a,c);r.push(d)}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeZigZag(o.inputNetworkId),e.writeZigZag(o.reactantNetworkId),e.writeZigZag(o.resultantNetworkId)}};import{DataType as Xw}from"@serenityjs/raknet";var vd=class extends Xw{static{s(this,"MaterialReducerDataEntry")}inputNetworkId;resultantNetworkId;resultantStackSize;constructor(e,r,o){super(),this.inputNetworkId=e,this.resultantNetworkId=r,this.resultantStackSize=o}static read(e){let r=new Array,o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readZigZag(),a=e.readZigZag(),c=e.readZigZag(),d=new this(i,a,c);r.push(d)}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeZigZag(o.inputNetworkId),e.writeZigZag(o.resultantNetworkId),e.writeZigZag(o.resultantStackSize)}};import{DataType as Lw}from"@serenityjs/raknet";var NZ=class extends Lw{static{s(this,"UserDataShapelessRecipe")}identifier;ingredients;resultants;uuid;tag;priority;requirement;constructor(e,r,o,n,i,a,c){super(),this.identifier=e,this.ingredients=r,this.resultants=o,this.uuid=n,this.tag=i,this.priority=a,this.requirement=c}static read(e){let r=e.readVarString(),o=e.readVarInt(),n=[];for(let P=0;P<o;P++){let k=V.read(e);n.push(k)}let i=e.readVarInt(),a=[];for(let P=0;P<i;P++){let k=C.read(e);a.push(k)}let c=e.readUuid(),d=e.readVarString(),m=e.readZigZag(),w=Yt.read(e);return new this(r,n,a,c,d,m,w)}static write(e,r){e.writeVarString(r.identifier);let o=r.ingredients;e.writeVarInt(o.length);for(let i of o)V.write(e,i);let n=r.resultants;e.writeVarInt(n.length);for(let i of n)C.write(e,i);e.writeUuid(r.uuid),e.writeVarString(r.tag),e.writeZigZag(r.priority),Yt.write(e,r.requirement)}};import{DataType as vw}from"@serenityjs/raknet";import{DataType as Ew}from"@serenityjs/raknet";var bc=class tl extends Ew{static{s(this,"StructureSettings")}structurePalletName;ignoreEntities;ignoreBlocks;allowNonTicking;size;offset;lastEdit;rotation;mirror;animationMode;animationSeconds;integrityValue;integritySeed;rotationPivot;constructor(e,r,o,n,i,a,c,d,m,w,P,k,O,S){super(),this.structurePalletName=e,this.ignoreEntities=r,this.ignoreBlocks=o,this.allowNonTicking=n,this.size=i,this.offset=a,this.lastEdit=c,this.rotation=d,this.mirror=m,this.animationMode=w,this.animationSeconds=P,this.integrityValue=k,this.integritySeed=O,this.rotationPivot=S}static write(e,r){e.writeVarString(r.structurePalletName),e.writeBool(r.ignoreBlocks),e.writeBool(r.ignoreEntities),e.writeBool(r.allowNonTicking),b.write(e,r.size),b.write(e,r.offset),e.writeZigZong(r.lastEdit),e.writeByte(r.animationMode),e.writeFloat32(r.animationSeconds),e.writeFloat32(r.integrityValue),e.writeUint32(r.integritySeed),l.write(e,r.rotationPivot)}static read(e){return new tl(e.readVarString(),e.readBool(),e.readBool(),e.readBool(),b.read(e),b.read(e),e.readZigZong(),e.readByte(),e.readByte(),e.readByte(),e.readFloat32(),e.readFloat32(),e.readUint32(),l.read(e))}};var Pa=class el extends vw{static{s(this,"StructureEditorData")}structureName;dataField;includePlayers;showBoundingBox;blockType;structureSetting;redstoneSaveMode;constructor(e,r,o,n,i,a,c){super(),this.structureName=e,this.dataField=r,this.includePlayers=o,this.showBoundingBox=n,this.blockType=i,this.structureSetting=a,this.redstoneSaveMode=c}static write(e,r){e.writeVarString(r.structureName),e.writeVarString(r.dataField),e.writeBool(r.includePlayers),e.writeBool(r.showBoundingBox),e.writeVarInt(r.blockType),bc.write(e,r.structureSetting),e.writeVarInt(r.redstoneSaveMode)}static read(e){return new el(e.readVarString(),e.readVarString(),e.readBool(),e.readBool(),e.readVarInt(),bc.read(e),e.readVarInt())}};import{DataType as eb}from"@serenityjs/raknet";import{DataType as tb}from"@serenityjs/raknet";var Pc=class rl extends tb{static{s(this,"DimensionDefinition")}identifier;heightMax;heightMin;generatorType;constructor(e,r,o,n){super(),this.identifier=e,this.heightMax=r,this.heightMin=o,this.generatorType=n}static write(e,r){e.writeVarString(r.identifier),e.writeVarInt(r.heightMax),e.writeVarInt(r.heightMin),e.writeVarInt(r.generatorType)}static read(e){return new rl(e.readVarString(),e.readVarInt(),e.readVarInt(),e.readVarInt())}};var xa=class il extends eb{static{s(this,"DimensionDefinitionGroup")}definitions;constructor(e){super(),this.definitions=e}static write(e,r){e.writeVarInt(r.definitions.length);for(let o of r.definitions)Pc.write(e,o)}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++)r.push(Pc.read(e));return new il(r)}};import{DataType as rb}from"@serenityjs/raknet";var ol=class extends rb{static{s(this,"ItemStackActionTakePlace")}amount;source;destination;constructor(e,r,o){super(),this.amount=e,this.source=r,this.destination=o}static read(e){let r=e.readUint8(),o=K.read(e),n=K.read(e);return new this(r,o,n)}static write(e,r){e.writeUint8(r.amount),K.write(e,r.source),K.write(e,r.destination)}};import{DataType as ib}from"@serenityjs/raknet";var nl=class extends ib{static{s(this,"ItemStackRequestActionSwap")}source;destination;constructor(e,r){super(),this.source=e,this.destination=r}static read(e){let r=K.read(e),o=K.read(e);return new this(r,o)}static write(e,r){K.write(e,r.source),K.write(e,r.destination)}};import{DataType as ob}from"@serenityjs/raknet";var al=class extends ob{static{s(this,"ItemStackRequestActionDrop")}amount;source;randomly;constructor(e,r,o){super(),this.amount=e,this.source=r,this.randomly=o}static read(e){let r=e.readUint8(),o=K.read(e),n=e.readBool();return new this(r,o,n)}static write(e,r){e.writeUint8(r.amount),K.write(e,r.source),e.writeBool(r.randomly)}};import{DataType as nb}from"@serenityjs/raknet";var sl=class extends nb{static{s(this,"ItemStackRequestActionDestroyConsume")}amount;source;constructor(e,r){super(),this.amount=e,this.source=r}static read(e){let r=e.readUint8(),o=K.read(e);return new this(r,o)}static write(e,r){e.writeUint8(r.amount),K.write(e,r.source)}};import{DataType as ab}from"@serenityjs/raknet";var cl=class extends ab{static{s(this,"ItemStackRequestActionCreate")}slot;constructor(e){super(),this.slot=e}static read(e){let r=e.readUint8();return new this(r)}static write(e,r){e.writeUint8(r.slot)}};import{DataType as sb}from"@serenityjs/raknet";var pl=class extends sb{static{s(this,"ItemStackRequestActionBeanconPayment")}primaryEffect;secondaryEffect;constructor(e,r){super(),this.primaryEffect=e,this.secondaryEffect=r}static read(e){let r=e.readZigZag(),o=e.readZigZag();return new this(r,o)}static write(e,r){e.writeZigZag(r.primaryEffect),e.writeZigZag(r.secondaryEffect)}};import{DataType as cb}from"@serenityjs/raknet";var fl=class extends cb{static{s(this,"ItemStackRequestActionMineBlock")}slot;predictedDurability;networkId;constructor(e,r,o){super(),this.slot=e,this.predictedDurability=r,this.networkId=o}static read(e){let r=e.readZigZag(),o=e.readZigZag(),n=e.readZigZag();return new this(r,o,n)}static write(e,r){e.writeZigZag(r.slot),e.writeZigZag(r.predictedDurability),e.writeZigZag(r.networkId)}};import{DataType as pb}from"@serenityjs/raknet";var dl=class extends pb{static{s(this,"ItemStackRequestActionCraftRecipe")}recipeId;amount;constructor(e,r){super(),this.recipeId=e,this.amount=r}static read(e){let r=e.readVarInt(),o=e.readUint8();return new this(r,o)}static write(e,r){e.writeVarInt(r.recipeId),e.writeUint8(r.amount)}};import{DataType as fb}from"@serenityjs/raknet";var ll=class extends fb{static{s(this,"ItemStackRequestActionCraftRecipeAuto")}recipeId;timesCrafted;ingredients;constructor(e,r,o){super(),this.recipeId=e,this.timesCrafted=r,this.ingredients=o}static read(e){let r=e.readVarInt(),o=e.readUint8(),n=e.readVarInt(),i=[];for(let a=0;a<n;a++)i[a]=V.read(e);return new this(r,o,i)}static write(e,r){e.writeVarInt(r.recipeId),e.writeUint8(r.timesCrafted),e.writeVarInt(r.ingredients.length);for(let o of r.ingredients)V.write(e,o)}};import{DataType as db}from"@serenityjs/raknet";var ml=class extends db{static{s(this,"ItemStackRequestActionCraftCreative")}creativeIndex;amount;constructor(e,r){super(),this.creativeIndex=e,this.amount=r}static read(e){let r=e.readVarInt(),o=e.readUint8();return new this(r,o)}static write(e,r){e.writeVarInt(r.creativeIndex),e.writeUint8(r.amount)}};import{DataType as lb}from"@serenityjs/raknet";import{Endianness as ul}from"@serenityjs/binarystream";var hl=class extends lb{static{s(this,"ItemStackRequestActionOptional")}recipeId;filteredStringIndex;constructor(e,r){super(),this.recipeId=e,this.filteredStringIndex=r}static read(e){let r=e.readVarInt(),o=e.readUint32(ul.Little);return new this(r,o)}static write(e,r){e.writeVarInt(r.recipeId),e.writeUint32(r.filteredStringIndex,ul.Little)}};import{DataType as mb}from"@serenityjs/raknet";var L4=class extends mb{static{s(this,"ItemStackRequestActionCraftGrindstoneRequest")}recipeId;cost;amount;constructor(e,r,o){super(),this.recipeId=e,this.cost=r,this.amount=o}static read(e){let r=e.readVarInt(),o=e.readVarInt(),n=e.readUint8();return new this(r,o,n)}static write(e,r){e.writeVarInt(r.recipeId),e.writeVarInt(r.cost),e.writeUint8(r.amount)}};import{DataType as ub}from"@serenityjs/raknet";var r6=class extends ub{static{s(this,"ItemStackRequestActionCraftLoomRequest")}pattern;constructor(e){super(),this.pattern=e}static read(e){let r=e.readVarString();return new this(r)}static write(e,r){e.writeVarString(r.pattern)}};import{DataType as hb}from"@serenityjs/raknet";var gl=class extends hb{static{s(this,"ItemStackRequestActionResultsDeprecated")}resultants;amount;constructor(e,r){super(),this.resultants=e,this.amount=r}static read(e){let r=e.readVarInt(),o=[];for(let i=0;i<r;i++)o[i]=C.read(e);let n=e.readUint8();return new this(o,n)}static write(e,r){e.writeVarInt(r.resultants.length);for(let o of r.resultants)C.write(e,o);e.writeUint8(r.amount)}};import{DataType as gb}from"@serenityjs/raknet";var Er=class extends gb{static{s(this,"ItemStackRequestAction")}action;takeOrPlace;swap;drop;destroyOrConsume;create;beaconPayment;mineBlock;craftRecipe;craftRecipeAuto;craftCreative;optional;craftGrindstoneRequest;craftLoomRequest;resultsDeprecated;constructor(e,r,o,n,i,a,c,d,m,w,P,k,O,S,F){super(),this.action=e,this.takeOrPlace=r??null,this.swap=o??null,this.drop=n??null,this.destroyOrConsume=i??null,this.create=a??null,this.beaconPayment=c??null,this.mineBlock=d??null,this.craftRecipe=m??null,this.craftRecipeAuto=w??null,this.craftCreative=P??null,this.optional=k??null,this.craftGrindstoneRequest=O??null,this.craftLoomRequest=S??null,this.resultsDeprecated=F??null}static read(e){let r=e.readUint8();switch(r){default:return new this(r);case W.Take:case W.Place:case W.TakeFromItemContainer_DEPRECATED:case W.PlaceInItemContainer_DEPRECATED:return new this(r,ol.read(e));case W.Swap:return new this(r,null,nl.read(e));case W.Drop:return new this(r,null,null,al.read(e));case W.Destroy:case W.Consume:return new this(r,null,null,null,sl.read(e));case W.Create:return new this(r,null,null,null,null,cl.read(e));case W.ScreenBeaconPayment:return new this(r,null,null,null,null,null,pl.read(e));case W.ScreenHUDMineBlock:return new this(r,null,null,null,null,null,null,fl.read(e));case W.CraftRecipe:return new this(r,null,null,null,null,null,null,null,dl.read(e));case W.CraftRecipeAuto:return new this(r,null,null,null,null,null,null,null,null,ll.read(e));case W.CraftCreative:return new this(r,null,null,null,null,null,null,null,null,null,ml.read(e));case W.CraftRecipeOptional:return new this(r,null,null,null,null,null,null,null,null,null,null,hl.read(e));case W.CraftResults_DEPRECATEDASKTYLAING:return new this(r,null,null,null,null,null,null,null,null,null,null,null,null,null,gl.read(e))}}};import{DataType as yb}from"@serenityjs/raknet";import{Endianness as yl}from"@serenityjs/binarystream";var wl=class bl extends yb{static{s(this,"ItemStackRequest")}clientRequestId;actions;filterStrings;stringsFilterOrigin;constructor(e,r,o,n){super(),this.clientRequestId=e,this.actions=r,this.filterStrings=o,this.stringsFilterOrigin=n}static read(e){let r=new Array,o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readZigZag(),a=new Array,c=e.readVarInt();for(let P=0;P<c;P++)a.push(Er.read(e));let d=new Array,m=e.readVarInt();for(let P=0;P<m;P++)d.push(e.readVarString());let w=e.readInt32(yl.Little);r.push(new bl(i,a,d,w))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r){e.writeZigZag(o.clientRequestId),e.writeVarInt(o.actions.length);for(let n of o.actions)Er.write(e,n);e.writeVarInt(o.filterStrings.length);for(let n of o.filterStrings)e.writeVarString(n);e.writeInt32(o.stringsFilterOrigin,yl.Little)}}};import{DataType as wb}from"@serenityjs/raknet";var Ra=class Pl extends wb{static{s(this,"DisconnectMessage")}message;filtered;constructor(e,r){super(),this.message=e??null,this.filtered=r??null}static read(e,r,o){if(o)return new Pl;let n=e.readVarString(),i=e.readVarString();return new this(n,i)}static write(e,r,o,n){n||(e.writeVarString(r.message??"Disconnected from server."),e.writeVarString(r.filtered??"Disconnected from server."))}};import{DataType as Pb}from"@serenityjs/raknet";import{Endianness as Rl}from"@serenityjs/binarystream";import{DataType as bb}from"@serenityjs/raknet";var cr=class xl extends bb{static{s(this,"Enchant")}id;level;constructor(e,r){super(),this.id=e,this.level=r}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readByte(),a=e.readByte();r.push(new xl(i,a))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeByte(o.id),e.writeByte(o.level)}};var kl=class Il extends Pb{static{s(this,"EnchantOption")}cost;slotFlags;equipEnchantments;heldEnchantments;selfEnchantments;name;optionId;constructor(e,r,o,n,i,a,c){super(),this.cost=e,this.slotFlags=r,this.equipEnchantments=o,this.heldEnchantments=n,this.selfEnchantments=i,this.name=a,this.optionId=c}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readVarInt(),a=e.readInt32(Rl.Little),c=cr.read(e),d=cr.read(e),m=cr.read(e),w=e.readVarString(),P=e.readUint32();r.push(new Il(i,a,c,d,m,w,P))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeVarInt(o.cost),e.writeInt32(o.slotFlags,Rl.Little),cr.write(e,o.equipEnchantments),cr.write(e,o.heldEnchantments),cr.write(e,o.selfEnchantments),e.writeVarString(o.name),e.writeZigZag(o.optionId)}};import{DataType as xb}from"@serenityjs/raknet";var Sl=class Bl extends xb{static{s(this,"ClientPredictedVehicle")}vehicleRotation;actorUniqueId;constructor(e,r){super(),this.vehicleRotation=e,this.actorUniqueId=r}static read(e,r,o){if(!o.hasFlag(X.IsInClientPredictedVehicle))return null;let n=_.read(e),i=e.readZigZag();return new Bl(n,i)}static write(e,r,o,n){n.hasFlag(X.IsInClientPredictedVehicle)&&(_.write(e,r.vehicleRotation),e.writeZigZag(r.actorUniqueId))}};import{DataType as Rb}from"@serenityjs/raknet";var xc=class extends Rb{static{s(this,"InputTransaction")}legacyTransaction;actions;trasactionUseItem;constructor(e,r,o){super(),this.legacyTransaction=e,this.actions=r,this.trasactionUseItem=o}static write(e,r){ar.write(e,r.legacyTransaction),e.writeVarInt(r.actions.length);for(let o of r.actions)$r.write(e,o);Xr.write(e,r.trasactionUseItem)}static read(e){let r=ar.read(e),o=e.readVarInt(),n=[];for(let a=0;a<o;a++){let c=$r.read(e);n.push(c)}let i=Xr.read(e);return new this(r,n,i)}};import{DataType as kb}from"@serenityjs/raknet";var vr=class extends kb{static{s(this,"PlayerAuthInputData")}flags;constructor(e){super(),this.flags=e}setFlag(e,r){let o=1n<<BigInt(e);r?this.flags|=o:this.flags&=~o}hasFlag(e){let r=1n<<BigInt(e);return(this.flags&r)!==0n}getFlags(){let e=[],r=Object.values(X).filter(o=>typeof o=="number");for(let o of r)this.hasFlag(o)&&e.push(o);return e}static write(e,r){e.writeVarLong(r.flags)}static read(e){let r=e.readVarLong();return new this(r)}};import{DataType as Ib}from"@serenityjs/raknet";var pM=class Ol extends Ib{static{s(this,"BlockAction")}action;position;face;constructor(e,r,o){super(),this.action=e,this.position=r,this.face=o}static write(e,r){if(e.writeZigZag(r.action),r.action==rr.StartDestroyBlock||r.action==rr.AbortDestroyBlock||r.action==rr.CrackBlock||r.action==rr.PredictDestroyBlock||r.action==rr.ContinueDestroyBlock){if(r.position===void 0||r.position===null)throw new Error("Position is not defined but action is startBreak or abortBreak or crackBreak or predictBreak or continueBreak");if(r.face===void 0||r.face===null)throw new Error("Face is not defined but action is startBreak or abortBreak or crackBreak or predictBreak or continueBreak");e.writeZigZag(r.position.x),e.writeZigZag(r.position.y),e.writeZigZag(r.position.z),e.writeZigZag(r.face)}else e.writeVarInt(0),e.writeZigZag(0),e.writeZigZag(0),e.writeZigZag(0)}static read(e){let r=e.readZigZag(),o=new l(e.readZigZag(),e.readZigZag(),e.readZigZag()),n=e.readZigZag();return new Ol(r,o,n)}};import{DataType as Sb}from"@serenityjs/raknet";var ka=class Vl extends Sb{static{s(this,"ActorLink")}riddenEntityUnique;riderEntityUnique;type;immediate;riderInitiated;vehicleAngularVelocity;constructor(e,r,o,n,i,a){super(),this.riddenEntityUnique=e,this.riderEntityUnique=r,this.type=o,this.immediate=n,this.riderInitiated=i,this.vehicleAngularVelocity=a}static write(e,r){e.writeVarLong(r.riddenEntityUnique),e.writeVarLong(r.riderEntityUnique),e.writeByte(r.type),e.writeBool(r.immediate),e.writeBool(r.riderInitiated),e.writeFloat32(r.vehicleAngularVelocity)}static read(e){return new Vl(e.readVarLong(),e.readVarLong(),e.readByte(),e.readBool(),e.readBool(),e.readFloat32())}};var Rc=class extends b{static{s(this,"SignedBlockPosition")}static read(e){let r=e.readZigZag(),o=e.readZigZag(),n=e.readZigZag();return new this(r,o,n)}static write(e,r){e.writeZigZag(r.x),e.writeZigZag(r.y),e.writeZigZag(r.z)}};import{DataType as Ob}from"@serenityjs/raknet";import{DataType as Bb}from"@serenityjs/raknet";var kc=class extends Bb{static{s(this,"PlayerBlockActionData")}type;position;face;constructor(e,r,o){super(),this.type=e,this.position=r,this.face=o}static read(e){let r=e.readZigZag(),o=Rc.read(e),n=e.readZigZag();return new this(r,o,n)}static write(e,r){e.writeZigZag(r.type),Rc.write(e,r.position),e.writeZigZag(r.face)}};var Cl=class extends Ob{static{s(this,"PlayerBlockActions")}actions;constructor(e){super(),this.actions=e}static read(e,r,o){if(!o.hasFlag(X.PerformBlockActions))return null;let n=e.readZigZag(),i=[];for(let a=0;a<n;a++)i.push(kc.read(e));return new this(i)}static write(e,r,o,n){if(n.hasFlag(X.PerformBlockActions)){e.writeZigZag(r.actions.length);for(let i of r.actions)kc.write(e,i)}}};import{DataType as Vb}from"@serenityjs/raknet";var Q=class extends Vb{static{s(this,"PlayerInputTick")}static read(e){return e.readVarLong()}static write(e,r){e.writeVarLong(r)}};import{DataType as Cb}from"@serenityjs/raknet";var Ia=class extends Cb{static{s(this,"RotationByte")}static read(e){return e.readInt8()*(360/256)}static write(e,r){e.writeInt8(r/(360/256))}};import{DataType as jb}from"@serenityjs/raknet";var Sa=class jl extends jb{static{s(this,"Fogs")}fogs;constructor(e=[]){super(),this.fogs=e}static read(e){let r=new jl,o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readVarString();r.fogs.push(i)}return r}static write(e,r){e.writeVarInt(r.fogs.length);for(let o of r.fogs)e.writeVarString(o)}};import{BinaryStream as _l}from"@serenityjs/binarystream";import{DataType as _b}from"@serenityjs/raknet";import{CompoundTag as Ul}from"@serenityjs/nbt";var Ba=class Dl extends _b{static{s(this,"NbtLoop")}data;constructor(e){super(),this.data=e}static read(e){try{let r=e.readRemainingBuffer(),o=new _l(Buffer.concat([Buffer.from([10,0]),r,Buffer.from([0])])),n=Ul.read(o,!0);return new Dl(n)}catch(r){throw new Error(`Error reading NbtLoop: ${r.message}`)}}static write(e,r){if(r.data===null){e.writeBuffer(Buffer.from([0]));return}try{let o=new _l;Ul.write(o,r.data,!0);let n=o.getBuffer(),i=n.slice(2,n.length-1);e.writeBuffer(i)}catch(o){throw new Error(`Error writing NbtLoop: ${o.message}`)}}};import{DataType as Ub}from"@serenityjs/raknet";var Oa=class Nl extends Ub{static{s(this,"Patterns")}patterns;constructor(e=[]){super(),this.patterns=e}static read(e){let r=new Nl,o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readVarString(),a=e.readVarString();r.patterns.push({item_name:i,pattern:a})}return r}static write(e,r){e.writeVarInt(r.patterns.length);for(let o of r.patterns)e.writeVarString(o.item_name),e.writeVarString(o.pattern)}};import{DataType as Db}from"@serenityjs/raknet";var Va=class Zl extends Db{static{s(this,"Materials")}materials;constructor(e=[]){super(),this.materials=e}static read(e){let r=new Zl,o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readVarString(),a=e.readVarString(),c=e.readVarString();r.materials.push({material:i,color:a,item_name:c})}return r}static write(e,r){e.writeVarInt(r.materials.length);for(let o of r.materials)e.writeVarString(o.material),e.writeVarString(o.color),e.writeVarString(o.item_name)}};import{Endianness as Ml}from"@serenityjs/binarystream";import{DataType as Nb}from"@serenityjs/raknet";var Ca=class zl extends Nb{static{s(this,"UnlockedRecipesEntry")}type;recipes=[];constructor(e,r){super(),this.type=e,this.recipes=r}static write(e,r){e.writeInt32(r.type,Ml.Little),e.writeVarInt(r.recipes.length);for(let o of r.recipes)e.writeVarString(o)}static read(e){let r=[],o=e.readInt32(Ml.Little),n=e.readVarInt();for(let i=0;i<n;i++)r.push(e.readVarString());return new zl(o,r)}};import{DataType as Zb}from"@serenityjs/raknet";import{Endianness as Mb}from"@serenityjs/binarystream";var Fl=class extends Zb{static{s(this,"PlayerAuthItemStackRequest")}clientRequestId;actions;filterStrings;stringsFilterOrigin;constructor(e,r,o,n){super(),this.clientRequestId=e,this.actions=r,this.filterStrings=o,this.stringsFilterOrigin=n}static read(e,r,o){if(!o.hasFlag(X.PerformItemStackRequest))return null;let n=e.readZigZag(),i=new Array,a=e.readVarInt();for(let w=0;w<a;w++)i.push(Er.read(e));let c=new Array,d=e.readVarInt();for(let w=0;w<d;w++)c.push(e.readVarString());let m=e.readInt32(Mb.Little);return new this(n,i,c,m)}static write(e,r,o,n){if(n.hasFlag(X.PerformItemStackRequest)){e.writeZigZag(r.clientRequestId),e.writeVarInt(r.actions.length);for(let i of r.actions)Er.write(e,i);e.writeVarInt(r.filterStrings.length)}}};import{DataType as zb}from"@serenityjs/raknet";var Tl=class extends zb{static{s(this,"CommandBlockActorRuntimeId")}static read(e,r,o){return o===!0?null:e.readVarLong()}static write(e,r,o,n){n!==!1&&e.writeVarLong(r)}};import{DataType as Fb}from"@serenityjs/raknet";var ql=class extends Fb{static{s(this,"CommandBlockSettings")}position;commandMode;redstoneMode;conditionalMode;constructor(e,r,o,n){super(),this.position=e,this.commandMode=r,this.redstoneMode=o,this.conditionalMode=n}static read(e,r,o){if(o===!1)return null;let n=b.read(e),i=e.readVarInt(),a=e.readBool(),c=e.readBool();return new this(n,i,a,c)}static write(e,r,o,n){n!==!1&&(b.write(e,r.position),e.writeVarInt(r.commandMode),e.writeBool(r.redstoneMode),e.writeBool(r.conditionalMode))}};import{DataType as Tb}from"@serenityjs/raknet";var ti=class extends Tb{static{s(this,"MapTextureUpdateBits")}static write(e,r,o,n){if(n&2){if(Array.isArray(r)){e.writeVarInt(r.length);for(let i of r)e.writeVarInt(i);return}e.writeZigZag(r)}}};import{DataType as Wl}from"@serenityjs/raknet";import{DataType as qb}from"@serenityjs/raknet";var Ic=class Hl extends qb{static{s(this,"MapTrackedItem")}type;uniqueId;position;constructor(e,r,o){super(),this.type=e,this.uniqueId=r,this.position=o}static write(e,r){e.writeUint8(r.type),r.type==0?e.writeZigZong(r.uniqueId):r.type==1&&b.write(e,r.position)}static read(e){let r=e.readUint8(),o,n;return r==0?o=e.readZigZong():r==1&&(n=b.read(e)),new Hl(r,o,n)}};var Gl=class extends Wl{static{s(this,"MapDecorationBits")}static write(e,r,o,n){if(n&4){e.writeVarInt(r.length);for(let i of r)Sc.write(e,i)}}static read(e,r,o){if(!(o&4))return null;let n=e.readVarInt(),i=[];for(let a=0;a<n;a++)i.push(Sc.read(e));return i}},Al=class extends Wl{static{s(this,"MapTrackedItems")}static write(e,r,o,n){if(n&4){e.writeVarInt(r.length);for(let i of r)Ic.write(e,i)}}static read(e,r,o){if(!(o&4))return null;let n=e.readVarInt(),i=[];for(let a=0;a<n;a++)i.push(Ic.read(e));return i}};import{DataType as Hb}from"@serenityjs/raknet";var Jl=class extends Hb{static{s(this,"MapCreationBits")}static write(e,r,o,n){if(n&8){e.writeVarInt(r.length);for(let i of r)e.writeZigZong(i)}}static read(e,r,o){if(!(o&8))return null;let n=e.readVarInt(),i=[];for(let a=0;a<n;a++)i.push(e.readZigZong());return i}};import{DataType as Wb}from"@serenityjs/raknet";var Sc=class Yl extends Wb{static{s(this,"MapDecoration")}type;rotation;x;y;label;color;constructor(e,r,o,n,i,a){super(),this.type=e,this.rotation=r,this.x=o,this.y=n,this.label=i,this.color=a}static write(e,r){e.writeByte(r.type),e.writeByte(r.rotation),e.writeByte(r.x),e.writeByte(r.y),e.writeVarString(r.label),e.writeVarInt(r.color)}static read(e){return new Yl(e.readByte(),e.readByte(),e.readByte(),e.readByte(),e.readVarString(),e.readVarInt())}};import{DataType as Gb}from"@serenityjs/raknet";var Kl=class extends Gb{static{s(this,"MapScale")}static write(e,r,o,n){n&14&&e.writeByte(r)}static read(e,r,o){return o&14?e.readByte():null}static checkFlag(e,r){return(e&r)===r}};import{DataType as Ab}from"@serenityjs/raknet";var Ql=class $l extends Ab{static{s(this,"MapPixel")}x;y;color;constructor(e,r,o){super(),this.x=e,this.y=r,this.color=o}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeInt32(o.color.toInt()),e.writeUint16(o.x+o.y*128)}static read(e){let r=e.readVarInt(),o=[];for(let n=0;n<r;n++){let i=e.readInt32(),a=e.readUint16(),c=a%128,d=a/128;o.push(new $l(c,d,Nd.fromInt(i)))}return o}};import{CompoundTag as Bc,ListTag as Jb,TagType as Yb}from"@serenityjs/nbt";import{DataType as Kb}from"@serenityjs/raknet";var Xl=class extends Kb{static{s(this,"TradeOffer")}buyA;sell;buyB;maxUses;experienceReward;tier;traderExperience;uses;constructor(e,r,o,n,i,a,c){super(),this.buyA=e,this.buyB=r,this.sell=o,this.maxUses=n,this.experienceReward=i,this.tier=a,this.traderExperience=c,this.uses=0}static write(e,r){let o=new Bc({name:"offers"}),n=new Jb({listType:Yb.Compound,name:"Recipes"});for(let i of r){let a=new Bc;a.createCompoundTag(i.buyA),a.createIntTag({name:"maxUses",value:i.maxUses}),i.buyB&&a.addTag(i.buyB),a.createByteTag({name:"rewardExp",value:i.experienceReward}),a.addTag(i.sell),a.createIntTag({name:"tier",value:i.tier}),a.createIntTag({name:"traderExp",value:i.traderExperience}),a.createIntTag({name:"uses",value:i.uses}),n.value.push(a)}o.addTag(n),Bc.write(e,o,!0)}};import{DataType as Qb}from"@serenityjs/raknet";var ja=class extends Qb{static{s(this,"PlayerAuthInputTransaction")}inputTransaction;constructor(e){super(),this.inputTransaction=e}static write(e,r,o,n){n.hasFlag(X.PerformItemInteraction)&&xc.write(e,r)}static read(e,r,o){return o.hasFlag(X.PerformItemInteraction)?xc.read(e):null}};import{DataType as $b}from"@serenityjs/raknet";import{Endianness as Ll}from"@serenityjs/binarystream";var El=class extends $b{static{s(this,"CreativeGroup")}category;name;icon;constructor(e,r,o){super(),this.category=e,this.name=r,this.icon=o}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readInt32(Ll.Little),a=e.readVarString(),c=C.read(e);r.push(new this(i,a,c))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeInt32(o.category,Ll.Little),e.writeVarString(o.name),C.write(e,o.icon)}};import{BasePacket as Xb}from"@serenityjs/raknet";import{VarInt as Lb}from"@serenityjs/binarystream";var f=class extends Xb{static{s(this,"DataPacket")}static id;static id_type=Lb;serialize(){throw new Error("DataPacket.serialize() is not implemented")}deserialize(){throw new Error("DataPacket.deserialize() is not implemented")}};function it(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(it,"_ts_decorate");function ft(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(ft,"_ts_metadata");var Y=class extends f{static{s(this,"AddEntityPacket")}uniqueEntityId;runtimeId;identifier;position;velocity;pitch;yaw;headYaw;bodyYaw;attributes;data;properties;links};it([dt(tP),ft("design:type",typeof BigInt>"u"?Object:BigInt)],Y.prototype,"uniqueEntityId",void 0);it([dt(Eb),ft("design:type",typeof BigInt>"u"?Object:BigInt)],Y.prototype,"runtimeId",void 0);it([dt(vb),ft("design:type",String)],Y.prototype,"identifier",void 0);it([dt(l),ft("design:type",typeof l>"u"?Object:l)],Y.prototype,"position",void 0);it([dt(l),ft("design:type",typeof l>"u"?Object:l)],Y.prototype,"velocity",void 0);it([dt(Ua,_a.Little),ft("design:type",Number)],Y.prototype,"pitch",void 0);it([dt(Ua,_a.Little),ft("design:type",Number)],Y.prototype,"yaw",void 0);it([dt(Ua,_a.Little),ft("design:type",Number)],Y.prototype,"headYaw",void 0);it([dt(Ua,_a.Little),ft("design:type",Number)],Y.prototype,"bodyYaw",void 0);it([dt(Gf),ft("design:type",typeof Array>"u"?Object:Array)],Y.prototype,"attributes",void 0);it([dt(Nt),ft("design:type",typeof Array>"u"?Object:Array)],Y.prototype,"data",void 0);it([dt(bt),ft("design:type",typeof bt>"u"?Object:bt)],Y.prototype,"properties",void 0);it([dt(ra),ft("design:type",typeof Array>"u"?Object:Array)],Y.prototype,"links",void 0);Y=it([eP(p.AddEntity)],Y);import{Bool as rP,VarLong as iP,ZigZong as oP}from"@serenityjs/binarystream";import{Serialize as fr,Proto as nP}from"@serenityjs/raknet";function Oe(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Oe,"_ts_decorate");function pr(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(pr,"_ts_metadata");var Bt=class extends f{static{s(this,"AddItemActorPacket")}uniqueId;runtimeId;item;position;velocity;data;fromFishing};Oe([fr(oP),pr("design:type",typeof BigInt>"u"?Object:BigInt)],Bt.prototype,"uniqueId",void 0);Oe([fr(iP),pr("design:type",typeof BigInt>"u"?Object:BigInt)],Bt.prototype,"runtimeId",void 0);Oe([fr(R),pr("design:type",typeof R>"u"?Object:R)],Bt.prototype,"item",void 0);Oe([fr(l),pr("design:type",typeof l>"u"?Object:l)],Bt.prototype,"position",void 0);Oe([fr(l),pr("design:type",typeof l>"u"?Object:l)],Bt.prototype,"velocity",void 0);Oe([fr(Nt),pr("design:type",typeof Array>"u"?Object:Array)],Bt.prototype,"data",void 0);Oe([fr(rP),pr("design:type",Boolean)],Bt.prototype,"fromFishing",void 0);Bt=Oe([nP(p.AddItemActor)],Bt);import{Endianness as ao,Float32 as Oc,Uuid as aP,VarLong as sP,VarString as Vc,ZigZag as cP,Int64 as pP,Uint8 as vl,Int32 as fP}from"@serenityjs/binarystream";import{Proto as dP,Serialize as q}from"@serenityjs/raknet";function z(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(z,"_ts_decorate");function T(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(T,"_ts_metadata");var U=class extends f{static{s(this,"AddPlayerPacket")}uuid;username;runtimeId;platformChatId;position;velocity;pitch;yaw;headYaw;heldItem;gamemode;data;properties;uniqueEntityId;premissionLevel;commandPermission;abilities;links;deviceId;deviceOS};z([q(aP),T("design:type",String)],U.prototype,"uuid",void 0);z([q(Vc),T("design:type",String)],U.prototype,"username",void 0);z([q(sP),T("design:type",typeof BigInt>"u"?Object:BigInt)],U.prototype,"runtimeId",void 0);z([q(Vc),T("design:type",String)],U.prototype,"platformChatId",void 0);z([q(l),T("design:type",typeof l>"u"?Object:l)],U.prototype,"position",void 0);z([q(l),T("design:type",typeof l>"u"?Object:l)],U.prototype,"velocity",void 0);z([q(Oc,ao.Little),T("design:type",Number)],U.prototype,"pitch",void 0);z([q(Oc,ao.Little),T("design:type",Number)],U.prototype,"yaw",void 0);z([q(Oc,ao.Little),T("design:type",Number)],U.prototype,"headYaw",void 0);z([q(R),T("design:type",typeof R>"u"?Object:R)],U.prototype,"heldItem",void 0);z([q(cP),T("design:type",typeof Gamemode>"u"?Object:Gamemode)],U.prototype,"gamemode",void 0);z([q(Nt),T("design:type",typeof Array>"u"?Object:Array)],U.prototype,"data",void 0);z([q(bt),T("design:type",typeof bt>"u"?Object:bt)],U.prototype,"properties",void 0);z([q(pP,ao.Little),T("design:type",typeof BigInt>"u"?Object:BigInt)],U.prototype,"uniqueEntityId",void 0);z([q(vl),T("design:type",typeof PermissionLevel>"u"?Object:PermissionLevel)],U.prototype,"premissionLevel",void 0);z([q(vl),T("design:type",typeof CommandPermissionLevel>"u"?Object:CommandPermissionLevel)],U.prototype,"commandPermission",void 0);z([q(ea),T("design:type",typeof Array>"u"?Object:Array)],U.prototype,"abilities",void 0);z([q(ra),T("design:type",typeof Array>"u"?Object:Array)],U.prototype,"links",void 0);z([q(Vc),T("design:type",String)],U.prototype,"deviceId",void 0);z([q(fP,ao.Little),T("design:type",typeof DeviceOS>"u"?Object:DeviceOS)],U.prototype,"deviceOS",void 0);U=z([dP(p.AddPlayer)],U);import{VarLong as lP,ZigZag as mP}from"@serenityjs/binarystream";import{Proto as uP,Serialize as jc}from"@serenityjs/raknet";function Da(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Da,"_ts_decorate");function Cc(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Cc,"_ts_metadata");var dr=class extends f{static{s(this,"AnimatePacket")}id;runtimeEntityId;boatRowingTime};Da([jc(mP),Cc("design:type",typeof AnimateId>"u"?Object:AnimateId)],dr.prototype,"id",void 0);Da([jc(lP),Cc("design:type",typeof BigInt>"u"?Object:BigInt)],dr.prototype,"runtimeEntityId",void 0);Da([jc(dd),Cc("design:type",Object)],dr.prototype,"boatRowingTime",void 0);dr=Da([uP(p.Animate)],dr);import{Endianness as hP}from"@serenityjs/binarystream";import{Proto as gP,Serialize as Ce}from"@serenityjs/raknet";function Kt(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Kt,"_ts_decorate");function Ve(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Ve,"_ts_metadata");var Pt=class extends f{static{s(this,"AvailableCommandsPacket")}enumValues;chainedSubcommandValues;postFixes;enums;subcommands;commands;dynamicEnums;enumConstraints};Kt([Ce(xd),Ve("design:type",typeof Array>"u"?Object:Array)],Pt.prototype,"enumValues",void 0);Kt([Ce(Rd),Ve("design:type",typeof Array>"u"?Object:Array)],Pt.prototype,"chainedSubcommandValues",void 0);Kt([Ce(kd),Ve("design:type",typeof Array>"u"?Object:Array)],Pt.prototype,"postFixes",void 0);Kt([Ce(ed,hP.Little,"enumValues"),Ve("design:type",typeof Array>"u"?Object:Array)],Pt.prototype,"enums",void 0);Kt([Ce(id),Ve("design:type",typeof Array>"u"?Object:Array)],Pt.prototype,"subcommands",void 0);Kt([Ce(nd),Ve("design:type",typeof Array>"u"?Object:Array)],Pt.prototype,"commands",void 0);Kt([Ce(sd),Ve("design:type",typeof Array>"u"?Object:Array)],Pt.prototype,"dynamicEnums",void 0);Kt([Ce(pd),Ve("design:type",typeof Array>"u"?Object:Array)],Pt.prototype,"enumConstraints",void 0);Pt=Kt([gP(p.AvailableCommands)],Pt);import{Proto as wP}from"@serenityjs/raknet";function yP(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(yP,"_ts_decorate");var Na=class extends f{static{s(this,"BiomeDefinitionListPacket")}biomes;serialize(){return this.writeVarInt(p.BiomeDefinitionList),this.writeBuffer(this.biomes),this.getBuffer()}deserialize(){return this.readVarInt(),this.biomes=this.readRemainingBuffer(),this}};Na=yP([wP(p.BiomeDefinitionList)],Na);import{Bool as bP,Uint8 as PP,ZigZag as _c}from"@serenityjs/binarystream";import{Proto as xP,Serialize as co}from"@serenityjs/raknet";function ei(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(ei,"_ts_decorate");function so(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(so,"_ts_metadata");var Qt=class extends f{static{s(this,"BlockPickRequestPacket")}x;y;z;addData;selectedSlot};ei([co(_c),so("design:type",Number)],Qt.prototype,"x",void 0);ei([co(_c),so("design:type",Number)],Qt.prototype,"y",void 0);ei([co(_c),so("design:type",Number)],Qt.prototype,"z",void 0);ei([co(bP),so("design:type",Boolean)],Qt.prototype,"addData",void 0);ei([co(PP),so("design:type",Number)],Qt.prototype,"selectedSlot",void 0);Qt=ei([xP(p.BlockPickRequest)],Qt);import{ZigZag as RP,Bool as tm}from"@serenityjs/binarystream";import{Proto as kP,Serialize as Ma}from"@serenityjs/raknet";function po(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(po,"_ts_decorate");function Za(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Za,"_ts_metadata");var je=class extends f{static{s(this,"ChangeDimensionPacket")}dimension;position;respawn;hasLoadingScreen};po([Ma(RP),Za("design:type",typeof DimensionType>"u"?Object:DimensionType)],je.prototype,"dimension",void 0);po([Ma(l),Za("design:type",typeof l>"u"?Object:l)],je.prototype,"position",void 0);po([Ma(tm),Za("design:type",Boolean)],je.prototype,"respawn",void 0);po([Ma(tm),Za("design:type",Boolean)],je.prototype,"hasLoadingScreen",void 0);je=po([kP(p.ChangeDimension)],je);import{ZigZag as SP}from"@serenityjs/binarystream";import{Proto as BP,Serialize as OP}from"@serenityjs/raknet";function em(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(em,"_ts_decorate");function IP(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(IP,"_ts_metadata");var fo=class extends f{static{s(this,"ChunkRadiusUpdatePacket")}radius};em([OP(SP),IP("design:type",Number)],fo.prototype,"radius",void 0);fo=em([BP(p.ChunkRadiusUpdate)],fo);import{Proto as CP,Serialize as jP}from"@serenityjs/raknet";function rm(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(rm,"_ts_decorate");function VP(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(VP,"_ts_metadata");var lo=class extends f{static{s(this,"CommandOutputPacket")}originData};rm([jP(aa),VP("design:type",typeof aa>"u"?Object:aa)],lo.prototype,"originData",void 0);lo=rm([CP(p.CommandOutput)],lo);import{Bool as _P,VarInt as UP,VarString as DP}from"@serenityjs/binarystream";import{Proto as NP,Serialize as Fa}from"@serenityjs/raknet";function mo(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(mo,"_ts_decorate");function za(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(za,"_ts_metadata");var _e=class extends f{static{s(this,"CommandRequestPacket")}command;origin;isInternal;version};mo([Fa(DP),za("design:type",String)],_e.prototype,"command",void 0);mo([Fa(nr),za("design:type",typeof nr>"u"?Object:nr)],_e.prototype,"origin",void 0);mo([Fa(_P),za("design:type",Boolean)],_e.prototype,"isInternal",void 0);mo([Fa(UP),za("design:type",Number)],_e.prototype,"version",void 0);_e=mo([NP(p.CommandRequest)],_e);import{Int8 as im,Bool as ZP}from"@serenityjs/binarystream";import{Proto as MP,Serialize as Dc}from"@serenityjs/raknet";function Ta(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Ta,"_ts_decorate");function Uc(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Uc,"_ts_metadata");var lr=class extends f{static{s(this,"ContainerClosePacket")}identifier;type;serverInitiated};Ta([Dc(im),Uc("design:type",typeof ContainerId>"u"?Object:ContainerId)],lr.prototype,"identifier",void 0);Ta([Dc(im),Uc("design:type",typeof ContainerType>"u"?Object:ContainerType)],lr.prototype,"type",void 0);Ta([Dc(ZP),Uc("design:type",Boolean)],lr.prototype,"serverInitiated",void 0);lr=Ta([MP(p.ContainerClose)],lr);import{Int8 as om,ZigZong as zP}from"@serenityjs/binarystream";import{Proto as FP,Serialize as Ha}from"@serenityjs/raknet";function uo(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(uo,"_ts_decorate");function qa(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(qa,"_ts_metadata");var Ue=class extends f{static{s(this,"ContainerOpenPacket")}identifier;type;position;uniqueId};uo([Ha(om),qa("design:type",typeof ContainerId>"u"?Object:ContainerId)],Ue.prototype,"identifier",void 0);uo([Ha(om),qa("design:type",typeof ContainerType>"u"?Object:ContainerType)],Ue.prototype,"type",void 0);uo([Ha(b),qa("design:type",typeof b>"u"?Object:b)],Ue.prototype,"position",void 0);uo([Ha(zP),qa("design:type",typeof BigInt>"u"?Object:BigInt)],Ue.prototype,"uniqueId",void 0);Ue=uo([FP(p.ContainerOpen)],Ue);import{Proto as TP,Serialize as am}from"@serenityjs/raknet";function Nc(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Nc,"_ts_decorate");function nm(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(nm,"_ts_metadata");var ri=class extends f{static{s(this,"CreativeContentPacket")}groups;items};Nc([am(El),nm("design:type",typeof Array>"u"?Object:Array)],ri.prototype,"groups",void 0);Nc([am(hd),nm("design:type",typeof Array>"u"?Object:Array)],ri.prototype,"items",void 0);ri=Nc([TP(p.CreativeContent)],ri);import{ZigZag as qP,Bool as HP}from"@serenityjs/binarystream";import{Proto as WP,Serialize as Mc}from"@serenityjs/raknet";function Wa(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Wa,"_ts_decorate");function Zc(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Zc,"_ts_metadata");var mr=class extends f{static{s(this,"DisconnectPacket")}reason;hideDisconnectScreen;message};Wa([Mc(qP),Zc("design:type",typeof DisconnectReason>"u"?Object:DisconnectReason)],mr.prototype,"reason",void 0);Wa([Mc(HP),Zc("design:type",Boolean)],mr.prototype,"hideDisconnectScreen",void 0);Wa([Mc(Ra,0,"hideDisconnectScreen"),Zc("design:type",typeof Ra>"u"?Object:Ra)],mr.prototype,"message",void 0);mr=Wa([WP(p.Disconnect)],mr);import{Uint8 as GP,Endianness as AP,VarLong as JP}from"@serenityjs/binarystream";import{Proto as YP,Serialize as Fc}from"@serenityjs/raknet";function Ga(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Ga,"_ts_decorate");function zc(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(zc,"_ts_metadata");var ur=class extends f{static{s(this,"InteractPacket")}action;actorRuntimeId;position};Ga([Fc(GP),zc("design:type",typeof InteractAction>"u"?Object:InteractAction)],ur.prototype,"action",void 0);Ga([Fc(JP),zc("design:type",typeof BigInt>"u"?Object:BigInt)],ur.prototype,"actorRuntimeId",void 0);Ga([Fc(Zf,AP.Big,"action"),zc("design:type",typeof Vector3f>"u"?Object:Vector3f)],ur.prototype,"position",void 0);ur=Ga([YP(p.Interact)],ur);import{VarInt as KP}from"@serenityjs/binarystream";import{Proto as QP,Serialize as Ja}from"@serenityjs/raknet";function ho(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(ho,"_ts_decorate");function Aa(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Aa,"_ts_metadata");var De=class extends f{static{s(this,"InventoryContentPacket")}containerId;items;fullContainerName;storageItem};ho([Ja(KP),Aa("design:type",typeof ContainerId>"u"?Object:ContainerId)],De.prototype,"containerId",void 0);ho([Ja(Lf),Aa("design:type",typeof Array>"u"?Object:Array)],De.prototype,"items",void 0);ho([Ja(St),Aa("design:type",typeof St>"u"?Object:St)],De.prototype,"fullContainerName",void 0);ho([Ja(R),Aa("design:type",typeof R>"u"?Object:R)],De.prototype,"storageItem",void 0);De=ho([QP(p.InventoryContent)],De);import{VarInt as sm}from"@serenityjs/binarystream";import{Proto as $P,Serialize as yo}from"@serenityjs/raknet";function ii(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(ii,"_ts_decorate");function go(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(go,"_ts_metadata");var $t=class extends f{static{s(this,"InventorySlotPacket")}containerId;slot;fullContainerName;storageItem;item};ii([yo(sm),go("design:type",typeof ContainerId>"u"?Object:ContainerId)],$t.prototype,"containerId",void 0);ii([yo(sm),go("design:type",Number)],$t.prototype,"slot",void 0);ii([yo(St),go("design:type",typeof St>"u"?Object:St)],$t.prototype,"fullContainerName",void 0);ii([yo(R),go("design:type",typeof R>"u"?Object:R)],$t.prototype,"storageItem",void 0);ii([yo(R),go("design:type",typeof R>"u"?Object:R)],$t.prototype,"item",void 0);$t=ii([$P(p.InventorySlot)],$t);import{Proto as XP,Serialize as pm}from"@serenityjs/raknet";function Tc(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Tc,"_ts_decorate");function cm(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(cm,"_ts_metadata");var oi=class extends f{static{s(this,"InventoryTransactionPacket")}legacy;transaction};Tc([pm(ar),cm("design:type",typeof ar>"u"?Object:ar)],oi.prototype,"legacy",void 0);Tc([pm(pa),cm("design:type",typeof pa>"u"?Object:pa)],oi.prototype,"transaction",void 0);oi=Tc([XP(p.InventoryTransaction)],oi);import{Proto as EP,Serialize as vP}from"@serenityjs/raknet";function fm(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(fm,"_ts_decorate");function LP(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(LP,"_ts_metadata");var wo=class extends f{static{s(this,"ItemRegistryPacket")}definitions};fm([vP(Rf),LP("design:type",typeof Array>"u"?Object:Array)],wo.prototype,"definitions",void 0);wo=fm([EP(p.ItemRegistry)],wo);import{Proto as ex,Serialize as rx}from"@serenityjs/raknet";function dm(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(dm,"_ts_decorate");function tx(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(tx,"_ts_metadata");var bo=class extends f{static{s(this,"ItemStackRequestPacket")}requests};dm([rx(wl),tx("design:type",typeof Array>"u"?Object:Array)],bo.prototype,"requests",void 0);bo=dm([ex(p.ItemStackRequest)],bo);import{Proto as ox,Serialize as nx}from"@serenityjs/raknet";function lm(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(lm,"_ts_decorate");function ix(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(ix,"_ts_metadata");var Po=class extends f{static{s(this,"ItemStackResponsePacket")}responses};lm([nx(Qf),ix("design:type",typeof Array>"u"?Object:Array)],Po.prototype,"responses",void 0);Po=lm([ox(p.ItemStackResponse)],Po);import{Endianness as Ya}from"@serenityjs/binarystream";import{Proto as sx}from"@serenityjs/raknet";function ax(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(ax,"_ts_decorate");var Ka=class extends f{static{s(this,"LevelChunkPacket")}x;z;dimension;subChunkCount;cacheEnabled;blobs;data;serialize(){if(this.writeVarInt(p.LevelChunk),this.writeZigZag(this.x),this.writeZigZag(this.z),this.writeZigZag(this.dimension),this.cacheEnabled?(this.writeVarInt(-2),this.writeUint16(this.subChunkCount,Ya.Little)):this.writeVarInt(this.subChunkCount),this.writeBool(this.cacheEnabled),this.blobs){this.writeVarInt(this.blobs.length);for(let e of this.blobs)this.writeUint64(e,Ya.Little)}return this.writeVarInt(this.data.byteLength),this.writeBuffer(this.data),this.getBuffer()}deserialize(){if(this.readVarInt(),this.x=this.readZigZag(),this.z=this.readZigZag(),this.dimension=this.readZigZag(),this.subChunkCount=this.readVarInt(),this.subChunkCount===-2&&(this.subChunkCount=this.readUint16(Ya.Little)),this.cacheEnabled=this.readBool(),this.cacheEnabled){let r=this.readVarInt();this.blobs=[];for(let o=0;o<r;o++)this.blobs.push(this.readUint64(Ya.Little))}let e=this.readVarInt();return this.data=this.readBuffer(e),this}};Ka=ax([sx(p.LevelChunk)],Ka);import{ZigZag as mm}from"@serenityjs/binarystream";import{Proto as cx,Serialize as Hc}from"@serenityjs/raknet";function Qa(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Qa,"_ts_decorate");function qc(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(qc,"_ts_metadata");var hr=class extends f{static{s(this,"LevelEventPacket")}event;position;data};Qa([Hc(mm),qc("design:type",typeof LevelEvent>"u"?Object:LevelEvent)],hr.prototype,"event",void 0);Qa([Hc(l),qc("design:type",typeof l>"u"?Object:l)],hr.prototype,"position",void 0);Qa([Hc(mm),qc("design:type",Number)],hr.prototype,"data",void 0);hr=Qa([cx(p.LevelEvent)],hr);import{Bool as um,VarInt as px,VarString as fx,ZigZag as dx}from"@serenityjs/binarystream";import{Proto as lx,Serialize as ai}from"@serenityjs/raknet";function gr(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(gr,"_ts_decorate");function ni(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(ni,"_ts_metadata");var Zt=class extends f{static{s(this,"LevelSoundEventPacket")}event;position;data;actorIdentifier;isBabyMob;isGlobal};gr([ai(px),ni("design:type",typeof LevelSoundEvent>"u"?Object:LevelSoundEvent)],Zt.prototype,"event",void 0);gr([ai(l),ni("design:type",typeof l>"u"?Object:l)],Zt.prototype,"position",void 0);gr([ai(dx),ni("design:type",Number)],Zt.prototype,"data",void 0);gr([ai(fx),ni("design:type",String)],Zt.prototype,"actorIdentifier",void 0);gr([ai(um),ni("design:type",Boolean)],Zt.prototype,"isBabyMob",void 0);gr([ai(um),ni("design:type",Boolean)],Zt.prototype,"isGlobal",void 0);Zt=gr([lx(p.LevelSoundEvent)],Zt);import{Int32 as mx}from"@serenityjs/binarystream";import{Proto as ux,Serialize as gm}from"@serenityjs/raknet";function Wc(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Wc,"_ts_decorate");function hm(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(hm,"_ts_metadata");var si=class extends f{static{s(this,"LoginPacket")}protocol;tokens};Wc([gm(mx),hm("design:type",Number)],si.prototype,"protocol",void 0);Wc([gm(Jn),hm("design:type",typeof Jn>"u"?Object:Jn)],si.prototype,"tokens",void 0);si=Wc([ux(p.Login)],si);import{Int8 as hx,Uint8 as ym,VarLong as gx}from"@serenityjs/binarystream";import{Proto as yx,Serialize as Ro}from"@serenityjs/raknet";function ci(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(ci,"_ts_decorate");function xo(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(xo,"_ts_metadata");var Xt=class extends f{static{s(this,"MobEquipmentPacket")}runtimeEntityId;item;slot;selectedSlot;containerId};ci([Ro(gx),xo("design:type",typeof BigInt>"u"?Object:BigInt)],Xt.prototype,"runtimeEntityId",void 0);ci([Ro(R),xo("design:type",typeof R>"u"?Object:R)],Xt.prototype,"item",void 0);ci([Ro(ym),xo("design:type",Number)],Xt.prototype,"slot",void 0);ci([Ro(ym),xo("design:type",Number)],Xt.prototype,"selectedSlot",void 0);ci([Ro(hx),xo("design:type",typeof ContainerId>"u"?Object:ContainerId)],Xt.prototype,"containerId",void 0);Xt=ci([yx(p.MobEquipment)],Xt);import{VarInt as wx,VarString as bx}from"@serenityjs/binarystream";import{Proto as Px,Serialize as bm}from"@serenityjs/raknet";function Gc(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Gc,"_ts_decorate");function wm(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(wm,"_ts_metadata");var pi=class extends f{static{s(this,"ModalFormRequestPacket")}id;payload};Gc([bm(wx),wm("design:type",Number)],pi.prototype,"id",void 0);Gc([bm(bx),wm("design:type",String)],pi.prototype,"payload",void 0);pi=Gc([Px(p.ModalFormRequest)],pi);import{VarInt as xx,Bool as Pm,Endianness as xm}from"@serenityjs/binarystream";import{Proto as Rx,Serialize as Io}from"@serenityjs/raknet";function fi(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(fi,"_ts_decorate");function ko(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(ko,"_ts_metadata");var Lt=class extends f{static{s(this,"ModalFormResponsePacket")}id;response;data;canceled;reason};fi([Io(xx),ko("design:type",Number)],Lt.prototype,"id",void 0);fi([Io(Pm),ko("design:type",Boolean)],Lt.prototype,"response",void 0);fi([Io(Hf,xm.Big,"response"),ko("design:type",Object)],Lt.prototype,"data",void 0);fi([Io(Pm),ko("design:type",Boolean)],Lt.prototype,"canceled",void 0);fi([Io(Wf,xm.Big,"canceled"),ko("design:type",Object)],Lt.prototype,"reason",void 0);Lt=fi([Rx(p.ModalFormResponse)],Lt);import{Uint8 as kx,VarLong as Ix}from"@serenityjs/binarystream";import{Proto as Sx,Serialize as Xa}from"@serenityjs/raknet";function So(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(So,"_ts_decorate");function $a(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s($a,"_ts_metadata");var Ne=class extends f{static{s(this,"MoveActorAbsolutePacket")}runtimeId;flags;position;rotation};So([Xa(Ix),$a("design:type",typeof BigInt>"u"?Object:BigInt)],Ne.prototype,"runtimeId",void 0);So([Xa(kx),$a("design:type",Number)],Ne.prototype,"flags",void 0);So([Xa(l),$a("design:type",typeof l>"u"?Object:l)],Ne.prototype,"position",void 0);So([Xa(sa),$a("design:type",typeof sa>"u"?Object:sa)],Ne.prototype,"rotation",void 0);Ne=So([Sx(p.MoveActorAbsolute)],Ne);import{Float32 as Ac,Endianness as La,Uint8 as Bx,Bool as Ox,VarLong as Rm}from"@serenityjs/binarystream";import{Proto as Vx,Serialize as zt}from"@serenityjs/raknet";function Ot(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Ot,"_ts_decorate");function Mt(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Mt,"_ts_metadata");var ot=class extends f{static{s(this,"MovePlayerPacket")}runtimeId;position;pitch;yaw;headYaw;mode;onGround;riddenRuntimeId;cause;inputTick};Ot([zt(Rm),Mt("design:type",typeof BigInt>"u"?Object:BigInt)],ot.prototype,"runtimeId",void 0);Ot([zt(l),Mt("design:type",typeof l>"u"?Object:l)],ot.prototype,"position",void 0);Ot([zt(Ac,La.Little),Mt("design:type",Number)],ot.prototype,"pitch",void 0);Ot([zt(Ac,La.Little),Mt("design:type",Number)],ot.prototype,"yaw",void 0);Ot([zt(Ac,La.Little),Mt("design:type",Number)],ot.prototype,"headYaw",void 0);Ot([zt(Bx),Mt("design:type",typeof MoveMode>"u"?Object:MoveMode)],ot.prototype,"mode",void 0);Ot([zt(Ox),Mt("design:type",Boolean)],ot.prototype,"onGround",void 0);Ot([zt(Rm),Mt("design:type",typeof BigInt>"u"?Object:BigInt)],ot.prototype,"riddenRuntimeId",void 0);Ot([zt(kf,La.Little,"mode"),Mt("design:type",Object)],ot.prototype,"cause",void 0);Ot([zt(Q),Mt("design:type",typeof BigInt>"u"?Object:BigInt)],ot.prototype,"inputTick",void 0);ot=Ot([Vx(p.MovePlayer)],ot);import{VarInt as Cx}from"@serenityjs/binarystream";import{Proto as jx,Serialize as Yc}from"@serenityjs/raknet";function Ea(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Ea,"_ts_decorate");function Jc(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Jc,"_ts_metadata");var yr=class extends f{static{s(this,"NetworkChunkPublisherUpdatePacket")}coordinate;radius;savedChunks};Ea([Yc(b),Jc("design:type",typeof b>"u"?Object:b)],yr.prototype,"coordinate",void 0);Ea([Yc(Cx),Jc("design:type",Number)],yr.prototype,"radius",void 0);Ea([Yc(Tf),Jc("design:type",typeof Array>"u"?Object:Array)],yr.prototype,"savedChunks",void 0);yr=Ea([jx(p.NetworkChunkPublisherUpdate)],yr);import{Bool as _x,Endianness as Kc,Float32 as Ux,Short as km,Uint8 as Dx}from"@serenityjs/binarystream";import{Proto as Nx,Serialize as Oo}from"@serenityjs/raknet";function di(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(di,"_ts_decorate");function Bo(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Bo,"_ts_metadata");var Et=class extends f{static{s(this,"NetworkSettingsPacket")}compressionThreshold;compressionMethod;clientThrottle;clientThreshold;clientScalar};di([Oo(km,Kc.Little),Bo("design:type",Number)],Et.prototype,"compressionThreshold",void 0);di([Oo(km,Kc.Little),Bo("design:type",typeof CompressionMethod>"u"?Object:CompressionMethod)],Et.prototype,"compressionMethod",void 0);di([Oo(_x),Bo("design:type",Boolean)],Et.prototype,"clientThrottle",void 0);di([Oo(Dx),Bo("design:type",Number)],Et.prototype,"clientThreshold",void 0);di([Oo(Ux,Kc.Little),Bo("design:type",Number)],Et.prototype,"clientScalar",void 0);Et=di([Nx(p.NetworkSettings)],Et);import{VarString as Zx,ZigZag as Qc}from"@serenityjs/binarystream";import{Proto as Mx,Serialize as ts}from"@serenityjs/raknet";function Vo(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Vo,"_ts_decorate");function va(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(va,"_ts_metadata");var Ze=class extends f{static{s(this,"PacketViolationWarningPacket")}type;severity;packet;context};Vo([ts(Qc),va("design:type",typeof ViolationType>"u"?Object:ViolationType)],Ze.prototype,"type",void 0);Vo([ts(Qc),va("design:type",typeof ViolationSeverity>"u"?Object:ViolationSeverity)],Ze.prototype,"severity",void 0);Vo([ts(Qc),va("design:type",typeof p>"u"?Object:p)],Ze.prototype,"packet",void 0);Vo([ts(Zx),va("design:type",String)],Ze.prototype,"context",void 0);Ze=Vo([Mx(p.PacketViolationWarning)],Ze);import{Int32 as Fx}from"@serenityjs/binarystream";import{Proto as Tx,Serialize as qx}from"@serenityjs/raknet";function Im(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Im,"_ts_decorate");function zx(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(zx,"_ts_metadata");var Co=class extends f{static{s(this,"PlayStatusPacket")}status};Im([qx(Fx),zx("design:type",typeof PlayStatus>"u"?Object:PlayStatus)],Co.prototype,"status",void 0);Co=Im([Tx(p.PlayStatus)],Co);import{VarLong as Hx,ZigZag as Sm}from"@serenityjs/binarystream";import{Proto as Wx,Serialize as _o}from"@serenityjs/raknet";function li(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(li,"_ts_decorate");function jo(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(jo,"_ts_metadata");var vt=class extends f{static{s(this,"PlayerActionPacket")}entityRuntimeId;action;blockPosition;resultPosition;face};li([_o(Hx),jo("design:type",typeof BigInt>"u"?Object:BigInt)],vt.prototype,"entityRuntimeId",void 0);li([_o(Sm),jo("design:type",typeof PlayerActionType>"u"?Object:PlayerActionType)],vt.prototype,"action",void 0);li([_o(b),jo("design:type",typeof b>"u"?Object:b)],vt.prototype,"blockPosition",void 0);li([_o(b),jo("design:type",typeof b>"u"?Object:b)],vt.prototype,"resultPosition",void 0);li([_o(Sm),jo("design:type",Number)],vt.prototype,"face",void 0);vt=li([Wx(p.PlayerAction)],vt);import{Endianness as Gx,Float32 as Ax,VarInt as $c}from"@serenityjs/binarystream";import{Proto as Jx,Serialize as A}from"@serenityjs/raknet";function H(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(H,"_ts_decorate");function G(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(G,"_ts_metadata");var D=class extends f{static{s(this,"PlayerAuthInputPacket")}rotation;position;motion;headYaw;inputData;inputMode;playMode;interactionMode;interactRotation;inputTick;positionDelta;inputTransaction;itemStackRequest;blockActions;predictedVehicle;analogueMotion;cameraOrientation;rawMoveVector};H([A(_),G("design:type",typeof _>"u"?Object:_)],D.prototype,"rotation",void 0);H([A(l),G("design:type",typeof l>"u"?Object:l)],D.prototype,"position",void 0);H([A(_),G("design:type",typeof _>"u"?Object:_)],D.prototype,"motion",void 0);H([A(Ax,Gx.Little),G("design:type",Number)],D.prototype,"headYaw",void 0);H([A(vr),G("design:type",typeof vr>"u"?Object:vr)],D.prototype,"inputData",void 0);H([A($c),G("design:type",typeof InputMode>"u"?Object:InputMode)],D.prototype,"inputMode",void 0);H([A($c),G("design:type",typeof PlayMode>"u"?Object:PlayMode)],D.prototype,"playMode",void 0);H([A($c),G("design:type",typeof InteractionMode>"u"?Object:InteractionMode)],D.prototype,"interactionMode",void 0);H([A(_),G("design:type",typeof _>"u"?Object:_)],D.prototype,"interactRotation",void 0);H([A(Q),G("design:type",typeof BigInt>"u"?Object:BigInt)],D.prototype,"inputTick",void 0);H([A(l),G("design:type",typeof l>"u"?Object:l)],D.prototype,"positionDelta",void 0);H([A(ja,0,"inputData"),G("design:type",Object)],D.prototype,"inputTransaction",void 0);H([A(Fl,0,"inputData"),G("design:type",Object)],D.prototype,"itemStackRequest",void 0);H([A(Cl,0,"inputData"),G("design:type",Object)],D.prototype,"blockActions",void 0);H([A(Sl,0,"inputData"),G("design:type",Object)],D.prototype,"predictedVehicle",void 0);H([A(_),G("design:type",typeof _>"u"?Object:_)],D.prototype,"analogueMotion",void 0);H([A(l),G("design:type",typeof l>"u"?Object:l)],D.prototype,"cameraOrientation",void 0);H([A(_),G("design:type",typeof _>"u"?Object:_)],D.prototype,"rawMoveVector",void 0);D=H([Jx(p.PlayerAuthInput)],D);import{Int8 as Yx,VarInt as Kx,Bool as Qx}from"@serenityjs/binarystream";import{Proto as $x,Serialize as Lc}from"@serenityjs/raknet";function es(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(es,"_ts_decorate");function Xc(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Xc,"_ts_metadata");var wr=class extends f{static{s(this,"PlayerHotbarPacket")}selectedSlot;windowId;selectSlot};es([Lc(Kx),Xc("design:type",Number)],wr.prototype,"selectedSlot",void 0);es([Lc(Yx),Xc("design:type",Number)],wr.prototype,"windowId",void 0);es([Lc(Qx),Xc("design:type",Boolean)],wr.prototype,"selectSlot",void 0);wr=es([$x(p.PlayerHotbar)],wr);import{Endianness as Xx,Uint8 as Lx}from"@serenityjs/binarystream";import{Proto as Ex,Serialize as Om}from"@serenityjs/raknet";function Ec(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Ec,"_ts_decorate");function Bm(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Bm,"_ts_metadata");var mi=class extends f{static{s(this,"PlayerListPacket")}action;records};Ec([Om(Lx),Bm("design:type",typeof PlayerListAction>"u"?Object:PlayerListAction)],mi.prototype,"action",void 0);Ec([Om(_f,Xx.Little,"action"),Bm("design:type",typeof Array>"u"?Object:Array)],mi.prototype,"records",void 0);mi=Ec([Ex(p.PlayerList)],mi);import{ZigZong as tR}from"@serenityjs/binarystream";import{Proto as eR,Serialize as rR}from"@serenityjs/raknet";function Vm(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Vm,"_ts_decorate");function vx(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(vx,"_ts_metadata");var Uo=class extends f{static{s(this,"RemoveEntityPacket")}uniqueEntityId};Vm([rR(tR),vx("design:type",typeof BigInt>"u"?Object:BigInt)],Uo.prototype,"uniqueEntityId",void 0);Uo=Vm([eR(p.RemoveEntity)],Uo);import{Uint8 as iR,ZigZag as oR}from"@serenityjs/binarystream";import{Proto as nR,Serialize as jm}from"@serenityjs/raknet";function vc(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(vc,"_ts_decorate");function Cm(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Cm,"_ts_metadata");var ui=class extends f{static{s(this,"RequestChunkRadiusPacket")}radius;maxRadius};vc([jm(oR),Cm("design:type",Number)],ui.prototype,"radius",void 0);vc([jm(iR),Cm("design:type",Number)],ui.prototype,"maxRadius",void 0);ui=vc([nR(p.RequestChunkRadius)],ui);import{Int32 as sR}from"@serenityjs/binarystream";import{Proto as cR,Serialize as pR}from"@serenityjs/raknet";function _m(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(_m,"_ts_decorate");function aR(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(aR,"_ts_metadata");var Do=class extends f{static{s(this,"RequestNetworkSettingsPacket")}protocol};_m([pR(sR),aR("design:type",Number)],Do.prototype,"protocol",void 0);Do=_m([cR(p.RequestNetworkSettings)],Do);import{Uint8 as fR}from"@serenityjs/binarystream";import{Proto as dR,Serialize as Dm}from"@serenityjs/raknet";function tp(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(tp,"_ts_decorate");function Um(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Um,"_ts_metadata");var hi=class extends f{static{s(this,"ResourcePackClientResponsePacket")}response;packs};tp([Dm(fR),Um("design:type",typeof ResourcePackResponse>"u"?Object:ResourcePackResponse)],hi.prototype,"response",void 0);tp([Dm(ff),Um("design:type",typeof Array>"u"?Object:Array)],hi.prototype,"packs",void 0);hi=tp([dR(p.ResourcePackClientResponse)],hi);import{Endianness as gi}from"@serenityjs/binarystream";import{Proto as mR}from"@serenityjs/raknet";function lR(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(lR,"_ts_decorate");var rs=class extends f{static{s(this,"ResourcePackDataInfoPacket")}packId;maxChunkSize;chunkCount;fileSize;fileHash;isPremium;packType;serialize(){return this.writeVarInt(p.ResourcePackDataInfo),this.writeVarString(this.packId),this.writeUint32(this.maxChunkSize,gi.Little),this.writeUint32(this.chunkCount,gi.Little),this.writeUint64(this.fileSize,gi.Little),this.writeVarInt(this.fileHash.byteLength),this.writeBuffer(this.fileHash),this.writeBool(this.isPremium),this.writeUint8(this.packType),this.getBuffer()}deserialize(){this.readVarInt(),this.packId=this.readVarString(),this.maxChunkSize=this.readUint32(gi.Little),this.chunkCount=this.readUint32(gi.Little),this.fileSize=this.readUint64(gi.Little);let e=this.readVarInt();return this.fileHash=this.readBuffer(e),this.isPremium=this.readBool(),this.packType=this.readUint8(),this}};rs=lR([mR(p.ResourcePackDataInfo)],rs);import{Endianness as is}from"@serenityjs/binarystream";import{Proto as hR}from"@serenityjs/raknet";function uR(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(uR,"_ts_decorate");var os=class extends f{static{s(this,"ResourcePackChunkDataPacket")}packId;chunkId;byteOffset;chunkData;serialize(){return this.writeVarInt(p.ResourcePackChunkData),this.writeVarString(this.packId),this.writeUint32(this.chunkId,is.Little),this.writeUint64(this.byteOffset,is.Little),this.writeVarInt(this.chunkData.byteLength),this.writeBuffer(this.chunkData),this.getBuffer()}deserialize(){this.readVarInt(),this.packId=this.readVarString(),this.chunkId=this.readUint32(is.Little),this.byteOffset=this.readUint64(is.Little);let e=this.readVarInt();return this.chunkData=this.readBuffer(e),this}};os=uR([hR(p.ResourcePackChunkData)],os);import{Endianness as gR,Uint32 as yR,VarString as wR}from"@serenityjs/binarystream";import{Proto as bR,Serialize as Zm}from"@serenityjs/raknet";function ep(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(ep,"_ts_decorate");function Nm(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Nm,"_ts_metadata");var yi=class extends f{static{s(this,"ResourcePackChunkRequestPacket")}packId;chunkId};ep([Zm(wR),Nm("design:type",String)],yi.prototype,"packId",void 0);ep([Zm(yR,gR.Little),Nm("design:type",Number)],yi.prototype,"chunkId",void 0);yi=ep([bR(p.ResourcePackChunkRequest)],yi);import{Bool as rp,VarString as PR}from"@serenityjs/binarystream";import{Proto as xR,Serialize as Pr}from"@serenityjs/raknet";function Me(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Me,"_ts_decorate");function br(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(br,"_ts_metadata");var Vt=class extends f{static{s(this,"ResourcePackStackPacket")}mustAccept;behaviorPacks;texturePacks;gameVersion;experiments;experimentsPreviouslyToggled;hasEditorPacks};Me([Pr(rp),br("design:type",Boolean)],Vt.prototype,"mustAccept",void 0);Me([Pr(Xs),br("design:type",typeof Array>"u"?Object:Array)],Vt.prototype,"behaviorPacks",void 0);Me([Pr(Xs),br("design:type",typeof Array>"u"?Object:Array)],Vt.prototype,"texturePacks",void 0);Me([Pr(PR),br("design:type",String)],Vt.prototype,"gameVersion",void 0);Me([Pr(Qn),br("design:type",typeof Array>"u"?Object:Array)],Vt.prototype,"experiments",void 0);Me([Pr(rp),br("design:type",Boolean)],Vt.prototype,"experimentsPreviouslyToggled",void 0);Me([Pr(rp),br("design:type",Boolean)],Vt.prototype,"hasEditorPacks",void 0);Vt=Me([xR(p.ResourcePackStack)],Vt);import{Bool as ip,Uuid as RR,VarString as kR}from"@serenityjs/binarystream";import{Proto as IR,Serialize as bi}from"@serenityjs/raknet";function xr(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(xr,"_ts_decorate");function wi(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(wi,"_ts_metadata");var Ft=class extends f{static{s(this,"ResourcePacksInfoPacket")}mustAccept;hasAddons;hasScripts;worldTemplateUuid;worldTemplateVersion;packs};xr([bi(ip),wi("design:type",Boolean)],Ft.prototype,"mustAccept",void 0);xr([bi(ip),wi("design:type",Boolean)],Ft.prototype,"hasAddons",void 0);xr([bi(ip),wi("design:type",Boolean)],Ft.prototype,"hasScripts",void 0);xr([bi(RR),wi("design:type",String)],Ft.prototype,"worldTemplateUuid",void 0);xr([bi(kR),wi("design:type",String)],Ft.prototype,"worldTemplateVersion",void 0);xr([bi(sf),wi("design:type",typeof Array>"u"?Object:Array)],Ft.prototype,"packs",void 0);Ft=xr([IR(p.ResourcePacksInfo)],Ft);import{Uint8 as SR,VarLong as BR}from"@serenityjs/binarystream";import{Proto as OR,Serialize as np}from"@serenityjs/raknet";function ns(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(ns,"_ts_decorate");function op(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(op,"_ts_metadata");var Rr=class extends f{static{s(this,"RespawnPacket")}position;state;runtimeEntityId};ns([np(l),op("design:type",typeof l>"u"?Object:l)],Rr.prototype,"position",void 0);ns([np(SR),op("design:type",typeof RespawnState>"u"?Object:RespawnState)],Rr.prototype,"state",void 0);ns([np(BR),op("design:type",typeof BigInt>"u"?Object:BigInt)],Rr.prototype,"runtimeEntityId",void 0);Rr=ns([OR(p.Respawn)],Rr);import{VarString as zm}from"@serenityjs/binarystream";import{Proto as VR,Serialize as Fm}from"@serenityjs/raknet";function ap(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(ap,"_ts_decorate");function Mm(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Mm,"_ts_metadata");var Pi=class extends f{static{s(this,"ScriptMessagePacket")}messageId;data};ap([Fm(zm),Mm("design:type",String)],Pi.prototype,"messageId",void 0);ap([Fm(zm),Mm("design:type",String)],Pi.prototype,"data",void 0);Pi=ap([VR(p.ScriptMessage)],Pi);import{VarLong as CR}from"@serenityjs/binarystream";import{Proto as jR,Serialize as cp}from"@serenityjs/raknet";function as(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(as,"_ts_decorate");function sp(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(sp,"_ts_metadata");var kr=class extends f{static{s(this,"SetActorMotionPacket")}runtimeId;motion;inputTick};as([cp(CR),sp("design:type",typeof BigInt>"u"?Object:BigInt)],kr.prototype,"runtimeId",void 0);as([cp(l),sp("design:type",typeof l>"u"?Object:l)],kr.prototype,"motion",void 0);as([cp(Q),sp("design:type",typeof BigInt>"u"?Object:BigInt)],kr.prototype,"inputTick",void 0);kr=as([jR(p.SetActorMotion)],kr);import{Bool as UR}from"@serenityjs/binarystream";import{Proto as DR,Serialize as NR}from"@serenityjs/raknet";function Tm(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Tm,"_ts_decorate");function _R(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(_R,"_ts_metadata");var No=class extends f{static{s(this,"SetCommandsEnabledPacket")}enabled};Tm([NR(UR),_R("design:type",Boolean)],No.prototype,"enabled",void 0);No=Tm([DR(p.SetCommandsEnabled)],No);import{VarLong as ZR}from"@serenityjs/binarystream";import{Proto as MR,Serialize as cs}from"@serenityjs/raknet";function Zo(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Zo,"_ts_decorate");function ss(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(ss,"_ts_metadata");var ze=class extends f{static{s(this,"SetActorDataPacket")}runtimeEntityId;data;properties;inputTick;actorFlagSet=new Nt(io.Reserved0,Z.Long,0n);setActorFlag(e,r){let o=r?this.actorFlagSet.value^1n<<BigInt(e):this.actorFlagSet.value^0n<<BigInt(e);this.actorFlagSet.value=o;let n=new Nt(io.Reserved0,Z.Long,o),i=this.data.findIndex(a=>a.identifier===io.Reserved0);i!==-1?this.data[i]=n:this.data.push(n)}getActorFlag(e){return(this.actorFlagSet.value&1n<<BigInt(e))===1n}};Zo([cs(ZR),ss("design:type",typeof BigInt>"u"?Object:BigInt)],ze.prototype,"runtimeEntityId",void 0);Zo([cs(Nt),ss("design:type",typeof Array>"u"?Object:Array)],ze.prototype,"data",void 0);Zo([cs(bt),ss("design:type",typeof bt>"u"?Object:bt)],ze.prototype,"properties",void 0);Zo([cs(Q),ss("design:type",typeof BigInt>"u"?Object:BigInt)],ze.prototype,"inputTick",void 0);ze=Zo([MR(p.SetActorData)],ze);import{VarLong as FR}from"@serenityjs/binarystream";import{Proto as TR,Serialize as qR}from"@serenityjs/raknet";function qm(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(qm,"_ts_decorate");function zR(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(zR,"_ts_metadata");var Mo=class extends f{static{s(this,"SetLocalPlayerAsInitializedPacket")}runtimeEntityId};qm([qR(FR),zR("design:type",typeof BigInt>"u"?Object:BigInt)],Mo.prototype,"runtimeEntityId",void 0);Mo=qm([TR(p.SetLocalPlayerAsInitialized)],Mo);import{ZigZag as WR}from"@serenityjs/binarystream";import{Proto as GR,Serialize as AR}from"@serenityjs/raknet";function Hm(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Hm,"_ts_decorate");function HR(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(HR,"_ts_metadata");var zo=class extends f{static{s(this,"SetPlayerGameTypePacket")}gamemode};Hm([AR(WR),HR("design:type",typeof Gamemode>"u"?Object:Gamemode)],zo.prototype,"gamemode",void 0);zo=Hm([GR(p.SetPlayerGameType)],zo);import{VarString as ps,ZigZag as fs}from"@serenityjs/binarystream";import{Proto as JR,Serialize as Te}from"@serenityjs/raknet";function te(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(te,"_ts_decorate");function Fe(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Fe,"_ts_metadata");var xt=class extends f{static{s(this,"SetTitlePacket")}type;text;fadeInTime;stayTime;fadeOutTime;xuid;platformOnlineId;filteredText};te([Te(fs),Fe("design:type",typeof TitleType>"u"?Object:TitleType)],xt.prototype,"type",void 0);te([Te(ps),Fe("design:type",String)],xt.prototype,"text",void 0);te([Te(fs),Fe("design:type",Number)],xt.prototype,"fadeInTime",void 0);te([Te(fs),Fe("design:type",Number)],xt.prototype,"stayTime",void 0);te([Te(fs),Fe("design:type",Number)],xt.prototype,"fadeOutTime",void 0);te([Te(ps),Fe("design:type",String)],xt.prototype,"xuid",void 0);te([Te(ps),Fe("design:type",String)],xt.prototype,"platformOnlineId",void 0);te([Te(ps),Fe("design:type",String)],xt.prototype,"filteredText",void 0);xt=te([JR(p.SetTitle)],xt);import{Bool as B,Endianness as Ct,Float32 as ds,Int16 as YR,Int32 as pp,Int64 as KR,Uint64 as Wm,Uint8 as Fo,VarInt as Gm,VarLong as QR,VarString as lt,ZigZag as jt,ZigZong as $R,Uuid as XR}from"@serenityjs/binarystream";import{Proto as LR,Serialize as y}from"@serenityjs/raknet";function h(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(h,"_ts_decorate");function g(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(g,"_ts_metadata");var u=class extends f{static{s(this,"StartGamePacket")}entityId;runtimeEntityId;playerGamemode;playerPosition;pitch;yaw;seed;biomeType;biomeName;dimension;generator;worldGamemode;hardcore;difficulty;spawnPosition;achievementsDisabled;editorWorldType;createdInEdior;exportedFromEdior;dayCycleStopTime;eduOffer;eduFeatures;eduProductUuid;rainLevel;lightningLevel;confirmedPlatformLockedContent;multiplayerGame;broadcastToLan;xblBroadcastMode;platformBroadcastMode;commandsEnabled;texturePacksRequired;gamerules;experiments;experimentsPreviouslyToggled;bonusChest;mapEnabled;permissionLevel;serverChunkTickRange;hasLockedBehaviorPack;hasLockedResourcePack;isFromLockedWorldTemplate;useMsaGamertagsOnly;isFromWorldTemplate;isWorldTemplateOptionLocked;onlySpawnV1Villagers;personaDisabled;customSkinsDisabled;emoteChatMuted;gameVersion;limitedWorldWidth;limitedWorldLength;isNewNether;eduResourceUriButtonName;eduResourceUriLink;experimentalGameplayOverride;chatRestrictionLevel;disablePlayerInteractions;serverIdentfier;worldIdentifier;scenarioIdentifier;levelId;worldName;premiumWorldTemplateId;isTrial;movementAuthority;rewindHistorySize;serverAuthoritativeBlockBreaking;currentTick;enchantmentSeed;blockTypeDefinitions;multiplayerCorrelationId;serverAuthoritativeInventory;engine;propertyData1;propertyData2;propertyData3;blockPaletteChecksum;worldTemplateId;clientSideGeneration;blockNetworkIdsAreHashes;serverControlledSounds};h([y($R),g("design:type",typeof BigInt>"u"?Object:BigInt)],u.prototype,"entityId",void 0);h([y(QR),g("design:type",typeof BigInt>"u"?Object:BigInt)],u.prototype,"runtimeEntityId",void 0);h([y(jt),g("design:type",typeof Gamemode>"u"?Object:Gamemode)],u.prototype,"playerGamemode",void 0);h([y(l),g("design:type",typeof l>"u"?Object:l)],u.prototype,"playerPosition",void 0);h([y(ds,Ct.Little),g("design:type",Number)],u.prototype,"pitch",void 0);h([y(ds,Ct.Little),g("design:type",Number)],u.prototype,"yaw",void 0);h([y(Wm,Ct.Little),g("design:type",typeof BigInt>"u"?Object:BigInt)],u.prototype,"seed",void 0);h([y(YR,Ct.Little),g("design:type",Number)],u.prototype,"biomeType",void 0);h([y(lt),g("design:type",String)],u.prototype,"biomeName",void 0);h([y(jt),g("design:type",Number)],u.prototype,"dimension",void 0);h([y(jt),g("design:type",Number)],u.prototype,"generator",void 0);h([y(jt),g("design:type",typeof Gamemode>"u"?Object:Gamemode)],u.prototype,"worldGamemode",void 0);h([y(B),g("design:type",Boolean)],u.prototype,"hardcore",void 0);h([y(jt),g("design:type",typeof Difficulty>"u"?Object:Difficulty)],u.prototype,"difficulty",void 0);h([y(b),g("design:type",typeof b>"u"?Object:b)],u.prototype,"spawnPosition",void 0);h([y(B),g("design:type",Boolean)],u.prototype,"achievementsDisabled",void 0);h([y(jt),g("design:type",Number)],u.prototype,"editorWorldType",void 0);h([y(B),g("design:type",Boolean)],u.prototype,"createdInEdior",void 0);h([y(B),g("design:type",Boolean)],u.prototype,"exportedFromEdior",void 0);h([y(jt),g("design:type",Number)],u.prototype,"dayCycleStopTime",void 0);h([y(jt),g("design:type",Number)],u.prototype,"eduOffer",void 0);h([y(B),g("design:type",Boolean)],u.prototype,"eduFeatures",void 0);h([y(lt),g("design:type",String)],u.prototype,"eduProductUuid",void 0);h([y(ds,Ct.Little),g("design:type",Number)],u.prototype,"rainLevel",void 0);h([y(ds,Ct.Little),g("design:type",Number)],u.prototype,"lightningLevel",void 0);h([y(B),g("design:type",Boolean)],u.prototype,"confirmedPlatformLockedContent",void 0);h([y(B),g("design:type",Boolean)],u.prototype,"multiplayerGame",void 0);h([y(B),g("design:type",Boolean)],u.prototype,"broadcastToLan",void 0);h([y(Gm),g("design:type",Number)],u.prototype,"xblBroadcastMode",void 0);h([y(Gm),g("design:type",Number)],u.prototype,"platformBroadcastMode",void 0);h([y(B),g("design:type",Boolean)],u.prototype,"commandsEnabled",void 0);h([y(B),g("design:type",Boolean)],u.prototype,"texturePacksRequired",void 0);h([y(Gr),g("design:type",typeof Array>"u"?Object:Array)],u.prototype,"gamerules",void 0);h([y(Qn),g("design:type",typeof Array>"u"?Object:Array)],u.prototype,"experiments",void 0);h([y(B),g("design:type",Boolean)],u.prototype,"experimentsPreviouslyToggled",void 0);h([y(B),g("design:type",Boolean)],u.prototype,"bonusChest",void 0);h([y(B),g("design:type",Boolean)],u.prototype,"mapEnabled",void 0);h([y(Fo),g("design:type",typeof PermissionLevel>"u"?Object:PermissionLevel)],u.prototype,"permissionLevel",void 0);h([y(pp,Ct.Little),g("design:type",Number)],u.prototype,"serverChunkTickRange",void 0);h([y(B),g("design:type",Boolean)],u.prototype,"hasLockedBehaviorPack",void 0);h([y(B),g("design:type",Boolean)],u.prototype,"hasLockedResourcePack",void 0);h([y(B),g("design:type",Boolean)],u.prototype,"isFromLockedWorldTemplate",void 0);h([y(B),g("design:type",Boolean)],u.prototype,"useMsaGamertagsOnly",void 0);h([y(B),g("design:type",Boolean)],u.prototype,"isFromWorldTemplate",void 0);h([y(B),g("design:type",Boolean)],u.prototype,"isWorldTemplateOptionLocked",void 0);h([y(B),g("design:type",Boolean)],u.prototype,"onlySpawnV1Villagers",void 0);h([y(B),g("design:type",Boolean)],u.prototype,"personaDisabled",void 0);h([y(B),g("design:type",Boolean)],u.prototype,"customSkinsDisabled",void 0);h([y(B),g("design:type",Boolean)],u.prototype,"emoteChatMuted",void 0);h([y(lt),g("design:type",String)],u.prototype,"gameVersion",void 0);h([y(pp,Ct.Little),g("design:type",Number)],u.prototype,"limitedWorldWidth",void 0);h([y(pp,Ct.Little),g("design:type",Number)],u.prototype,"limitedWorldLength",void 0);h([y(B),g("design:type",Boolean)],u.prototype,"isNewNether",void 0);h([y(lt),g("design:type",String)],u.prototype,"eduResourceUriButtonName",void 0);h([y(lt),g("design:type",String)],u.prototype,"eduResourceUriLink",void 0);h([y(B),g("design:type",Boolean)],u.prototype,"experimentalGameplayOverride",void 0);h([y(Fo),g("design:type",Number)],u.prototype,"chatRestrictionLevel",void 0);h([y(B),g("design:type",Boolean)],u.prototype,"disablePlayerInteractions",void 0);h([y(lt),g("design:type",String)],u.prototype,"serverIdentfier",void 0);h([y(lt),g("design:type",String)],u.prototype,"worldIdentifier",void 0);h([y(lt),g("design:type",String)],u.prototype,"scenarioIdentifier",void 0);h([y(lt),g("design:type",String)],u.prototype,"levelId",void 0);h([y(lt),g("design:type",String)],u.prototype,"worldName",void 0);h([y(lt),g("design:type",String)],u.prototype,"premiumWorldTemplateId",void 0);h([y(B),g("design:type",Boolean)],u.prototype,"isTrial",void 0);h([y(jt),g("design:type",typeof Hn>"u"?Object:Hn)],u.prototype,"movementAuthority",void 0);h([y(jt),g("design:type",Number)],u.prototype,"rewindHistorySize",void 0);h([y(B),g("design:type",Boolean)],u.prototype,"serverAuthoritativeBlockBreaking",void 0);h([y(KR,Ct.Little),g("design:type",typeof BigInt>"u"?Object:BigInt)],u.prototype,"currentTick",void 0);h([y(jt),g("design:type",Number)],u.prototype,"enchantmentSeed",void 0);h([y(bf),g("design:type",typeof Array>"u"?Object:Array)],u.prototype,"blockTypeDefinitions",void 0);h([y(lt),g("design:type",String)],u.prototype,"multiplayerCorrelationId",void 0);h([y(B),g("design:type",Boolean)],u.prototype,"serverAuthoritativeInventory",void 0);h([y(lt),g("design:type",String)],u.prototype,"engine",void 0);h([y(Fo),g("design:type",Object)],u.prototype,"propertyData1",void 0);h([y(Fo),g("design:type",Object)],u.prototype,"propertyData2",void 0);h([y(Fo),g("design:type",Object)],u.prototype,"propertyData3",void 0);h([y(Wm,Ct.Little),g("design:type",typeof BigInt>"u"?Object:BigInt)],u.prototype,"blockPaletteChecksum",void 0);h([y(XR),g("design:type",String)],u.prototype,"worldTemplateId",void 0);h([y(B),g("design:type",Boolean)],u.prototype,"clientSideGeneration",void 0);h([y(B),g("design:type",Boolean)],u.prototype,"blockNetworkIdsAreHashes",void 0);h([y(B),g("design:type",Boolean)],u.prototype,"serverControlledSounds",void 0);u=h([LR(p.StartGame)],u);import{Uint8 as ER,Bool as vR,VarString as ls,Endianness as Am}from"@serenityjs/binarystream";import{Proto as tk,Serialize as He}from"@serenityjs/raknet";function ee(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(ee,"_ts_decorate");function qe(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(qe,"_ts_metadata");var Rt=class extends f{static{s(this,"TextPacket")}type;needsTranslation;source;message;parameters;xuid;platformChatId;filtered};ee([He(ER),qe("design:type",typeof TextPacketType>"u"?Object:TextPacketType)],Rt.prototype,"type",void 0);ee([He(vR),qe("design:type",Boolean)],Rt.prototype,"needsTranslation",void 0);ee([He(Df,Am.Little,"type"),qe("design:type",Object)],Rt.prototype,"source",void 0);ee([He(ls),qe("design:type",String)],Rt.prototype,"message",void 0);ee([He(Nf,Am.Little,"type"),qe("design:type",Object)],Rt.prototype,"parameters",void 0);ee([He(ls),qe("design:type",String)],Rt.prototype,"xuid",void 0);ee([He(ls),qe("design:type",String)],Rt.prototype,"platformChatId",void 0);ee([He(ls),qe("design:type",String)],Rt.prototype,"filtered",void 0);Rt=ee([tk(p.Text)],Rt);import{VarString as Ym}from"@serenityjs/binarystream";import{Proto as ek,Serialize as Km}from"@serenityjs/raknet";function fp(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(fp,"_ts_decorate");function Jm(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Jm,"_ts_metadata");var xi=class extends f{static{s(this,"ToastRequestPacket")}title;message};fp([Km(Ym),Jm("design:type",String)],xi.prototype,"title",void 0);fp([Km(Ym),Jm("design:type",String)],xi.prototype,"message",void 0);xi=fp([ek(p.ToastRequest)],xi);import{Endianness as rk,Int64 as ik,Uint8 as Qm}from"@serenityjs/binarystream";import{Proto as ok,Serialize as us}from"@serenityjs/raknet";function To(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(To,"_ts_decorate");function ms(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(ms,"_ts_metadata");var We=class extends f{static{s(this,"UpdateAbilitiesPacket")}entityUniqueId;permissionLevel;commandPermissionLevel;abilities};To([us(ik,rk.Little),ms("design:type",typeof BigInt>"u"?Object:BigInt)],We.prototype,"entityUniqueId",void 0);To([us(Qm),ms("design:type",typeof PermissionLevel>"u"?Object:PermissionLevel)],We.prototype,"permissionLevel",void 0);To([us(Qm),ms("design:type",typeof CommandPermissionLevel>"u"?Object:CommandPermissionLevel)],We.prototype,"commandPermissionLevel",void 0);To([us(ea),ms("design:type",typeof Array>"u"?Object:Array)],We.prototype,"abilities",void 0);We=To([ok(p.UpdateAbilities)],We);import{Bool as Ho}from"@serenityjs/binarystream";import{Proto as nk,Serialize as Wo}from"@serenityjs/raknet";function Ri(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Ri,"_ts_decorate");function qo(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(qo,"_ts_metadata");var re=class extends f{static{s(this,"UpdateAdventureSettingsPacket")}noPvm;noPvp;immutableWorld;showNameTags;autoJump};Ri([Wo(Ho),qo("design:type",Boolean)],re.prototype,"noPvm",void 0);Ri([Wo(Ho),qo("design:type",Boolean)],re.prototype,"noPvp",void 0);Ri([Wo(Ho),qo("design:type",Boolean)],re.prototype,"immutableWorld",void 0);Ri([Wo(Ho),qo("design:type",Boolean)],re.prototype,"showNameTags",void 0);Ri([Wo(Ho),qo("design:type",Boolean)],re.prototype,"autoJump",void 0);re=Ri([nk(p.UpdateAdventureSettings)],re);import{VarLong as ak}from"@serenityjs/binarystream";import{Proto as sk,Serialize as lp}from"@serenityjs/raknet";function hs(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(hs,"_ts_decorate");function dp(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(dp,"_ts_metadata");var Ir=class extends f{static{s(this,"UpdateAttributesPacket")}runtimeActorId;attributes;inputTick};hs([lp(ak),dp("design:type",typeof BigInt>"u"?Object:BigInt)],Ir.prototype,"runtimeActorId",void 0);hs([lp(Mf),dp("design:type",typeof Array>"u"?Object:Array)],Ir.prototype,"attributes",void 0);hs([lp(Q),dp("design:type",typeof BigInt>"u"?Object:BigInt)],Ir.prototype,"inputTick",void 0);Ir=hs([sk(p.UpdateAttributes)],Ir);import{VarInt as mp}from"@serenityjs/binarystream";import{Proto as ck,Serialize as ys}from"@serenityjs/raknet";function Go(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Go,"_ts_decorate");function gs(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(gs,"_ts_metadata");var Ge=class extends f{static{s(this,"UpdateBlockPacket")}position;networkBlockId;flags;layer};Go([ys(b),gs("design:type",typeof b>"u"?Object:b)],Ge.prototype,"position",void 0);Go([ys(mp),gs("design:type",Number)],Ge.prototype,"networkBlockId",void 0);Go([ys(mp),gs("design:type",typeof UpdateBlockFlagsType>"u"?Object:UpdateBlockFlagsType)],Ge.prototype,"flags",void 0);Go([ys(mp),gs("design:type",typeof UpdateBlockLayerType>"u"?Object:UpdateBlockLayerType)],Ge.prototype,"layer",void 0);Ge=Go([ck(p.UpdateBlock)],Ge);import{ZigZag as fk}from"@serenityjs/binarystream";import{Proto as dk,Serialize as lk}from"@serenityjs/raknet";function $m(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s($m,"_ts_decorate");function pk(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(pk,"_ts_metadata");var Ao=class extends f{static{s(this,"SetTimePacket")}time};$m([lk(fk),pk("design:type",Number)],Ao.prototype,"time",void 0);Ao=$m([dk(p.SetTime)],Ao);import{VarString as uk}from"@serenityjs/binarystream";import{Proto as hk,Serialize as gk}from"@serenityjs/raknet";function Xm(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Xm,"_ts_decorate");function mk(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(mk,"_ts_metadata");var Jo=class extends f{static{s(this,"RemoveObjectivePacket")}objectiveName};Xm([gk(uk),mk("design:type",String)],Jo.prototype,"objectiveName",void 0);Jo=Xm([hk(p.RemoveObjective)],Jo);import{VarString as ws,ZigZag as yk}from"@serenityjs/binarystream";import{Proto as wk,Serialize as Ko}from"@serenityjs/raknet";function ki(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(ki,"_ts_decorate");function Yo(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Yo,"_ts_metadata");var ie=class extends f{static{s(this,"SetDisplayObjectivePacket")}displaySlot;objectiveName;displayName;criteriaName;sortOrder};ki([Ko(ws),Yo("design:type",typeof DisplaySlotType>"u"?Object:DisplaySlotType)],ie.prototype,"displaySlot",void 0);ki([Ko(ws),Yo("design:type",String)],ie.prototype,"objectiveName",void 0);ki([Ko(ws),Yo("design:type",String)],ie.prototype,"displayName",void 0);ki([Ko(ws),Yo("design:type",String)],ie.prototype,"criteriaName",void 0);ki([Ko(yk),Yo("design:type",typeof ObjectiveSortOrder>"u"?Object:ObjectiveSortOrder)],ie.prototype,"sortOrder",void 0);ie=ki([wk(p.SetDisplayObjective)],ie);import{VarInt as bk}from"@serenityjs/binarystream";import{Proto as Pk,Serialize as Em}from"@serenityjs/raknet";function up(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(up,"_ts_decorate");function Lm(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Lm,"_ts_metadata");var Ii=class extends f{static{s(this,"SetScorePacket")}type;entries};up([Em(bk),Lm("design:type",typeof ScoreboardActionType>"u"?Object:ScoreboardActionType)],Ii.prototype,"type",void 0);up([Em(Sd,0,"type"),Lm("design:type",typeof Array>"u"?Object:Array)],Ii.prototype,"entries",void 0);Ii=up([Pk(p.SetScore)],Ii);import{VarInt as xk}from"@serenityjs/binarystream";import{Proto as Rk,Serialize as tu}from"@serenityjs/raknet";function hp(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(hp,"_ts_decorate");function vm(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(vm,"_ts_metadata");var Si=class extends f{static{s(this,"SetScoreboardIdentityPacket")}action;entries};hp([tu(xk),vm("design:type",typeof ScoreboardIdentityAction>"u"?Object:ScoreboardIdentityAction)],Si.prototype,"action",void 0);hp([tu(fa),vm("design:type",typeof fa>"u"?Object:fa)],Si.prototype,"entries",void 0);Si=hp([Rk(p.SetScoreboardIdentity)],Si);import{VarString as kk,Uint16 as Ik,Endianness as Sk,Bool as Bk}from"@serenityjs/binarystream";import{Proto as Ok,Serialize as yp}from"@serenityjs/raknet";function bs(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(bs,"_ts_decorate");function gp(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(gp,"_ts_metadata");var Sr=class extends f{static{s(this,"TransferPacket")}address;port;reloadWorld};bs([yp(kk),gp("design:type",String)],Sr.prototype,"address",void 0);bs([yp(Ik,Sk.Little),gp("design:type",Number)],Sr.prototype,"port",void 0);bs([yp(Bk),gp("design:type",Boolean)],Sr.prototype,"reloadWorld",void 0);Sr=bs([Ok(p.Transfer)],Sr);import{Proto as Vk,Serialize as ru}from"@serenityjs/raknet";import{Uint8 as Ck}from"@serenityjs/binarystream";function wp(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(wp,"_ts_decorate");function eu(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(eu,"_ts_metadata");var Bi=class extends f{static{s(this,"SetHudPacket")}elements;visibility};wp([ru(Vd),eu("design:type",typeof Array>"u"?Object:Array)],Bi.prototype,"elements",void 0);wp([ru(Ck),eu("design:type",typeof HudVisibility>"u"?Object:HudVisibility)],Bi.prototype,"visibility",void 0);Bi=wp([Vk(p.SetHud)],Bi);import{VarLong as ou}from"@serenityjs/binarystream";import{Proto as jk,Serialize as nu}from"@serenityjs/raknet";function bp(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(bp,"_ts_decorate");function iu(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(iu,"_ts_metadata");var Oi=class extends f{static{s(this,"TakeItemActorPacket")}itemRuntimeId;targetRuntimeId};bp([nu(ou),iu("design:type",typeof BigInt>"u"?Object:BigInt)],Oi.prototype,"itemRuntimeId",void 0);bp([nu(ou),iu("design:type",typeof BigInt>"u"?Object:BigInt)],Oi.prototype,"targetRuntimeId",void 0);Oi=bp([jk(p.TakeItemActor)],Oi);import{Bool as _k,Endianness as Uk,Uint64 as Dk}from"@serenityjs/binarystream";import{Proto as Nk,Serialize as su}from"@serenityjs/raknet";function Pp(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Pp,"_ts_decorate");function au(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(au,"_ts_metadata");var Vi=class extends f{static{s(this,"NetworkStackLatencyPacket")}timestamp;fromServer};Pp([su(Dk,Uk.Little),au("design:type",typeof BigInt>"u"?Object:BigInt)],Vi.prototype,"timestamp",void 0);Pp([su(_k),au("design:type",Boolean)],Vi.prototype,"fromServer",void 0);Vi=Pp([Nk(p.NetworkStackLatency)],Vi);import{VarInt as Zk,ZigZong as Mk,Endianness as cu}from"@serenityjs/binarystream";import{Proto as zk,Serialize as xs}from"@serenityjs/raknet";function Qo(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Qo,"_ts_decorate");function Ps(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Ps,"_ts_metadata");var Ae=class extends f{static{s(this,"BossEventPacket")}targetUniqueId;type;add;update};Qo([xs(Mk),Ps("design:type",typeof BigInt>"u"?Object:BigInt)],Ae.prototype,"targetUniqueId",void 0);Qo([xs(Zk),Ps("design:type",typeof BossEventUpdateType>"u"?Object:BossEventUpdateType)],Ae.prototype,"type",void 0);Qo([xs(la,cu.Little,"type"),Ps("design:type",typeof la>"u"?Object:la)],Ae.prototype,"add",void 0);Qo([xs(ua,cu.Little,"type"),Ps("design:type",typeof ua>"u"?Object:ua)],Ae.prototype,"update",void 0);Ae=Qo([zk(p.BossEvent)],Ae);import{Endianness as Fk,Uint64 as Tk,ZigZag as qk,VarString as Rs}from"@serenityjs/binarystream";import{Proto as Hk,Serialize as ji}from"@serenityjs/raknet";function Br(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Br,"_ts_decorate");function Ci(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Ci,"_ts_metadata");var Tt=class extends f{static{s(this,"NpcDialoguePacket")}uniqueEntityId;action;dialogue;scene;name;json};Br([ji(Tk,Fk.Little),Ci("design:type",typeof BigInt>"u"?Object:BigInt)],Tt.prototype,"uniqueEntityId",void 0);Br([ji(qk),Ci("design:type",typeof NpcDialogueAction>"u"?Object:NpcDialogueAction)],Tt.prototype,"action",void 0);Br([ji(Rs),Ci("design:type",String)],Tt.prototype,"dialogue",void 0);Br([ji(Rs),Ci("design:type",String)],Tt.prototype,"scene",void 0);Br([ji(Rs),Ci("design:type",String)],Tt.prototype,"name",void 0);Br([ji(Rs),Ci("design:type",String)],Tt.prototype,"json",void 0);Tt=Br([Hk(p.NpcDialogue)],Tt);import{Proto as Wk,Serialize as Rp}from"@serenityjs/raknet";import{Uint8 as Gk,VarLong as Ak,ZigZag as Jk}from"@serenityjs/binarystream";function ks(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(ks,"_ts_decorate");function xp(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(xp,"_ts_metadata");var Or=class extends f{static{s(this,"ActorEventPacket")}actorRuntimeId;event;data};ks([Rp(Ak),xp("design:type",typeof BigInt>"u"?Object:BigInt)],Or.prototype,"actorRuntimeId",void 0);ks([Rp(Gk),xp("design:type",Number)],Or.prototype,"event",void 0);ks([Rp(Jk),xp("design:type",Number)],Or.prototype,"data",void 0);Or=ks([Wk(p.ActorEvent)],Or);import{Proto as Yk,Serialize as Cr}from"@serenityjs/raknet";import{Float64 as Kk,VarInt as Qk,VarString as Is}from"@serenityjs/binarystream";function Je(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Je,"_ts_decorate");function Vr(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Vr,"_ts_metadata");var _t=class extends f{static{s(this,"AnimateEntityPacket")}animation;nextState;stopExpression;stopExpressionVersion;controller;blendOutTime;actorRuntimeIds};Je([Cr(Is),Vr("design:type",String)],_t.prototype,"animation",void 0);Je([Cr(Is),Vr("design:type",String)],_t.prototype,"nextState",void 0);Je([Cr(Is),Vr("design:type",String)],_t.prototype,"stopExpression",void 0);Je([Cr(Qk),Vr("design:type",Number)],_t.prototype,"stopExpressionVersion",void 0);Je([Cr(Is),Vr("design:type",String)],_t.prototype,"controller",void 0);Je([Cr(Kk),Vr("design:type",Number)],_t.prototype,"blendOutTime",void 0);Je([Cr(ha),Vr("design:type",typeof ha>"u"?Object:ha)],_t.prototype,"actorRuntimeIds",void 0);_t=Je([Yk(p.AnimateEntity)],_t);import{Proto as $k,Serialize as fu}from"@serenityjs/raknet";import{VarLong as Xk}from"@serenityjs/binarystream";function kp(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(kp,"_ts_decorate");function pu(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(pu,"_ts_metadata");var _i=class extends f{static{s(this,"EmoteListPacket")}runtimeId;emoteIds};kp([fu(Xk),pu("design:type",typeof BigInt>"u"?Object:BigInt)],_i.prototype,"runtimeId",void 0);kp([fu(jd),pu("design:type",typeof Array>"u"?Object:Array)],_i.prototype,"emoteIds",void 0);_i=kp([$k(p.EmoteList)],_i);import{Proto as Lk,Serialize as Di}from"@serenityjs/raknet";import{Byte as Ek,VarInt as vk,VarString as Ip,VarLong as tI}from"@serenityjs/binarystream";function jr(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(jr,"_ts_decorate");function Ui(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Ui,"_ts_metadata");var qt=class extends f{static{s(this,"EmotePacket")}actorRuntimeId;emoteId;tickLength;xuid;platformChatId;flags};jr([Di(tI),Ui("design:type",typeof BigInt>"u"?Object:BigInt)],qt.prototype,"actorRuntimeId",void 0);jr([Di(Ip),Ui("design:type",String)],qt.prototype,"emoteId",void 0);jr([Di(vk),Ui("design:type",Number)],qt.prototype,"tickLength",void 0);jr([Di(Ip),Ui("design:type",String)],qt.prototype,"xuid",void 0);jr([Di(Ip),Ui("design:type",String)],qt.prototype,"platformChatId",void 0);jr([Di(Ek),Ui("design:type",typeof EmoteFlags>"u"?Object:EmoteFlags)],qt.prototype,"flags",void 0);qt=jr([Lk(p.Emote)],qt);import{Proto as eI,Serialize as Xo}from"@serenityjs/raknet";import{Uuid as rI,VarString as du,Bool as iI}from"@serenityjs/binarystream";function Ni(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Ni,"_ts_decorate");function $o(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s($o,"_ts_metadata");var oe=class extends f{static{s(this,"PlayerSkinPacket")}uuid;skin;skinName;oldSkinName;isVerified};Ni([Xo(rI),$o("design:type",String)],oe.prototype,"uuid",void 0);Ni([Xo(or),$o("design:type",typeof or>"u"?Object:or)],oe.prototype,"skin",void 0);Ni([Xo(du),$o("design:type",String)],oe.prototype,"skinName",void 0);Ni([Xo(du),$o("design:type",String)],oe.prototype,"oldSkinName",void 0);Ni([Xo(iI),$o("design:type",Boolean)],oe.prototype,"isVerified",void 0);oe=Ni([eI(p.PlayerSkin)],oe);import{Proto as oI,Serialize as mu}from"@serenityjs/raknet";import{CompoundTag as Sp}from"@serenityjs/nbt";function Bp(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Bp,"_ts_decorate");function lu(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(lu,"_ts_metadata");var Zi=class extends f{static{s(this,"BlockActorDataPacket")}position;nbt};Bp([mu(b),lu("design:type",typeof b>"u"?Object:b)],Zi.prototype,"position",void 0);Bp([mu(Sp,!0),lu("design:type",typeof Sp>"u"?Object:Sp)],Zi.prototype,"nbt",void 0);Zi=Bp([oI(p.BlockActorData)],Zi);import{Int32 as aI,Endianness as sI}from"@serenityjs/binarystream";import{Proto as cI,Serialize as pI}from"@serenityjs/raknet";function uu(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(uu,"_ts_decorate");function nI(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(nI,"_ts_metadata");var Lo=class extends f{static{s(this,"AwardAchievementPacket")}identifier};uu([pI(aI,sI.Little),nI("design:type",Number)],Lo.prototype,"identifier",void 0);Lo=uu([cI(p.AwardAchievement)],Lo);import{VarString as dI}from"@serenityjs/binarystream";import{Proto as lI,Serialize as mI}from"@serenityjs/raknet";function hu(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(hu,"_ts_decorate");function fI(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(fI,"_ts_metadata");var Eo=class extends f{static{s(this,"ServerToClientHandshakePacket")}token};hu([mI(dI),fI("design:type",String)],Eo.prototype,"token",void 0);Eo=hu([lI(p.ServerToClientHandshake)],Eo);import{Proto as uI,Serialize as yu}from"@serenityjs/raknet";import{VarString as hI}from"@serenityjs/binarystream";function Op(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Op,"_ts_decorate");function gu(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(gu,"_ts_metadata");var Mi=class extends f{static{s(this,"DeathInfoPacket")}cause;deathParameters};Op([yu(hI),gu("design:type",String)],Mi.prototype,"cause",void 0);Op([yu(Ud),gu("design:type",typeof Array>"u"?Object:Array)],Mi.prototype,"deathParameters",void 0);Mi=Op([uI(p.DeathInfo)],Mi);import{Proto as gI,Serialize as tn}from"@serenityjs/raknet";import{Bool as yI,VarInt as Ss}from"@serenityjs/binarystream";function zi(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(zi,"_ts_decorate");function vo(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(vo,"_ts_metadata");var ne=class extends f{static{s(this,"SetPlayerInventoryOptionsPacket")}leftTab;rightTab;filtering;layout;craftingLayout};zi([tn(Ss),vo("design:type",typeof InventoryLeftTab>"u"?Object:InventoryLeftTab)],ne.prototype,"leftTab",void 0);zi([tn(Ss),vo("design:type",typeof InventoryRightTab>"u"?Object:InventoryRightTab)],ne.prototype,"rightTab",void 0);zi([tn(yI),vo("design:type",Boolean)],ne.prototype,"filtering",void 0);zi([tn(Ss),vo("design:type",typeof InventoryLayout>"u"?Object:InventoryLayout)],ne.prototype,"layout",void 0);zi([tn(Ss),vo("design:type",typeof InventoryLayout>"u"?Object:InventoryLayout)],ne.prototype,"craftingLayout",void 0);ne=zi([gI(p.SetPlayerInventoryOptions)],ne);import{Proto as bI}from"@serenityjs/raknet";function wI(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(wI,"_ts_decorate");var Bs=class extends f{static{s(this,"ClientboundCloseFormPacket")}};Bs=wI([bI(p.ClientboundCloseForm)],Bs);import{Bool as PI,Byte as xI,VarInt as RI,VarLong as kI,ZigZag as wu}from"@serenityjs/binarystream";import{Proto as II,Serialize as Ur}from"@serenityjs/raknet";function Ye(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Ye,"_ts_decorate");function _r(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(_r,"_ts_metadata");var Ut=class extends f{static{s(this,"MobEffectPacket")}runtimeId;eventId;effectId;amplifier;particles;duration;inputTick};Ye([Ur(kI),_r("design:type",typeof BigInt>"u"?Object:BigInt)],Ut.prototype,"runtimeId",void 0);Ye([Ur(xI),_r("design:type",typeof MobEffectEvents>"u"?Object:MobEffectEvents)],Ut.prototype,"eventId",void 0);Ye([Ur(wu),_r("design:type",typeof EffectType>"u"?Object:EffectType)],Ut.prototype,"effectId",void 0);Ye([Ur(wu),_r("design:type",Number)],Ut.prototype,"amplifier",void 0);Ye([Ur(PI),_r("design:type",Boolean)],Ut.prototype,"particles",void 0);Ye([Ur(RI),_r("design:type",Number)],Ut.prototype,"duration",void 0);Ye([Ur(Q),_r("design:type",typeof BigInt>"u"?Object:BigInt)],Ut.prototype,"inputTick",void 0);Ut=Ye([II(p.MobEffect)],Ut);import{Proto as SI,Serialize as Pu}from"@serenityjs/raknet";import{Endianness as xu,Int32 as BI,Short as OI}from"@serenityjs/binarystream";function Vp(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Vp,"_ts_decorate");function bu(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(bu,"_ts_metadata");var Fi=class extends f{static{s(this,"CompletedUsingItemPacket")}itemNetworkId;useMethod};Vp([Pu(OI,xu.Little),bu("design:type",Number)],Fi.prototype,"itemNetworkId",void 0);Vp([Pu(BI,xu.Little),bu("design:type",typeof ItemUseMethod>"u"?Object:ItemUseMethod)],Fi.prototype,"useMethod",void 0);Fi=Vp([SI(p.CompletedUsingItem)],Fi);import{VarLong as VI,VarString as Ru,Uint8 as ku}from"@serenityjs/binarystream";import{Proto as CI,Serialize as rn}from"@serenityjs/raknet";function Ti(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Ti,"_ts_decorate");function en(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(en,"_ts_metadata");var ae=class extends f{static{s(this,"NpcRequestPacket")}runtimeActorId;type;actions;index;scene};Ti([rn(VI),en("design:type",typeof BigInt>"u"?Object:BigInt)],ae.prototype,"runtimeActorId",void 0);Ti([rn(ku),en("design:type",typeof NpcRequestType>"u"?Object:NpcRequestType)],ae.prototype,"type",void 0);Ti([rn(Ru),en("design:type",String)],ae.prototype,"actions",void 0);Ti([rn(ku),en("design:type",Number)],ae.prototype,"index",void 0);Ti([rn(Ru),en("design:type",String)],ae.prototype,"scene",void 0);ae=Ti([CI(p.NpcRequest)],ae);import{Proto as jI,Serialize as Su}from"@serenityjs/raknet";import{Bool as _I}from"@serenityjs/binarystream";function Cp(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Cp,"_ts_decorate");function Iu(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Iu,"_ts_metadata");var qi=class extends f{static{s(this,"OpenSignPacket")}position;isFrontSide};Cp([Su(b),Iu("design:type",typeof b>"u"?Object:b)],qi.prototype,"position",void 0);Cp([Su(_I),Iu("design:type",Boolean)],qi.prototype,"isFrontSide",void 0);qi=Cp([jI(p.OpenSign)],qi);import{Bool as UI,ZigZag as DI}from"@serenityjs/binarystream";import{Proto as NI,Serialize as Ou}from"@serenityjs/raknet";function jp(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(jp,"_ts_decorate");function Bu(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Bu,"_ts_metadata");var Hi=class extends f{static{s(this,"ServerboundLoadingScreenPacketPacket")}type;hasScreenId};jp([Ou(DI),Bu("design:type",typeof ServerboundLoadingScreenType>"u"?Object:ServerboundLoadingScreenType)],Hi.prototype,"type",void 0);jp([Ou(UI),Bu("design:type",Boolean)],Hi.prototype,"hasScreenId",void 0);Hi=jp([NI(p.ServerboundLoadingScreenPacket)],Hi);import{Proto as ZI,Serialize as Vs}from"@serenityjs/raknet";import{Float32 as Vu,Uint8 as Cu}from"@serenityjs/binarystream";function on(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(on,"_ts_decorate");function Os(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Os,"_ts_metadata");var Ke=class extends f{static{s(this,"CameraShakePacket")}intensity;duration;shakeType;shakeAction};on([Vs(Vu),Os("design:type",Number)],Ke.prototype,"intensity",void 0);on([Vs(Vu),Os("design:type",Number)],Ke.prototype,"duration",void 0);on([Vs(Cu),Os("design:type",typeof ShakeType>"u"?Object:ShakeType)],Ke.prototype,"shakeType",void 0);on([Vs(Cu),Os("design:type",typeof ShakeAction>"u"?Object:ShakeAction)],Ke.prototype,"shakeAction",void 0);Ke=on([ZI(p.CameraShake)],Ke);import{Proto as MI,Serialize as Up}from"@serenityjs/raknet";import{Uint8 as ju}from"@serenityjs/binarystream";function Cs(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Cs,"_ts_decorate");function _p(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(_p,"_ts_metadata");var Dr=class extends f{static{s(this,"BookEditPacket")}action;bookSlot;actions};Cs([Up(ju),_p("design:type",typeof BookEditAction>"u"?Object:BookEditAction)],Dr.prototype,"action",void 0);Cs([Up(ju),_p("design:type",Number)],Dr.prototype,"bookSlot",void 0);Cs([Up(ya,!1,"action"),_p("design:type",typeof ya>"u"?Object:ya)],Dr.prototype,"actions",void 0);Dr=Cs([MI(p.BookEdit)],Dr);import{Proto as zI,Serialize as Uu}from"@serenityjs/raknet";import{VarInt as FI,VarString as TI}from"@serenityjs/binarystream";function Dp(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Dp,"_ts_decorate");function _u(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(_u,"_ts_metadata");var Wi=class extends f{static{s(this,"PlayerStartItemCooldownPacket")}category;duration};Dp([Uu(TI),_u("design:type",String)],Wi.prototype,"category",void 0);Dp([Uu(FI),_u("design:type",Number)],Wi.prototype,"duration",void 0);Wi=Dp([zI(p.PlayerStartItemCooldown)],Wi);import{Proto as HI,Serialize as WI}from"@serenityjs/raknet";function Du(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Du,"_ts_decorate");function qI(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(qI,"_ts_metadata");var nn=class extends f{static{s(this,"CameraPresetsPacket")}presets};Du([WI(Wd),qI("design:type",typeof Array>"u"?Object:Array)],nn.prototype,"presets",void 0);nn=Du([HI(p.CameraPresetsPacket)],nn);import{Proto as AI,Serialize as JI}from"@serenityjs/raknet";function Nu(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Nu,"_ts_decorate");function GI(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(GI,"_ts_metadata");var an=class extends f{static{s(this,"CameraInstructionsPacket")}instruction};Nu([JI(ba),GI("design:type",typeof ba>"u"?Object:ba)],an.prototype,"instruction",void 0);an=Nu([AI(p.CameraInstructions)],an);import{Proto as YI,Serialize as cn}from"@serenityjs/raknet";import{Bool as KI}from"@serenityjs/binarystream";function Gi(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Gi,"_ts_decorate");function sn(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(sn,"_ts_metadata");var se=class extends f{static{s(this,"CraftingDataPacket")}crafting;potions;containers;materitalReducers;clearRecipes};Gi([cn(Xd),sn("design:type",typeof Array>"u"?Object:Array)],se.prototype,"crafting",void 0);Gi([cn(Ld),sn("design:type",typeof Array>"u"?Object:Array)],se.prototype,"potions",void 0);Gi([cn(Ed),sn("design:type",typeof Array>"u"?Object:Array)],se.prototype,"containers",void 0);Gi([cn(vd),sn("design:type",typeof Array>"u"?Object:Array)],se.prototype,"materitalReducers",void 0);Gi([cn(KI),sn("design:type",Boolean)],se.prototype,"clearRecipes",void 0);se=Gi([YI(p.CraftingData)],se);import{Proto as QI,Serialize as fn}from"@serenityjs/raknet";import{Byte as $I,ZigZong as XI,VarString as LI}from"@serenityjs/binarystream";function Ai(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Ai,"_ts_decorate");function pn(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(pn,"_ts_metadata");var ce=class extends f{static{s(this,"SpawnParticleEffectPacket")}dimensionId;uniqueId;position;effectName;molangVariables};Ai([fn($I),pn("design:type",Number)],ce.prototype,"dimensionId",void 0);Ai([fn(XI),pn("design:type",typeof BigInt>"u"?Object:BigInt)],ce.prototype,"uniqueId",void 0);Ai([fn(l),pn("design:type",typeof l>"u"?Object:l)],ce.prototype,"position",void 0);Ai([fn(LI),pn("design:type",String)],ce.prototype,"effectName",void 0);Ai([fn(I),pn("design:type",Object)],ce.prototype,"molangVariables",void 0);ce=Ai([QI(p.SpawnParticleEffect)],ce);import{Proto as EI,Serialize as Zp}from"@serenityjs/raknet";import{Int8 as vI,ZigZag as Zu}from"@serenityjs/binarystream";function js(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(js,"_ts_decorate");function Np(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Np,"_ts_metadata");var Nr=class extends f{static{s(this,"ContainerSetDataPacket")}containerId;type;value};js([Zp(vI),Np("design:type",typeof ContainerId>"u"?Object:ContainerId)],Nr.prototype,"containerId",void 0);js([Zp(Zu),Np("design:type",typeof ContainerDataType>"u"?Object:ContainerDataType)],Nr.prototype,"type",void 0);js([Zp(Zu),Np("design:type",Number)],Nr.prototype,"value",void 0);Nr=js([EI(p.ContainerSetData)],Nr);import{Proto as e0,Serialize as r0}from"@serenityjs/raknet";import{CompoundTag as Mp}from"@serenityjs/nbt";function Mu(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Mu,"_ts_decorate");function t0(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(t0,"_ts_metadata");var dn=class extends f{static{s(this,"AvailableActorIdentifiersPacket")}data};Mu([r0(Mp,!0),t0("design:type",typeof Mp>"u"?Object:Mp)],dn.prototype,"data",void 0);dn=Mu([e0(p.AvailableActorIdentifiers)],dn);import{Proto as i0,Serialize as Us}from"@serenityjs/raknet";import{Bool as zu}from"@serenityjs/binarystream";function ln(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(ln,"_ts_decorate");function _s(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(_s,"_ts_metadata");var Qe=class extends f{static{s(this,"StructureBlockUpdatePacket")}blockPosition;structureEditData;trigger;isWaterLogged};ln([Us(b),_s("design:type",typeof b>"u"?Object:b)],Qe.prototype,"blockPosition",void 0);ln([Us(Pa),_s("design:type",typeof Pa>"u"?Object:Pa)],Qe.prototype,"structureEditData",void 0);ln([Us(zu),_s("design:type",Boolean)],Qe.prototype,"trigger",void 0);ln([Us(zu),_s("design:type",Boolean)],Qe.prototype,"isWaterLogged",void 0);Qe=ln([i0(p.StructureBlockUpdate)],Qe);import{Proto as n0,Serialize as a0}from"@serenityjs/raknet";function Fu(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Fu,"_ts_decorate");function o0(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(o0,"_ts_metadata");var mn=class extends f{static{s(this,"DimensionDataPacket")}definitionGroup};Fu([a0(xa),o0("design:type",typeof xa>"u"?Object:xa)],mn.prototype,"definitionGroup",void 0);mn=Fu([n0(p.DimensionData)],mn);import{Proto as c0,Serialize as p0}from"@serenityjs/raknet";function Tu(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Tu,"_ts_decorate");function s0(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(s0,"_ts_metadata");var un=class extends f{static{s(this,"PlayerEnchantOptionsPacket")}enchantOptions};Tu([p0(kl),s0("design:type",typeof Array>"u"?Object:Array)],un.prototype,"enchantOptions",void 0);un=Tu([c0(p.PlayerEnchantOptions)],un);import{Proto as d0}from"@serenityjs/raknet";function f0(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(f0,"_ts_decorate");var Ds=class extends f{static{s(this,"ClientToServerHandshakePacket")}};Ds=f0([d0(p.ClientToServerHandshake)],Ds);import{VarLong as l0}from"@serenityjs/binarystream";import{Proto as m0,Serialize as Yi}from"@serenityjs/raknet";function Zr(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Zr,"_ts_decorate");function Ji(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Ji,"_ts_metadata");var Ht=class extends f{static{s(this,"MobArmorEquipmentPacket")}runtimeId;helmet;chestplate;leggings;boots;body};Zr([Yi(l0),Ji("design:type",typeof BigInt>"u"?Object:BigInt)],Ht.prototype,"runtimeId",void 0);Zr([Yi(R),Ji("design:type",typeof R>"u"?Object:R)],Ht.prototype,"helmet",void 0);Zr([Yi(R),Ji("design:type",typeof R>"u"?Object:R)],Ht.prototype,"chestplate",void 0);Zr([Yi(R),Ji("design:type",typeof R>"u"?Object:R)],Ht.prototype,"leggings",void 0);Zr([Yi(R),Ji("design:type",typeof R>"u"?Object:R)],Ht.prototype,"boots",void 0);Zr([Yi(R),Ji("design:type",typeof R>"u"?Object:R)],Ht.prototype,"body",void 0);Ht=Zr([m0(p.MobArmorEquipment)],Ht);import{ZigZag as h0}from"@serenityjs/binarystream";import{Proto as g0,Serialize as y0}from"@serenityjs/raknet";function qu(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(qu,"_ts_decorate");function u0(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(u0,"_ts_metadata");var hn=class extends f{static{s(this,"RiderJumpPacket")}strength};qu([y0(h0),u0("design:type",Number)],hn.prototype,"strength",void 0);hn=qu([g0(p.RiderJump)],hn);import{Proto as w0,Serialize as Fp}from"@serenityjs/raknet";import{ZigZag as Hu}from"@serenityjs/binarystream";function Ns(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Ns,"_ts_decorate");function zp(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(zp,"_ts_metadata");var Mr=class extends f{static{s(this,"BlockEventPacket")}position;type;data};Ns([Fp(b),zp("design:type",typeof b>"u"?Object:b)],Mr.prototype,"position",void 0);Ns([Fp(Hu),zp("design:type",typeof BlockEventType>"u"?Object:BlockEventType)],Mr.prototype,"type",void 0);Ns([Fp(Hu),zp("design:type",Number)],Mr.prototype,"data",void 0);Mr=Ns([w0(p.BlockEvent)],Mr);import{Bool as b0,Endianness as P0,Uint64 as x0,Uint8 as R0}from"@serenityjs/binarystream";import{Proto as k0,Serialize as qp}from"@serenityjs/raknet";function Zs(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Zs,"_ts_decorate");function Tp(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Tp,"_ts_metadata");var zr=class extends f{static{s(this,"EntityPickRequestPacket")}uniqueActorId;slot;withData};Zs([qp(x0,P0.Little),Tp("design:type",typeof BigInt>"u"?Object:BigInt)],zr.prototype,"uniqueActorId",void 0);Zs([qp(R0),Tp("design:type",Number)],zr.prototype,"slot",void 0);Zs([qp(b0),Tp("design:type",Boolean)],zr.prototype,"withData",void 0);zr=Zs([k0(p.EntityPickRequest)],zr);import{Proto as I0,Serialize as Wp}from"@serenityjs/raknet";import{ZigZag as Wu,ZigZong as S0}from"@serenityjs/binarystream";function Ms(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Ms,"_ts_decorate");function Hp(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Hp,"_ts_metadata");var Fr=class extends f{static{s(this,"HurtArmorPacket")}cause;damage;slots};Ms([Wp(Wu),Hp("design:type",Number)],Fr.prototype,"cause",void 0);Ms([Wp(Wu),Hp("design:type",Number)],Fr.prototype,"damage",void 0);Ms([Wp(S0),Hp("design:type",Number)],Fr.prototype,"slots",void 0);Fr=Ms([I0(p.HurtArmor)],Fr);import{Proto as B0,Serialize as Au}from"@serenityjs/raknet";import{Byte as O0,VarLong as V0}from"@serenityjs/binarystream";function Gp(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Gp,"_ts_decorate");function Gu(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Gu,"_ts_metadata");var Ki=class extends f{static{s(this,"ShowCreditsPacket")}playerRuntimeId;creditsState};Gp([Au(V0),Gu("design:type",typeof BigInt>"u"?Object:BigInt)],Ki.prototype,"playerRuntimeId",void 0);Gp([Au(O0),Gu("design:type",Number)],Ki.prototype,"creditsState",void 0);Ki=Gp([B0(p.ShowCredits)],Ki);import{VarInt as C0}from"@serenityjs/binarystream";import{Proto as j0,Serialize as Yu}from"@serenityjs/raknet";function Ap(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Ap,"_ts_decorate");function Ju(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Ju,"_ts_metadata");var Qi=class extends f{static{s(this,"UpdateClientInputLocksPacket")}flags;position};Ap([Yu(C0),Ju("design:type",Number)],Qi.prototype,"flags",void 0);Ap([Yu(l),Ju("design:type",typeof l>"u"?Object:l)],Qi.prototype,"position",void 0);Qi=Ap([j0(p.UpdateClientInputLocks)],Qi);import{Proto as U0,Serialize as D0}from"@serenityjs/raknet";import{Endianness as N0,Uint32 as Z0}from"@serenityjs/binarystream";function Ku(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Ku,"_ts_decorate");function _0(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(_0,"_ts_metadata");var gn=class extends f{static{s(this,"OnScreenTextureAnimationPacket")}effectId};Ku([D0(Z0,N0.Little),_0("design:type",typeof EffectType>"u"?Object:EffectType)],gn.prototype,"effectId",void 0);gn=Ku([U0(p.OnScreenTextureAnimation)],gn);import{Proto as M0,Serialize as fe}from"@serenityjs/raknet";import{Endianness as de,Float32 as le}from"@serenityjs/binarystream";function Wt(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Wt,"_ts_decorate");function pe(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(pe,"_ts_metadata");var mt=class extends f{static{s(this,"ServerboundDiagnosticsPacket")}fps;serverSimTickTime;clientSimTickTime;beginFrameTime;inputTime;renderTime;endFrameTime;remainderTimePercent;unaccountedTimePercent};Wt([fe(le,de.Little),pe("design:type",Number)],mt.prototype,"fps",void 0);Wt([fe(le,de.Little),pe("design:type",Number)],mt.prototype,"serverSimTickTime",void 0);Wt([fe(le,de.Little),pe("design:type",Number)],mt.prototype,"clientSimTickTime",void 0);Wt([fe(le,de.Little),pe("design:type",Number)],mt.prototype,"beginFrameTime",void 0);Wt([fe(le,de.Little),pe("design:type",Number)],mt.prototype,"inputTime",void 0);Wt([fe(le,de.Little),pe("design:type",Number)],mt.prototype,"renderTime",void 0);Wt([fe(le,de.Little),pe("design:type",Number)],mt.prototype,"endFrameTime",void 0);Wt([fe(le,de.Little),pe("design:type",Number)],mt.prototype,"remainderTimePercent",void 0);Wt([fe(le,de.Little),pe("design:type",Number)],mt.prototype,"unaccountedTimePercent",void 0);mt=Wt([M0(p.ServerboundDiagnosticPacket)],mt);import{Proto as z0,Serialize as Fs}from"@serenityjs/raknet";import{Endianness as Qu,Float32 as $u,VarString as F0}from"@serenityjs/binarystream";function yn(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(yn,"_ts_decorate");function zs(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(zs,"_ts_metadata");var $e=class extends f{static{s(this,"PlaySoundPacket")}name;position;volume;pitch};yn([Fs(F0),zs("design:type",String)],$e.prototype,"name",void 0);yn([Fs(b),zs("design:type",typeof b>"u"?Object:b)],$e.prototype,"position",void 0);yn([Fs($u,Qu.Little),zs("design:type",Number)],$e.prototype,"volume",void 0);yn([Fs($u,Qu.Little),zs("design:type",Number)],$e.prototype,"pitch",void 0);$e=yn([z0(p.PlaySound)],$e);import{Proto as q0,Serialize as H0}from"@serenityjs/raknet";function Xu(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Xu,"_ts_decorate");function T0(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(T0,"_ts_metadata");var wn=class extends f{static{s(this,"SetActorLinkPacket")}link};Xu([H0(ka),T0("design:type",typeof ka>"u"?Object:ka)],wn.prototype,"link",void 0);wn=Xu([q0(p.SetActorLink)],wn);import{Proto as W0,Serialize as Yp}from"@serenityjs/raknet";import{Bool as Lu,VarString as G0}from"@serenityjs/binarystream";function Ts(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Ts,"_ts_decorate");function Jp(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Jp,"_ts_metadata");var Tr=class extends f{static{s(this,"StopSoundPacket")}soundName;stopAllSounds;stopMusic};Ts([Yp(G0),Jp("design:type",String)],Tr.prototype,"soundName",void 0);Ts([Yp(Lu),Jp("design:type",Boolean)],Tr.prototype,"stopAllSounds",void 0);Ts([Yp(Lu),Jp("design:type",Boolean)],Tr.prototype,"stopMusic",void 0);Tr=Ts([W0(p.StopSound)],Tr);import{Proto as A0,Serialize as Le}from"@serenityjs/raknet";import{Endianness as qs,Float32 as Kp,Uint16 as J0,VarLong as Y0}from"@serenityjs/binarystream";function me(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(me,"_ts_decorate");function Xe(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Xe,"_ts_metadata");var kt=class extends f{static{s(this,"MoveActorDeltaPacket")}runtimeId;flags;x;y;z;pitch;yaw;headYaw};me([Le(Y0),Xe("design:type",typeof BigInt>"u"?Object:BigInt)],kt.prototype,"runtimeId",void 0);me([Le(J0,qs.Little),Xe("design:type",Number)],kt.prototype,"flags",void 0);me([Le(Kp,qs.Little),Xe("design:type",Number)],kt.prototype,"x",void 0);me([Le(Kp,qs.Little),Xe("design:type",Number)],kt.prototype,"y",void 0);me([Le(Kp,qs.Little),Xe("design:type",Number)],kt.prototype,"z",void 0);me([Le(Ia),Xe("design:type",Number)],kt.prototype,"pitch",void 0);me([Le(Ia),Xe("design:type",Number)],kt.prototype,"yaw",void 0);me([Le(Ia),Xe("design:type",Number)],kt.prototype,"headYaw",void 0);kt=me([A0(p.MoveActorDelta)],kt);import{Proto as Q0,Serialize as $0}from"@serenityjs/raknet";function Eu(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Eu,"_ts_decorate");function K0(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(K0,"_ts_metadata");var bn=class extends f{static{s(this,"PlayerFogPacket")}fogs};Eu([$0(Sa),K0("design:type",typeof Sa>"u"?Object:Sa)],bn.prototype,"fogs",void 0);bn=Eu([Q0(p.PlayerFog)],bn);import{VarString as L0}from"@serenityjs/binarystream";import{Proto as E0,Serialize as v0}from"@serenityjs/raknet";function vu(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(vu,"_ts_decorate");function X0(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(X0,"_ts_metadata");var Pn=class extends f{static{s(this,"CurrectStructureFeaturePacket")}featureId};vu([v0(L0),X0("design:type",String)],Pn.prototype,"featureId",void 0);Pn=vu([E0(p.CurrentStructureFeature)],Pn);import{Proto as eS,Serialize as rS}from"@serenityjs/raknet";function th(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(th,"_ts_decorate");function tS(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(tS,"_ts_metadata");var xn=class extends f{static{s(this,"GameRulesChangedPacket")}rules};th([rS(Gr),tS("design:type",typeof Gr>"u"?Object:Gr)],xn.prototype,"rules",void 0);xn=th([eS(p.GameRulesChanged)],xn);import{Proto as oS}from"@serenityjs/raknet";function iS(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(iS,"_ts_decorate");var Hs=class extends f{static{s(this,"LegacyTelemetryEventPacket")}unique_id;type;use_player_id;event_data;serialize(){switch(this.writeVarInt(p.LegacyTelemetryEvent),this.writeVarLong(this.unique_id),this.writeVarInt(this.type),this.writeByte(this.use_player_id),this.type){case x.AchievementAwarded:{this.writeVarInt(this.event_data.achievementId);break}case x.EntityInteract:{let e=this.event_data;this.writeVarLong(e.interactedEntityId),this.writeVarInt(e.interactionType),this.writeVarInt(e.interactionActorType),this.writeVarInt(e.interactionActorVariant),this.writeUint8(e.interactionActorColor);break}case x.PortalBuilt:{this.writeVarInt(this.event_data.dimensionId);break}case x.PortalUsed:{let e=this.event_data;this.writeVarInt(e.fromDimensionId),this.writeVarInt(e.toDimensionId);break}case x.MobKilled:{let e=this.event_data;this.writeVarLong(e.instigatorActorId),this.writeVarLong(e.targetActorId),this.writeVarInt(e.instigatorChildActorType),this.writeVarInt(e.damageSource),this.writeVarInt(e.tradeTier),this.writeVarString(e.traderName);break}case x.CauldronUsed:{let e=this.event_data;this.writeVarInt(e.contentsColor),this.writeVarInt(e.contentsType),this.writeVarInt(e.fillLevel);break}case x.PlayerDeath:{let e=this.event_data;this.writeVarLong(e.instigatorActorId),this.writeVarInt(e.instigatorMobVariant),this.writeVarInt(e.damageSource),this.writeBool(e.diedInRaid);break}case x.BossKilled:{let e=this.event_data;this.writeVarLong(e.bossActorId),this.writeVarInt(e.partySize),this.writeVarInt(e.bossType);break}case x.AgentCommand:{let e=this.event_data;this.writeVarInt(e.result),this.writeVarInt(e.resultNumber),this.writeVarString(e.commandName),this.writeVarString(e.resultKey),this.writeVarString(e.resultString);break}case x.CommandExecuted:{let e=this.event_data;this.writeVarInt(e.successCount),this.writeVarInt(e.errorCount),this.writeVarString(e.commandName),this.writeVarString(e.errorList);break}case x.MobBorn:{let e=this.event_data;this.writeVarInt(e.entityType),this.writeVarInt(e.entityVariant),this.writeUint8(e.color);break}case x.PetDied:{let e=this.event_data;this.writeVarInt(e.killedPetEntityType),this.writeVarInt(e.killedPetVariant),this.writeVarInt(e.killerEntityType),this.writeVarInt(e.killerVariant),this.writeVarInt(e.damageSource);break}case x.CauldronBlockUsed:case x.ComposterBlockUsed:{let e=this.event_data;this.writeVarInt(e.blockInteractionType),this.writeVarInt(e.itemId);break}case x.BellBlockUsed:{this.writeVarInt(this.event_data.itemId);break}case x.ActorDefinition:{this.writeVarString(this.event_data.eventName);break}case x.RaidUpdate:{let e=this.event_data;this.writeVarInt(e.currentRaidWave),this.writeVarInt(e.totalRaidWaves),this.writeBool(e.wonRaid);break}case x.TargetBlockHit:{this.writeVarInt(this.event_data.redstoneLevel);break}case x.PiglinBarter:{let e=this.event_data;this.writeVarInt(e.itemId),this.writeBool(e.wasTargetingBarteringPlayer);break}case x.WaxedOrUnwaxedCopper:{this.writeVarInt(this.event_data.playerWaxedOrUnwaxedCopperBlockId);break}case x.CodeBuilderRuntimeAction:{this.writeVarString(this.event_data.codeBuilderRuntimeAction);break}case x.CodeBuilderScoreboard:{let e=this.event_data;this.writeVarString(e.objectiveName),this.writeVarInt(e.codeBuilderScoreboardScore);break}case x.ItemUsed:{let e=this.event_data;this.writeShort(e.itemId),this.writeVarInt(e.itemAux),this.writeVarInt(e.useMethod),this.writeVarInt(e.useCount);break}case x.AgentCreated:case x.BannerPatternRemoved:case x.FishBucketed:case x.PlayerMovementAnomaly:case x.PlayerMovementCorrected:case x.HoneyHarvested:case x.StriderRiddenInLavaInOverworld:case x.SneakCloseToSculkSensor:case x.CarefulRestoration:break;default:break}return this.getBuffer()}deserialize(){switch(this.readVarInt(),this.unique_id=this.readVarLong(),this.type=this.readVarInt(),this.use_player_id=this.readByte(),this.type){case x.AchievementAwarded:this.event_data={achievementId:this.readVarInt()};break;case x.EntityInteract:this.event_data={interactedEntityId:this.readVarLong(),interactionType:this.readVarInt(),interactionActorType:this.readVarInt(),interactionActorVariant:this.readVarInt(),interactionActorColor:this.readUint8()};break;case x.PortalBuilt:this.event_data={dimensionId:this.readVarInt()};break;case x.PortalUsed:this.event_data={fromDimensionId:this.readVarInt(),toDimensionId:this.readVarInt()};break;case x.MobKilled:this.event_data={instigatorActorId:this.readVarLong(),targetActorId:this.readVarLong(),instigatorChildActorType:this.readVarInt(),damageSource:this.readVarInt(),tradeTier:this.readVarInt(),traderName:this.readVarString()};break;case x.CauldronUsed:this.event_data={contentsColor:this.readVarInt(),contentsType:this.readVarInt(),fillLevel:this.readVarInt()};break;case x.PlayerDeath:this.event_data={instigatorActorId:this.readVarLong(),instigatorMobVariant:this.readVarInt(),damageSource:this.readVarInt(),diedInRaid:this.readBool()};break;case x.BossKilled:this.event_data={bossActorId:this.readVarLong(),partySize:this.readVarInt(),bossType:this.readVarInt()};break;case x.AgentCommand:this.event_data={result:this.readVarInt(),resultNumber:this.readVarInt(),commandName:this.readVarString(),resultKey:this.readVarString(),resultString:this.readVarString()};break;case x.AgentCreated:this.event_data={};break;case x.BannerPatternRemoved:this.event_data={};break;case x.CommandExecuted:this.event_data={successCount:this.readVarInt(),errorCount:this.readVarInt(),commandName:this.readVarString(),errorList:this.readVarString()};break;case x.FishBucketed:this.event_data={};break;case x.MobBorn:this.event_data={entityType:this.readVarInt(),entityVariant:this.readVarInt(),color:this.readUint8()};break;case x.PetDied:this.event_data={killedPetEntityType:this.readVarInt(),killedPetVariant:this.readVarInt(),killerEntityType:this.readVarInt(),killerVariant:this.readVarInt(),damageSource:this.readVarInt()};break;case x.CauldronBlockUsed:this.event_data={blockInteractionType:this.readVarInt(),itemId:this.readVarInt()};break;case x.ComposterBlockUsed:this.event_data={blockInteractionType:this.readVarInt(),itemId:this.readVarInt()};break;case x.BellBlockUsed:this.event_data={itemId:this.readVarInt()};break;case x.ActorDefinition:this.event_data={eventName:this.readVarString()};break;case x.RaidUpdate:this.event_data={currentRaidWave:this.readVarInt(),totalRaidWaves:this.readVarInt(),wonRaid:this.readBool()};break;case x.PlayerMovementAnomaly:this.event_data={};break;case x.PlayerMovementCorrected:this.event_data={};break;case x.HoneyHarvested:this.event_data={};break;case x.TargetBlockHit:this.event_data={redstoneLevel:this.readVarInt()};break;case x.PiglinBarter:this.event_data={itemId:this.readVarInt(),wasTargetingBarteringPlayer:this.readBool()};break;case x.WaxedOrUnwaxedCopper:this.event_data={playerWaxedOrUnwaxedCopperBlockId:this.readVarInt()};break;case x.CodeBuilderRuntimeAction:this.event_data={codeBuilderRuntimeAction:this.readVarString()};break;case x.CodeBuilderScoreboard:this.event_data={objectiveName:this.readVarString(),codeBuilderScoreboardScore:this.readVarInt()};break;case x.StriderRiddenInLavaInOverworld:this.event_data={};break;case x.SneakCloseToSculkSensor:this.event_data={};break;case x.CarefulRestoration:this.event_data={};break;case x.ItemUsed:this.event_data={itemId:this.readShort(),itemAux:this.readVarInt(),useMethod:this.readVarInt(),useCount:this.readVarInt()};break;default:this.event_data=void 0}return this}};Hs=iS([oS(p.LegacyTelemetryEvent)],Hs);import{VarInt as nS}from"@serenityjs/binarystream";import{Proto as aS,Serialize as rh}from"@serenityjs/raknet";function Qp(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Qp,"_ts_decorate");function eh(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(eh,"_ts_metadata");var $i=class extends f{static{s(this,"LevelEventGenericPacket")}eventId;nbtData};Qp([rh(nS),eh("design:type",Number)],$i.prototype,"eventId",void 0);Qp([rh(Ba),eh("design:type",typeof Ba>"u"?Object:Ba)],$i.prototype,"nbtData",void 0);$i=Qp([aS(p.LevelEventGeneric)],$i);import{VarInt as cS}from"@serenityjs/binarystream";import{Proto as pS,Serialize as fS}from"@serenityjs/raknet";function ih(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(ih,"_ts_decorate");function sS(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(sS,"_ts_metadata");var Rn=class extends f{static{s(this,"SetDifficultyPacket")}difficulty};ih([fS(cS),sS("design:type",typeof _n>"u"?Object:_n)],Rn.prototype,"difficulty",void 0);Rn=ih([pS(p.SetDifficulty)],Rn);import{Proto as dS,Serialize as Gs}from"@serenityjs/raknet";import{ZigZag as oh}from"@serenityjs/binarystream";function kn(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(kn,"_ts_decorate");function Ws(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Ws,"_ts_metadata");var Ee=class extends f{static{s(this,"SetSpawnPositionPacket")}spawnType;playerPosition;dimension;worldPosition};kn([Gs(oh),Ws("design:type",typeof qn>"u"?Object:qn)],Ee.prototype,"spawnType",void 0);kn([Gs(b),Ws("design:type",typeof b>"u"?Object:b)],Ee.prototype,"playerPosition",void 0);kn([Gs(oh),Ws("design:type",Number)],Ee.prototype,"dimension",void 0);kn([Gs(b),Ws("design:type",typeof b>"u"?Object:b)],Ee.prototype,"worldPosition",void 0);Ee=kn([dS(p.SetSpawnPosition)],Ee);import{ZigZag as mS}from"@serenityjs/binarystream";import{Proto as uS,Serialize as hS}from"@serenityjs/raknet";function nh(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(nh,"_ts_decorate");function lS(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(lS,"_ts_metadata");var In=class extends f{static{s(this,"SetHealthPacket")}health};nh([hS(mS),lS("design:type",Number)],In.prototype,"health",void 0);In=nh([uS(p.SetHealth)],In);import{CompoundTag as $p}from"@serenityjs/nbt";import{Proto as yS,Serialize as wS}from"@serenityjs/raknet";function ah(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(ah,"_ts_decorate");function gS(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(gS,"_ts_metadata");var Sn=class extends f{static{s(this,"SyncActorPropertyPacket")}properties};ah([wS($p,!0),gS("design:type",typeof $p>"u"?Object:$p)],Sn.prototype,"properties",void 0);Sn=ah([yS(p.SyncActorProperty)],Sn);import{Proto as bS,Serialize as ch}from"@serenityjs/raknet";function Xp(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Xp,"_ts_decorate");function sh(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(sh,"_ts_metadata");var Xi=class extends f{static{s(this,"TrimDataPacket")}patterns;materials};Xp([ch(Oa),sh("design:type",typeof Oa>"u"?Object:Oa)],Xi.prototype,"patterns",void 0);Xp([ch(Va),sh("design:type",typeof Va>"u"?Object:Va)],Xi.prototype,"materials",void 0);Xi=Xp([bS(p.TrimData)],Xi);import{Proto as xS,Serialize as RS}from"@serenityjs/raknet";function ph(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(ph,"_ts_decorate");function PS(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(PS,"_ts_metadata");var Bn=class extends f{static{s(this,"UnlockedRecipesPacket")}recipes};ph([RS(Ca),PS("design:type",typeof Ca>"u"?Object:Ca)],Bn.prototype,"recipes",void 0);Bn=ph([xS(p.UnlockedRecipes)],Bn);import{Proto as kS,Serialize as Ep}from"@serenityjs/raknet";import{Endianness as fh,Int64 as IS,Uint16 as SS,ZigZag as BS}from"@serenityjs/binarystream";function As(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(As,"_ts_decorate");function Lp(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Lp,"_ts_metadata");var qr=class extends f{static{s(this,"RequestPermissionsPacket")}actorUniqueId;permissionLevel;flags;getFlag(e){return(this.flags&e)===e}setFlag(e,r){r?this.flags|=e:this.flags&=~e}};As([Ep(IS,fh.Little),Lp("design:type",typeof BigInt>"u"?Object:BigInt)],qr.prototype,"actorUniqueId",void 0);As([Ep(BS),Lp("design:type",typeof Un>"u"?Object:Un)],qr.prototype,"permissionLevel",void 0);As([Ep(SS,fh.Little),Lp("design:type",Number)],qr.prototype,"flags",void 0);qr=As([kS(p.RequestPermissions)],qr);import{Proto as OS,Serialize as lh}from"@serenityjs/raknet";import{VarInt as VS,VarString as CS}from"@serenityjs/binarystream";function vp(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(vp,"_ts_decorate");function dh(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(dh,"_ts_metadata");var Li=class extends f{static{s(this,"ServerSettingsResponsePacket")}formId;payload};vp([lh(VS),dh("design:type",Number)],Li.prototype,"formId",void 0);vp([lh(CS),dh("design:type",String)],Li.prototype,"payload",void 0);Li=vp([OS(p.ServerSettingsResponse)],Li);import{Proto as jS,Serialize as he}from"@serenityjs/raknet";import{Bool as tf,Endianness as _S,Uint32 as US,VarString as ef}from"@serenityjs/binarystream";function Gt(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Gt,"_ts_decorate");function ue(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(ue,"_ts_metadata");var ut=class extends f{static{s(this,"CommandBlockUpdatePacket")}isBlock;actorRuntimeId;settings;command;lastOutput;customName;trackOutput;tickDelay;executeFirstTick};Gt([he(tf),ue("design:type",Boolean)],ut.prototype,"isBlock",void 0);Gt([he(Tl,0,"isBlock"),ue("design:type",Object)],ut.prototype,"actorRuntimeId",void 0);Gt([he(ql,0,"isBlock"),ue("design:type",Object)],ut.prototype,"settings",void 0);Gt([he(ef),ue("design:type",String)],ut.prototype,"command",void 0);Gt([he(ef),ue("design:type",String)],ut.prototype,"lastOutput",void 0);Gt([he(ef),ue("design:type",String)],ut.prototype,"customName",void 0);Gt([he(tf),ue("design:type",Boolean)],ut.prototype,"trackOutput",void 0);Gt([he(US,_S.Little),ue("design:type",Number)],ut.prototype,"tickDelay",void 0);Gt([he(tf),ue("design:type",Boolean)],ut.prototype,"executeFirstTick",void 0);ut=Gt([jS(p.CommandBlockUpdate)],ut);import{Proto as NS,Serialize as ZS}from"@serenityjs/raknet";import{VarString as MS}from"@serenityjs/binarystream";function mh(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(mh,"_ts_decorate");function DS(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(DS,"_ts_metadata");var On=class extends f{static{s(this,"ShowProfilePacket")}xuid};mh([ZS(MS),DS("design:type",String)],On.prototype,"xuid",void 0);On=mh([NS(p.ShowProfile)],On);import{Proto as zS,Serialize as hh}from"@serenityjs/raknet";import{VarString as FS,ZigZong as TS}from"@serenityjs/binarystream";function rf(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(rf,"_ts_decorate");function uh(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(uh,"_ts_metadata");var Ei=class extends f{static{s(this,"DebugInfoPacket")}actorUniqueId;data};rf([hh(TS),uh("design:type",typeof BigInt>"u"?Object:BigInt)],Ei.prototype,"actorUniqueId",void 0);rf([hh(FS),uh("design:type",String)],Ei.prototype,"data",void 0);Ei=rf([zS(p.DebugInfo)],Ei);import{Proto as qS,Serialize as tr}from"@serenityjs/raknet";import{Endianness as vi,Float32 as Js,Uint32 as HS,Uint64 as WS,VarString as GS}from"@serenityjs/binarystream";function ge(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(ge,"_ts_decorate");function ve(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(ve,"_ts_metadata");var It=class extends f{static{s(this,"ClientBoundDebugRendererPacket")}type;text;position;red;green;blue;alpha;duration};ge([tr(HS,vi.Little),ve("design:type",Number)],It.prototype,"type",void 0);ge([tr(GS),ve("design:type",String)],It.prototype,"text",void 0);ge([tr(l),ve("design:type",typeof l>"u"?Object:l)],It.prototype,"position",void 0);ge([tr(Js,vi.Little),ve("design:type",Number)],It.prototype,"red",void 0);ge([tr(Js,vi.Little),ve("design:type",Number)],It.prototype,"green",void 0);ge([tr(Js,vi.Little),ve("design:type",Number)],It.prototype,"blue",void 0);ge([tr(Js,vi.Little),ve("design:type",Number)],It.prototype,"alpha",void 0);ge([tr(WS,vi.Little),ve("design:type",typeof BigInt>"u"?Object:BigInt)],It.prototype,"duration",void 0);It=ge([qS(p.ClientBoundDebugRenderer)],It);import{Uint8 as AS,Bool as JS}from"@serenityjs/binarystream";import{Proto as YS,Serialize as Cn}from"@serenityjs/raknet";function to(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(to,"_ts_decorate");function Vn(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Vn,"_ts_metadata");var ye=class extends f{static{s(this,"CorrectPlayerMovePredictionPacket")}prediction;position;velocity;onGround;inputTick};to([Cn(AS),Vn("design:type",typeof Wn>"u"?Object:Wn)],ye.prototype,"prediction",void 0);to([Cn(l),Vn("design:type",typeof l>"u"?Object:l)],ye.prototype,"position",void 0);to([Cn(l),Vn("design:type",typeof l>"u"?Object:l)],ye.prototype,"velocity",void 0);to([Cn(JS),Vn("design:type",Boolean)],ye.prototype,"onGround",void 0);to([Cn(Q),Vn("design:type",typeof Q>"u"?Object:Q)],ye.prototype,"inputTick",void 0);ye=to([YS(p.CorrectPlayerMovePrediction)],ye);import{VarInt as gh,VarLong as yh}from"@serenityjs/binarystream";import{Serialize as Ks,Proto as KS}from"@serenityjs/raknet";function jn(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(jn,"_ts_decorate");function Ys(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Ys,"_ts_metadata");var er=class extends f{static{s(this,"MovementEffectPacket")}runtimeId;type;duration;inputTick};jn([Ks(yh),Ys("design:type",typeof BigInt>"u"?Object:BigInt)],er.prototype,"runtimeId",void 0);jn([Ks(gh),Ys("design:type",typeof Gn>"u"?Object:Gn)],er.prototype,"type",void 0);jn([Ks(gh),Ys("design:type",Number)],er.prototype,"duration",void 0);jn([Ks(yh),Ys("design:type",typeof BigInt>"u"?Object:BigInt)],er.prototype,"inputTick",void 0);er=jn([KS(p.MovementEffect)],er);import{Proto as QS,Serialize as at}from"@serenityjs/raknet";import{Bool as $S,Byte as XS,Endianness as we,VarInt as LS,ZigZong as ES}from"@serenityjs/binarystream";function v(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(v,"_ts_decorate");function nt(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(nt,"_ts_metadata");var J=class extends f{static{s(this,"ClientBoundMapItemDataPacket")}mapId;flags;dimension;isLocked;origin;mapIncludedIn;scale;trackedActors;decorations;width;height;xCoordinate;yCoordinate;pixels};v([at(ES),nt("design:type",typeof BigInt>"u"?Object:BigInt)],J.prototype,"mapId",void 0);v([at(LS),nt("design:type",Number)],J.prototype,"flags",void 0);v([at(XS),nt("design:type",Number)],J.prototype,"dimension",void 0);v([at($S),nt("design:type",Boolean)],J.prototype,"isLocked",void 0);v([at(b),nt("design:type",typeof b>"u"?Object:b)],J.prototype,"origin",void 0);v([at(Jl,we.Little,"flags"),nt("design:type",Object)],J.prototype,"mapIncludedIn",void 0);v([at(Kl,we.Little,"flags"),nt("design:type",Object)],J.prototype,"scale",void 0);v([at(Al,we.Little,"flags"),nt("design:type",Object)],J.prototype,"trackedActors",void 0);v([at(Gl,we.Little,"flags"),nt("design:type",Object)],J.prototype,"decorations",void 0);v([at(ti,we.Little,"flags"),nt("design:type",Object)],J.prototype,"width",void 0);v([at(ti,we.Little,"flags"),nt("design:type",Object)],J.prototype,"height",void 0);v([at(ti,we.Little,"flags"),nt("design:type",Object)],J.prototype,"xCoordinate",void 0);v([at(ti,we.Little,"flags"),nt("design:type",Object)],J.prototype,"yCoordinate",void 0);v([at(ti,we.Little,"flags"),nt("design:type",Object)],J.prototype,"pixels",void 0);J=v([QS(p.ClientBoundMapItemData)],J);import{Proto as vS,Serialize as bh}from"@serenityjs/raknet";import{ZigZong as t3}from"@serenityjs/binarystream";function of(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(of,"_ts_decorate");function wh(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(wh,"_ts_metadata");var eo=class extends f{static{s(this,"MapInfoRequestPacket")}mapId;mapPixels};of([bh(t3),wh("design:type",typeof BigInt>"u"?Object:BigInt)],eo.prototype,"mapId",void 0);of([bh(Ql),wh("design:type",typeof Array>"u"?Object:Array)],eo.prototype,"mapPixels",void 0);eo=of([vS(p.MapInfoRequest)],eo);import{Proto as e3,Serialize as Jt}from"@serenityjs/raknet";import{Bool as Ph,Int8 as xh,VarString as r3,ZigZag as Rh,ZigZong as kh}from"@serenityjs/binarystream";function Dt(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Dt,"_ts_decorate");function At(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(At,"_ts_metadata");var st=class extends f{static{s(this,"UpdateTradePacket")}windowId;containerType;size;tradeTier;tradeActorUnique;playerTradingUnique;displayName;useNewUI;economyTrade;offers};Dt([Jt(xh),At("design:type",typeof Zn>"u"?Object:Zn)],st.prototype,"windowId",void 0);Dt([Jt(xh),At("design:type",typeof Mn>"u"?Object:Mn)],st.prototype,"containerType",void 0);Dt([Jt(Rh),At("design:type",Number)],st.prototype,"size",void 0);Dt([Jt(Rh),At("design:type",Number)],st.prototype,"tradeTier",void 0);Dt([Jt(kh),At("design:type",typeof BigInt>"u"?Object:BigInt)],st.prototype,"tradeActorUnique",void 0);Dt([Jt(kh),At("design:type",typeof BigInt>"u"?Object:BigInt)],st.prototype,"playerTradingUnique",void 0);Dt([Jt(r3),At("design:type",String)],st.prototype,"displayName",void 0);Dt([Jt(Ph),At("design:type",Boolean)],st.prototype,"useNewUI",void 0);Dt([Jt(Ph),At("design:type",Boolean)],st.prototype,"economyTrade",void 0);Dt([Jt(Xl),At("design:type",typeof Array>"u"?Object:Array)],st.prototype,"offers",void 0);st=Dt([e3(p.UpdateTrade)],st);var Iot={[p.Login]:si,[p.PlayStatus]:Co,[p.ServerToClientHandshake]:Eo,[p.ClientToServerHandshake]:Ds,[p.Disconnect]:mr,[p.ResourcePacksInfo]:Ft,[p.ResourcePackStack]:Vt,[p.ResourcePackClientResponse]:hi,[p.Text]:Rt,[p.SetTime]:Ao,[p.StartGame]:u,[p.AddPlayer]:U,[p.AddEntity]:Y,[p.RemoveEntity]:Uo,[p.AddItemActor]:Bt,[p.TakeItemActor]:Oi,[p.MoveActorAbsolute]:Ne,[p.MovePlayer]:ot,[p.RiderJump]:hn,[p.UpdateBlock]:Ge,[p.LevelEvent]:hr,[p.BlockEvent]:Mr,[p.ActorEvent]:Or,[p.MobEffect]:Ut,[p.UpdateAttributes]:Ir,[p.InventoryTransaction]:oi,[p.MobEquipment]:Xt,[p.MobArmorEquipment]:Ht,[p.Interact]:ur,[p.BlockPickRequest]:Qt,[p.EntityPickRequest]:zr,[p.PlayerAction]:vt,[p.HurtArmor]:Fr,[p.SetActorData]:ze,[p.SetActorMotion]:kr,[p.SetActorLink]:wn,[p.SetHealth]:In,[p.SetSpawnPosition]:Ee,[p.Animate]:dr,[p.Respawn]:Rr,[p.ContainerOpen]:Ue,[p.ContainerClose]:lr,[p.PlayerHotbar]:wr,[p.InventoryContent]:De,[p.InventorySlot]:$t,[p.ContainerSetData]:Nr,[p.CraftingData]:se,[p.BlockActorData]:Zi,[p.LevelChunk]:Ka,[p.SetCommandsEnabled]:No,[p.SetDifficulty]:Rn,[p.ChangeDimension]:je,[p.SetPlayerGameType]:zo,[p.PlayerList]:mi,[p.LegacyTelemetryEvent]:Hs,[p.ClientBoundMapItemData]:J,[p.MapInfoRequest]:eo,[p.RequestChunkRadius]:ui,[p.ChunkRadiusUpdate]:fo,[p.GameRulesChanged]:xn,[p.ShowCredits]:Ki,[p.BossEvent]:Ae,[p.AvailableCommands]:Pt,[p.CommandRequest]:_e,[p.CommandBlockUpdate]:ut,[p.CommandOutput]:lo,[p.UpdateTrade]:st,[p.ResourcePackDataInfo]:rs,[p.ResourcePackChunkData]:os,[p.ResourcePackChunkRequest]:yi,[p.Transfer]:Sr,[p.PlaySound]:$e,[p.StopSound]:Tr,[p.SetTitle]:xt,[p.StructureBlockUpdate]:Qe,[p.PlayerSkin]:oe,[p.BookEdit]:Dr,[p.NpcRequest]:ae,[p.ModalFormRequest]:pi,[p.ModalFormResponse]:Lt,[p.ServerSettingsResponse]:Li,[p.ShowProfile]:On,[p.RemoveObjective]:Jo,[p.SetDisplayObjective]:ie,[p.SetScore]:Ii,[p.MoveActorDelta]:kt,[p.SetScoreboardIdentity]:Si,[p.SetLocalPlayerAsInitialized]:Mo,[p.NetworkStackLatency]:Vi,[p.SpawnParticleEffect]:ce,[p.AvailableActorIdentifiers]:dn,[p.NetworkChunkPublisherUpdate]:yr,[p.BiomeDefinitionList]:Na,[p.LevelSoundEvent]:Zt,[p.LevelEventGeneric]:$i,[p.OnScreenTextureAnimation]:gn,[p.Emote]:qt,[p.CompletedUsingItem]:Fi,[p.NetworkSettings]:Et,[p.PlayerAuthInput]:D,[p.CreativeContent]:ri,[p.PlayerEnchantOptions]:un,[p.ItemStackRequest]:bo,[p.ItemStackResponse]:Po,[p.EmoteList]:_i,[p.DebugInfo]:Ei,[p.PacketViolationWarning]:Ze,[p.AnimateEntity]:_t,[p.CameraShake]:Ke,[p.PlayerFog]:bn,[p.CorrectPlayerMovePrediction]:ye,[p.ItemRegistry]:wo,[p.ClientBoundDebugRenderer]:It,[p.SyncActorProperty]:Sn,[p.NpcDialogue]:Tt,[p.PlayerStartItemCooldown]:Wi,[p.ScriptMessage]:Pi,[p.DimensionData]:mn,[p.RequestPermissions]:qr,[p.ToastRequest]:xi,[p.UpdateAbilities]:We,[p.UpdateAdventureSettings]:re,[p.DeathInfo]:Mi,[p.RequestNetworkSettings]:Do,[p.UpdateClientInputLocks]:Qi,[p.CameraPresetsPacket]:nn,[p.UnlockedRecipes]:Bn,[p.CameraInstructions]:an,[p.TrimData]:Xi,[p.OpenSign]:qi,[p.SetPlayerInventoryOptions]:ne,[p.SetHud]:Bi,[p.AwardAchievement]:Lo,[p.ClientboundCloseForm]:Bs,[p.ServerboundLoadingScreenPacket]:Hi,[p.CurrentStructureFeature]:Pn,[p.ServerboundDiagnosticPacket]:mt,[p.MovementEffect]:er};var ast=class extends f{static{s(this,"DebugEventPacket")}data;serialize(){let e={type:"event",event:this.data},r=Buffer.from(JSON.stringify(e)),o=(r.length+1).toString(16).padStart(8,"0")+`
`;return this.writeBuffer(Buffer.from(o)),this.writeBuffer(r),this.writeBuffer(Buffer.from(`
`)),this.getBuffer()}deserialize(){let e=this.readBuffer(8).toString("utf8"),r=this.readBuffer(Number.parseInt(e,16));return this.data=JSON.parse(r.toString()),this}};import{BinaryStream as Ih}from"@serenityjs/binarystream";var mst=class{static{s(this,"Framer")}static unframe(e){let r=new Ih(e),o=[];do{let n=r.readVarInt(),i=r.readBuffer(n);o.push(i)}while(!r.cursorAtEnd());return o}static frame(...e){let r=new Ih;for(let o of e)r.writeVarInt(o.length),r.writeBuffer(o);return r.getBuffer()}};import{BinaryStream as i3}from"@serenityjs/binarystream";function wst(t){return i3.fromBuffer(t).readVarInt()}s(wst,"getPacketId");var Ost=function(t){return t[t.EMPTY=0]="EMPTY",t[t.INITIALLY_UNLOCKED=1]="INITIALLY_UNLOCKED",t[t.NEWLY_UNLOCKED=2]="NEWLY_UNLOCKED",t[t.REMOVED=3]="REMOVED",t[t.REMOVED_ALL=4]="REMOVED_ALL",t}({});export{j as AbilityIndex,ea as AbilityLayer,zh as AbilityLayerType,vs as AbilitySet,Xh as AbilitySetId,xg as ActorDamageCause,io as ActorDataId,Z as ActorDataType,lg as ActorEvent,Or as ActorEventPacket,Pg as ActorFlag,ka as ActorLink,zg as ActorLinkType,Y as AddEntityPacket,Bt as AddItemActorPacket,U as AddPlayerPacket,dd as AnimateAction,ha as AnimateEntity,_t as AnimateEntityPacket,zn as AnimateId,dr as AnimatePacket,Mf as Attribute,tc as AttributeModifier,qh as AttributeName,dn as AvailableActorIdentifiersPacket,Pt as AvailableCommandsPacket,Lo as AwardAchievementPacket,lV as BehaviorPackInfo,Na as BiomeDefinitionListPacket,pM as BlockAction,Zi as BlockActorDataPacket,Mr as BlockEventPacket,Zg as BlockEventType,ig as BlockFace,Qt as BlockPickRequestPacket,b as BlockPosition,ya as BookActions,yt as BookEditAction,Dr as BookEditPacket,la as BossEventAdd,fg as BossEventColor,Ae as BossEventPacket,ua as BossEventUpdate,N as BossEventUpdateType,Og as CameraAudioListener,Yd as CameraFadeDuration,Kd as CameraFadeInstruction,ba as CameraInstructions,an as CameraInstructionsPacket,Wd as CameraPreset,nn as CameraPresetsPacket,Ad as CameraSetEasing,Jd as CameraSetInstruction,Ke as CameraShakePacket,Rd as ChainedSubcommandValues,je as ChangeDimensionPacket,Tf as ChunkCoords,fo as ChunkRadiusUpdatePacket,It as ClientBoundDebugRendererPacket,J as ClientBoundMapItemDataPacket,Sl as ClientPredictedVehicle,Ds as ClientToServerHandshakePacket,Bs as ClientboundCloseFormPacket,Nd as Color,Tl as CommandBlockActorRuntimeId,Wg as CommandBlockMode,ql as CommandBlockSettings,ut as CommandBlockUpdatePacket,nr as CommandOriginData,aa as CommandOutputData,nc as CommandOutputMessage,lo as CommandOutputPacket,Mh as CommandParameterType,Zh as CommandPermissionLevel,_e as CommandRequestPacket,nd as Commands,Fi as CompletedUsingItemPacket,gt as ComplexInventoryTransaction,Ch as CompressionMethod,lr as ContainerClosePacket,Cg as ContainerDataType,Zn as ContainerId,Ed as ContainerMixDataEntry,Th as ContainerName,Ue as ContainerOpenPacket,Nr as ContainerSetDataPacket,Mn as ContainerType,ye as CorrectPlayerMovePredictionPacket,Xd as CraftingDataEntry,M as CraftingDataEntryType,se as CraftingDataPacket,ri as CreativeContentPacket,El as CreativeGroup,hd as CreativeItem,Qg as CreativeItemCategory,Xg as CreativeItemGroup,Pn as CurrectStructureFeaturePacket,Nt as DataItem,f as DataPacket,Mi as DeathInfoPacket,Ud as DeathParameters,ast as DebugEventPacket,Ei as DebugInfoPacket,Fg as DebuggerProtocolVersion,n2 as DefaultAbilityValues,Wh as DeviceOS,_n as Difficulty,mn as DimensionDataPacket,Pc as DimensionDefinition,xa as DimensionDefinitionGroup,Kh as DimensionType,Ra as DisconnectMessage,mr as DisconnectPacket,Vh as DisconnectReason,ng as DisplaySlotType,sd as DynamicEnums,Vg as EasingType,hg as EffectType,mg as EmoteFlags,_i as EmoteListPacket,qt as EmotePacket,jd as Emotes,kl as EnchantOption,pg as Enchantment,Gf as EntityAttributes,zr as EntityPickRequestPacket,pd as EnumConstraints,xd as EnumValues,ed as Enums,ug as EquipmentSlot,Qn as Experiments,Sa as Fogs,mst as Framer,St as FullContainerName,yc as FurnanceRecipe,Yg as GameRule,ke as GameRuleType,Gr as GameRules,xn as GameRulesChangedPacket,Uh as Gamemode,jg as GeneratorType,sg as HudElement,Vd as HudElementData,cg as HudVisibility,Fr as HurtArmorPacket,X as InputData,Mg as InputLockFlags,Dg as InputMode,xc as InputTransaction,Hr as InteractAction,ur as InteractPacket,Zf as InteractPosition,Ng as InteractionMode,tt as InternalType,$r as InventoryAction,De as InventoryContentPacket,yg as InventoryLayout,wg as InventoryLeftTab,bg as InventoryRightTab,$t as InventorySlotPacket,pc as InventorySource,ir as InventorySourceType,pa as InventoryTransaction,oi as InventoryTransactionPacket,Rf as ItemData,Qr as ItemInstanceUserData,wo as ItemRegistryPacket,dc as ItemReleaseInventoryTransaction,rg as ItemReleaseInventoryTransactionType,ol as ItemStackActionTakePlace,wl as ItemStackRequest,Er as ItemStackRequestAction,pl as ItemStackRequestActionBeanconPayment,ml as ItemStackRequestActionCraftCreative,L4 as ItemStackRequestActionCraftGrindstoneRequest,r6 as ItemStackRequestActionCraftLoomRequest,dl as ItemStackRequestActionCraftRecipe,ll as ItemStackRequestActionCraftRecipeAuto,cl as ItemStackRequestActionCreate,sl as ItemStackRequestActionDestroyConsume,al as ItemStackRequestActionDrop,fl as ItemStackRequestActionMineBlock,hl as ItemStackRequestActionOptional,gl as ItemStackRequestActionResultsDeprecated,nl as ItemStackRequestActionSwap,W as ItemStackRequestActionType,bo as ItemStackRequestPacket,K as ItemStackRequestSlotInfo,Po as ItemStackResponsePacket,Qf as ItemStackResponses,$h as ItemStackStatus,Lf as ItemStacks,Gg as ItemTrackedType,Xr as ItemUseInventoryTransaction,tg as ItemUseInventoryTransactionType,Rg as ItemUseMethod,fc as ItemUseOnEntityInventoryTransaction,eg as ItemUseOnEntityInventoryTransactionType,Hs as LegacyTelemetryEventPacket,ar as LegacyTransaction,Ka as LevelChunkPacket,Lh as LevelEvent,$i as LevelEventGenericPacket,hr as LevelEventPacket,Eh as LevelSoundEvent,Zt as LevelSoundEventPacket,ra as Links,si as LoginPacket,Jn as LoginTokens,p2 as MINECRAFT_TICK_SPEED,c2 as MINECRAFT_VERSION,Jl as MapCreationBits,Sc as MapDecoration,Gl as MapDecorationBits,Ag as MapDecorationType,eo as MapInfoRequestPacket,Ql as MapPixel,Kl as MapScale,ti as MapTextureUpdateBits,Al as MapTrackedItems,vd as MaterialReducerDataEntry,Kg as MaterialRenderMethod,Va as Materials,qg as MemoryTier,Ht as MobArmorEquipmentPacket,gg as MobEffectEvents,Ut as MobEffectPacket,Xt as MobEquipmentPacket,Wf as ModalFormCanceled,Qh as ModalFormCanceledReason,Hf as ModalFormData,pi as ModalFormRequestPacket,Lt as ModalFormResponsePacket,Ah as ModalFormType,Ne as MoveActorAbsolutePacket,kt as MoveActorDeltaPacket,Tg as MoveDeltaFlags,Dn as MoveMode,ot as MovePlayerPacket,er as MovementEffectPacket,Gn as MovementEffectType,Ba as NbtLoop,bf as NetworkBlockTypeDefinition,yr as NetworkChunkPublisherUpdatePacket,C as NetworkItemInstanceDescriptor,R as NetworkItemStackDescriptor,Et as NetworkSettingsPacket,Vi as NetworkStackLatencyPacket,dg as NpcDialogueAction,Tt as NpcDialoguePacket,ae as NpcRequestPacket,kg as NpcRequestType,og as ObjectiveSortOrder,gn as OnScreenTextureAnimationPacket,qi as OpenSignPacket,I as Optional,s2 as PROTOCOL_VERSION,xV as PackLinks,vh as PackType,p as Packet,Ze as PacketViolationWarningPacket,Iot as Packets,Oa as Patterns,Hg as PermissionFlag,Un as PermissionLevel,Ug as PlayMode,$e as PlaySoundPacket,jh as PlayStatus,Co as PlayStatusPacket,vt as PlayerActionPacket,rr as PlayerActionType,vr as PlayerAuthInputData,D as PlayerAuthInputPacket,ja as PlayerAuthInputTransaction,Fl as PlayerAuthItemStackRequest,kc as PlayerBlockActionData,Cl as PlayerBlockActions,un as PlayerEnchantOptionsPacket,bn as PlayerFogPacket,wr as PlayerHotbarPacket,Q as PlayerInputTick,Nn as PlayerListAction,mi as PlayerListPacket,_f as PlayerListRecord,oe as PlayerSkinPacket,Wi as PlayerStartItemCooldownPacket,kd as PostFixes,Ld as PotionMixDataEntry,Jg as PredictedResult,Wn as PredictionType,bt as PropertySyncData,V as RecipeIngredient,Yt as RecipeUnlockingRequirement,Uo as RemoveEntityPacket,Jo as RemoveObjectivePacket,ui as RequestChunkRadiusPacket,Do as RequestNetworkSettingsPacket,qr as RequestPermissionsPacket,Xs as ResourceIdVersions,os as ResourcePackChunkDataPacket,yi as ResourcePackChunkRequestPacket,hi as ResourcePackClientResponsePacket,rs as ResourcePackDataInfoPacket,ff as ResourcePackIds,_h as ResourcePackResponse,Vt as ResourcePackStackPacket,Ft as ResourcePacksInfoPacket,Rr as RespawnPacket,Gh as RespawnState,hn as RiderJumpPacket,sa as Rotation,Ia as RotationByte,ic as SHIELD_NETWORK_ID,Sd as ScoreEntry,Tn as ScoreboardActionType,fa as ScoreboardIdentity,ag as ScoreboardIdentityAction,Ie as ScoreboardIdentityType,Pi as ScriptMessagePacket,or as SerializedSkin,Hn as ServerAuthMovementMode,Li as ServerSettingsResponsePacket,Eo as ServerToClientHandshakePacket,mt as ServerboundDiagnosticsPacket,Hi as ServerboundLoadingScreenPacketPacket,Ig as ServerboundLoadingScreenType,ze as SetActorDataPacket,wn as SetActorLinkPacket,kr as SetActorMotionPacket,No as SetCommandsEnabledPacket,Rn as SetDifficultyPacket,ie as SetDisplayObjectivePacket,In as SetHealthPacket,Bi as SetHudPacket,Mo as SetLocalPlayerAsInitializedPacket,zo as SetPlayerGameTypePacket,ne as SetPlayerInventoryOptionsPacket,Ii as SetScorePacket,Si as SetScoreboardIdentityPacket,Ee as SetSpawnPositionPacket,Ao as SetTimePacket,xt as SetTitlePacket,Bg as ShakeAction,Sg as ShakeType,no as ShapedRecipe,sr as ShapelessRecipe,Ki as ShowCreditsPacket,On as ShowProfilePacket,Rc as SignedBlockPosition,Ln as SkinAnimation,ct as SkinImage,En as SkinPersonaPiece,vn as SkinPersonaTintPiece,ce as SpawnParticleEffectPacket,qn as SpawnType,u as StartGamePacket,Tr as StopSoundPacket,Qe as StructureBlockUpdatePacket,Pa as StructureEditorData,bc as StructureSettings,id as Subcommands,Sn as SyncActorPropertyPacket,Oi as TakeItemActorPacket,x as TelemetryEventType,kf as TeleportCause,Rt as TextPacket,$ as TextPacketType,Nf as TextParameters,Df as TextSource,sf as TexturePackInfo,Fh as TitleType,xi as ToastRequestPacket,Xl as TradeOffer,Hh as TransactionSourceType,Sr as TransferPacket,_g as TriggerType,Xi as TrimDataPacket,Ca as UnlockedRecipesEntry,Bn as UnlockedRecipesPacket,Ost as UnlockedRecipesType,Fn as UnlockingContext,We as UpdateAbilitiesPacket,re as UpdateAdventureSettingsPacket,Ir as UpdateAttributesPacket,Yh as UpdateBlockFlagsType,Jh as UpdateBlockLayerType,Ge as UpdateBlockPacket,Qi as UpdateClientInputLocksPacket,st as UpdateTradePacket,NZ as UserDataShapelessRecipe,C2 as VarStringArray,_ as Vector2f,l as Vector3f,Nh as ViolationSeverity,Dh as ViolationType,$g as WearableSlot,wst as getPacketId};
//# sourceMappingURL=data:application/json;base64,