var Vu=Object.defineProperty;var s=(t,e)=>Vu(t,"name",{value:e,configurable:!0});var p=function(t){return t[t.Login=1]="Login",t[t.PlayStatus=2]="PlayStatus",t[t.ServerToClientHandshake=3]="ServerToClientHandshake",t[t.ClientToServerHandshake=4]="ClientToServerHandshake",t[t.Disconnect=5]="Disconnect",t[t.ResourcePacksInfo=6]="ResourcePacksInfo",t[t.ResourcePackStack=7]="ResourcePackStack",t[t.ResourcePackClientResponse=8]="ResourcePackClientResponse",t[t.Text=9]="Text",t[t.SetTime=10]="SetTime",t[t.StartGame=11]="StartGame",t[t.AddPlayer=12]="AddPlayer",t[t.AddEntity=13]="AddEntity",t[t.RemoveEntity=14]="RemoveEntity",t[t.AddItemActor=15]="AddItemActor",t[t.TakeItemActor=17]="TakeItemActor",t[t.MoveActorAbsolute=18]="MoveActorAbsolute",t[t.MovePlayer=19]="MovePlayer",t[t.RiderJump=20]="RiderJump",t[t.UpdateBlock=21]="UpdateBlock",t[t.LevelEvent=25]="LevelEvent",t[t.BlockEvent=26]="BlockEvent",t[t.ActorEvent=27]="ActorEvent",t[t.MobEffect=28]="MobEffect",t[t.UpdateAttributes=29]="UpdateAttributes",t[t.InventoryTransaction=30]="InventoryTransaction",t[t.MobEquipment=31]="MobEquipment",t[t.MobArmorEquipment=32]="MobArmorEquipment",t[t.Interact=33]="Interact",t[t.BlockPickRequest=34]="BlockPickRequest",t[t.EntityPickRequest=35]="EntityPickRequest",t[t.PlayerAction=36]="PlayerAction",t[t.HurtArmor=38]="HurtArmor",t[t.SetActorData=39]="SetActorData",t[t.SetActorMotion=40]="SetActorMotion",t[t.SetActorLink=41]="SetActorLink",t[t.SetHealth=42]="SetHealth",t[t.SetSpawnPosition=43]="SetSpawnPosition",t[t.Animate=44]="Animate",t[t.Respawn=45]="Respawn",t[t.ContainerOpen=46]="ContainerOpen",t[t.ContainerClose=47]="ContainerClose",t[t.PlayerHotbar=48]="PlayerHotbar",t[t.InventoryContent=49]="InventoryContent",t[t.InventorySlot=50]="InventorySlot",t[t.ContainerSetData=51]="ContainerSetData",t[t.CraftingData=52]="CraftingData",t[t.BlockActorData=56]="BlockActorData",t[t.LevelChunk=58]="LevelChunk",t[t.SetCommandsEnabled=59]="SetCommandsEnabled",t[t.SetDifficulty=60]="SetDifficulty",t[t.ChangeDimension=61]="ChangeDimension",t[t.SetPlayerGameType=62]="SetPlayerGameType",t[t.PlayerList=63]="PlayerList",t[t.LegacyTelemetryEvent=65]="LegacyTelemetryEvent",t[t.RequestChunkRadius=69]="RequestChunkRadius",t[t.ChunkRadiusUpdate=70]="ChunkRadiusUpdate",t[t.GameRulesChanged=72]="GameRulesChanged",t[t.BossEvent=74]="BossEvent",t[t.ShowCredits=75]="ShowCredits",t[t.AvailableCommands=76]="AvailableCommands",t[t.CommandRequest=77]="CommandRequest",t[t.CommandBlockUpdate=78]="CommandBlockUpdate",t[t.CommandOutput=79]="CommandOutput",t[t.ResourcePackDataInfo=82]="ResourcePackDataInfo",t[t.ResourcePackChunkData=83]="ResourcePackChunkData",t[t.ResourcePackChunkRequest=84]="ResourcePackChunkRequest",t[t.Transfer=85]="Transfer",t[t.PlaySound=86]="PlaySound",t[t.StopSound=87]="StopSound",t[t.SetTitle=88]="SetTitle",t[t.StructureBlockUpdate=90]="StructureBlockUpdate",t[t.PlayerSkin=93]="PlayerSkin",t[t.BookEdit=97]="BookEdit",t[t.NpcRequest=98]="NpcRequest",t[t.ModalFormRequest=100]="ModalFormRequest",t[t.ModalFormResponse=101]="ModalFormResponse",t[t.ServerSettingsResponse=103]="ServerSettingsResponse",t[t.RemoveObjective=106]="RemoveObjective",t[t.SetDisplayObjective=107]="SetDisplayObjective",t[t.SetScore=108]="SetScore",t[t.MoveActorDelta=111]="MoveActorDelta",t[t.SetScoreboardIdentity=112]="SetScoreboardIdentity",t[t.SetLocalPlayerAsInitialized=113]="SetLocalPlayerAsInitialized",t[t.NetworkStackLatency=115]="NetworkStackLatency",t[t.SpawnParticleEffect=118]="SpawnParticleEffect",t[t.AvailableActorIdentifiers=119]="AvailableActorIdentifiers",t[t.NetworkChunkPublisherUpdate=121]="NetworkChunkPublisherUpdate",t[t.BiomeDefinitionList=122]="BiomeDefinitionList",t[t.LevelSoundEvent=123]="LevelSoundEvent",t[t.LevelEventGeneric=124]="LevelEventGeneric",t[t.OnScreenTextureAnimation=130]="OnScreenTextureAnimation",t[t.Emote=138]="Emote",t[t.CompletedUsingItem=142]="CompletedUsingItem",t[t.NetworkSettings=143]="NetworkSettings",t[t.PlayerAuthInput=144]="PlayerAuthInput",t[t.CreativeContent=145]="CreativeContent",t[t.PlayerEnchantOptions=146]="PlayerEnchantOptions",t[t.ItemStackRequest=147]="ItemStackRequest",t[t.ItemStackResponse=148]="ItemStackResponse",t[t.EmoteList=152]="EmoteList",t[t.PacketViolationWarning=156]="PacketViolationWarning",t[t.AnimateEntity=158]="AnimateEntity",t[t.CameraShake=159]="CameraShake",t[t.PlayerFog=160]="PlayerFog",t[t.ItemComponent=162]="ItemComponent",t[t.SyncActorProperty=165]="SyncActorProperty",t[t.NpcDialogue=169]="NpcDialogue",t[t.PlayerStartItemCooldown=176]="PlayerStartItemCooldown",t[t.ScriptMessage=177]="ScriptMessage",t[t.DimensionData=180]="DimensionData",t[t.RequestPermissions=185]="RequestPermissions",t[t.ToastRequest=186]="ToastRequest",t[t.UpdateAbilities=187]="UpdateAbilities",t[t.UpdateAdventureSettings=188]="UpdateAdventureSettings",t[t.DeathInfo=189]="DeathInfo",t[t.RequestNetworkSettings=193]="RequestNetworkSettings",t[t.UpdateClientInputLocks=196]="UpdateClientInputLocks",t[t.CameraPresetsPacket=198]="CameraPresetsPacket",t[t.UnlockedRecipes=199]="UnlockedRecipes",t[t.CameraInstructions=300]="CameraInstructions",t[t.TrimData=302]="TrimData",t[t.OpenSign=303]="OpenSign",t[t.SetPlayerInventoryOptions=307]="SetPlayerInventoryOptions",t[t.SetHud=308]="SetHud",t[t.AwardAchievement=309]="AwardAchievement",t[t.ClientboundCloseForm=310]="ClientboundCloseForm",t[t.ServerboundLoadingScreenPacket=312]="ServerboundLoadingScreenPacket",t[t.CurrentStructureFeature=314]="CurrentStructureFeature",t[t.ServerboundDiagnosticPacket=315]="ServerboundDiagnosticPacket",t}(p||{});var _u=function(t){return t[t.Unknown=0]="Unknown",t[t.CantConnectNoInternet=1]="CantConnectNoInternet",t[t.NoPermissions=2]="NoPermissions",t[t.UnrecoverableError=3]="UnrecoverableError",t[t.ThirdPartyBlocked=4]="ThirdPartyBlocked",t[t.ThirdPartyNoInternet=5]="ThirdPartyNoInternet",t[t.ThirdPartyBadIp=6]="ThirdPartyBadIp",t[t.ThirdPartyNoServerOrServerLocked=7]="ThirdPartyNoServerOrServerLocked",t[t.VersionMismatch=8]="VersionMismatch",t[t.SkinIssue=9]="SkinIssue",t[t.InviteSessionNotFound=10]="InviteSessionNotFound",t[t.EduLevelSettingsMissing=11]="EduLevelSettingsMissing",t[t.LocalServerNotFound=12]="LocalServerNotFound",t[t.LegacyDisconnect=13]="LegacyDisconnect",t[t.UserLeaveGameAttempted=14]="UserLeaveGameAttempted",t[t.PlatformLockedSkinsError=15]="PlatformLockedSkinsError",t[t.RealmsWorldUnassigned=16]="RealmsWorldUnassigned",t[t.RealmsServerCantConnect=17]="RealmsServerCantConnect",t[t.RealmsServerHidden=18]="RealmsServerHidden",t[t.RealmsServerDisabledBeta=19]="RealmsServerDisabledBeta",t[t.RealmsServerDisabled=20]="RealmsServerDisabled",t[t.CrossPlatformDisallowed=21]="CrossPlatformDisallowed",t[t.CantConnect=22]="CantConnect",t[t.SessionNotFound=23]="SessionNotFound",t[t.ClientSettingsIncompatibleWithServer=24]="ClientSettingsIncompatibleWithServer",t[t.ServerFull=25]="ServerFull",t[t.InvalidPlatformSkin=26]="InvalidPlatformSkin",t[t.EditionVersionMismatch=27]="EditionVersionMismatch",t[t.EditionMismatch=28]="EditionMismatch",t[t.LevelNewerThanExeVersion=29]="LevelNewerThanExeVersion",t[t.NoFailOccurred=30]="NoFailOccurred",t[t.BannedSkin=31]="BannedSkin",t[t.Timeout=32]="Timeout",t[t.ServerNotFound=33]="ServerNotFound",t[t.OutdatedServer=34]="OutdatedServer",t[t.OutdatedClient=35]="OutdatedClient",t[t.NoPremiumPlatform=36]="NoPremiumPlatform",t[t.MultiplayerDisabled=37]="MultiplayerDisabled",t[t.NoWifi=38]="NoWifi",t[t.WorldCorruption=39]="WorldCorruption",t[t.NoReason=40]="NoReason",t[t.Disconnected=41]="Disconnected",t[t.InvalidPlayer=42]="InvalidPlayer",t[t.LoggedInOtherLocation=43]="LoggedInOtherLocation",t[t.ServerIdConflict=44]="ServerIdConflict",t[t.NotAllowed=45]="NotAllowed",t[t.NotAuthenticated=46]="NotAuthenticated",t[t.InvalidTenant=47]="InvalidTenant",t[t.UnknownPacket=48]="UnknownPacket",t[t.UnexpectedPacket=49]="UnexpectedPacket",t[t.InvalidCommandRequestPacket=50]="InvalidCommandRequestPacket",t[t.HostSuspended=51]="HostSuspended",t[t.LoginPacketNoRequest=52]="LoginPacketNoRequest",t[t.LoginPacketNoCert=53]="LoginPacketNoCert",t[t.MissingClient=54]="MissingClient",t[t.Kicked=55]="Kicked",t[t.KickedForExploit=56]="KickedForExploit",t[t.KickedForIdle=57]="KickedForIdle",t[t.ResourcePackProblem=58]="ResourcePackProblem",t[t.IncompatiblePack=59]="IncompatiblePack",t[t.OutOfStorage=60]="OutOfStorage",t[t.InvalidLevel=61]="InvalidLevel",t[t.DisconnectPacketDeprecated=62]="DisconnectPacketDeprecated",t[t.BlockMismatch=63]="BlockMismatch",t[t.InvalidHeights=64]="InvalidHeights",t[t.InvalidWidths=65]="InvalidWidths",t[t.ConnectionLost=66]="ConnectionLost",t[t.ZombieConnection=67]="ZombieConnection",t[t.Shutdown=68]="Shutdown",t[t.ReasonNotSet=69]="ReasonNotSet",t[t.LoadingStateTimeout=70]="LoadingStateTimeout",t[t.ResourcePackLoadingFailed=71]="ResourcePackLoadingFailed",t[t.SearchingForSessionLoadingScreenFailed=72]="SearchingForSessionLoadingScreenFailed",t[t.ConnProtocolVersion=73]="ConnProtocolVersion",t[t.SubsystemStatusError=74]="SubsystemStatusError",t[t.EmptyAuthFromDiscovery=75]="EmptyAuthFromDiscovery",t[t.EmptyUrlFromDiscovery=76]="EmptyUrlFromDiscovery",t[t.ExpiredAuthFromDiscovery=77]="ExpiredAuthFromDiscovery",t[t.UnknownSignalServiceSignInFailure=78]="UnknownSignalServiceSignInFailure",t[t.XblJoinLobbyFailure=79]="XblJoinLobbyFailure",t[t.UnspecifiedClientInstanceDisconnection=80]="UnspecifiedClientInstanceDisconnection",t[t.ConnSessionNotFound=81]="ConnSessionNotFound",t[t.ConnCreatePeerConnection=82]="ConnCreatePeerConnection",t[t.ConnIce=83]="ConnIce",t[t.ConnConnectRequest=84]="ConnConnectRequest",t[t.ConnConnectResponse=85]="ConnConnectResponse",t[t.ConnNegotiationTimeout=86]="ConnNegotiationTimeout",t[t.ConnInactivityTimeout=87]="ConnInactivityTimeout",t[t.StaleConnectionBeingReplaced=88]="StaleConnectionBeingReplaced",t[t.RealmsSessionNotFound=89]="RealmsSessionNotFound",t[t.BadPacket=90]="BadPacket",t}(_u||{});var ju=function(t){return t[t.Zlib=0]="Zlib",t[t.Snappy=1]="Snappy",t[t.NotPresent=2]="NotPresent",t[t.None=255]="None",t}(ju||{});var Uu=function(t){return t[t.LoginSuccess=0]="LoginSuccess",t[t.FailedClient=1]="FailedClient",t[t.FailedServer=2]="FailedServer",t[t.PlayerSpawn=3]="PlayerSpawn",t[t.FailedInvalidTenant=4]="FailedInvalidTenant",t[t.FailedVanillaEdu=5]="FailedVanillaEdu",t[t.FailedIncompatible=6]="FailedIncompatible",t[t.FailedServerFull=7]="FailedServerFull",t[t.FailedEditorVanillaMismatch=8]="FailedEditorVanillaMismatch",t[t.FailedVanillaEditorMismatch=9]="FailedVanillaEditorMismatch",t}(Uu||{});var Nu=function(t){return t[t.None=0]="None",t[t.Refused=1]="Refused",t[t.SendPacks=2]="SendPacks",t[t.HaveAllPacks=3]="HaveAllPacks",t[t.Completed=4]="Completed",t}(Nu||{});var Du=function(t){return t[t.Survival=0]="Survival",t[t.Creative=1]="Creative",t[t.Adventure=2]="Adventure",t[t.SurvivalSpectator=3]="SurvivalSpectator",t[t.CreativeSpectator=4]="CreativeSpectator",t[t.Fallback=5]="Fallback",t[t.Spectator=6]="Spectator",t}(Du||{});var an=function(t){return t[t.Peaceful=0]="Peaceful",t[t.Easy=1]="Easy",t[t.Normal=2]="Normal",t[t.Hard=3]="Hard",t}(an||{});var fe=function(t){return t[t.Bool=1]="Bool",t[t.Int=2]="Int",t[t.Float=3]="Float",t}(fe||{});var sn=function(t){return t[t.Visitor=0]="Visitor",t[t.Member=1]="Member",t[t.Operator=2]="Operator",t[t.Custom=3]="Custom",t}(sn||{});var cn=function(t){return t[t.Normal=0]="Normal",t[t.Reset=1]="Reset",t[t.Teleport=2]="Teleport",t[t.Rotation=3]="Rotation",t}(cn||{});var pn=function(t){return t[t.Add=0]="Add",t[t.Remove=1]="Remove",t}(pn||{});var Mu=function(t){return t[t.Malformed=0]="Malformed",t}(Mu||{});var Zu=function(t){return t[t.Warning=0]="Warning",t[t.FanalWarning=1]="FanalWarning",t[t.Terminating=2]="Terminating",t}(Zu||{});var Tu=function(t){return t[t.Normal=0]="Normal",t[t.Operator=1]="Operator",t[t.Automation=2]="Automation",t[t.Host=3]="Host",t[t.Owner=4]="Owner",t[t.Internal=5]="Internal",t}(Tu||{});var zu=function(t){return t[t.Int=1]="Int",t[t.Float=3]="Float",t[t.Value=4]="Value",t[t.WildcardInt=5]="WildcardInt",t[t.Operator=6]="Operator",t[t.CompareOperator=7]="CompareOperator",t[t.Target=8]="Target",t[t.WildcardTarget=10]="WildcardTarget",t[t.Filepath=17]="Filepath",t[t.FullIntegerRange=23]="FullIntegerRange",t[t.EquipmentSlot=47]="EquipmentSlot",t[t.String=48]="String",t[t.IntPosition=64]="IntPosition",t[t.FloatPosition=65]="FloatPosition",t[t.Message=67]="Message",t[t.RawText=70]="RawText",t[t.Json=74]="Json",t[t.BlockState=84]="BlockState",t[t.Command=87]="Command",t}(zu||{});var Fu=function(t){return t[t.CustomCache=0]="CustomCache",t[t.Base=1]="Base",t[t.Spectator=2]="Spectator",t[t.Commands=3]="Commands",t[t.Editor=4]="Editor",t}(Fu||{});var V=function(t){return t[t.Build=0]="Build",t[t.Mine=1]="Mine",t[t.DoorsAndSwitches=2]="DoorsAndSwitches",t[t.OpenContainers=3]="OpenContainers",t[t.AttackPlayers=4]="AttackPlayers",t[t.AttackMobs=5]="AttackMobs",t[t.OperatorCommands=6]="OperatorCommands",t[t.Teleport=7]="Teleport",t[t.Invulnerable=8]="Invulnerable",t[t.Flying=9]="Flying",t[t.MayFly=10]="MayFly",t[t.InstantBuild=11]="InstantBuild",t[t.Lightning=12]="Lightning",t[t.FlySpeed=13]="FlySpeed",t[t.WalkSpeed=14]="WalkSpeed",t[t.Muted=15]="Muted",t[t.WorldBuilder=16]="WorldBuilder",t[t.NoClip=17]="NoClip",t[t.PrivilegedBuilder=18]="PrivilegedBuilder",t[t.Count=19]="Count",t}(V||{});var J=function(t){return t[t.Raw=0]="Raw",t[t.Chat=1]="Chat",t[t.Translation=2]="Translation",t[t.Popup=3]="Popup",t[t.JukeboxPopup=4]="JukeboxPopup",t[t.Tip=5]="Tip",t[t.System=6]="System",t[t.Whisper=7]="Whisper",t[t.Announcement=8]="Announcement",t[t.JsonWhisper=9]="JsonWhisper",t[t.Json=10]="Json",t[t.JsonAnnouncement=11]="JsonAnnouncement",t}(J||{});var Hu=function(t){return t[t.Clear=0]="Clear",t[t.Reset=1]="Reset",t[t.Title=2]="Title",t[t.Subtitle=3]="Subtitle",t[t.Actionbar=4]="Actionbar",t[t.Times=5]="Times",t[t.TitleTextObject=6]="TitleTextObject",t[t.SubtitleTextObject=7]="SubtitleTextObject",t[t.ActionbarTextObject=8]="ActionbarTextObject",t}(Hu||{});var kr=function(t){return t[t.Invalid=0]="Invalid",t[t.StopRiding=3]="StopRiding",t[t.InteractUpdate=4]="InteractUpdate",t[t.NpcOpen=5]="NpcOpen",t[t.OpenInventory=6]="OpenInventory",t}(kr||{});var Wu=function(t){return t[t.None=-1]="None",t[t.Inventory=0]="Inventory",t[t.First=1]="First",t[t.Last=100]="Last",t[t.Offhand=119]="Offhand",t[t.Armor=120]="Armor",t[t.SelectionSlots=122]="SelectionSlots",t[t.Ui=124]="Ui",t[t.Registry=125]="Registry",t}(Wu||{});var qu=function(t){return t[t.AnvilInput=0]="AnvilInput",t[t.AnvilMaterial=1]="AnvilMaterial",t[t.AnvilResult=2]="AnvilResult",t[t.SmithingTableInput=3]="SmithingTableInput",t[t.SmithingTableMaterial=4]="SmithingTableMaterial",t[t.SmithingTableResult=5]="SmithingTableResult",t[t.Armor=6]="Armor",t[t.Container=7]="Container",t[t.BeaconPayment=8]="BeaconPayment",t[t.BrewingInput=9]="BrewingInput",t[t.BrewingResult=10]="BrewingResult",t[t.BrewingFuel=11]="BrewingFuel",t[t.HotbarAndInventory=12]="HotbarAndInventory",t[t.CraftingInput=13]="CraftingInput",t[t.CraftingOutput=14]="CraftingOutput",t[t.RecipeConstruction=15]="RecipeConstruction",t[t.RecipeNature=16]="RecipeNature",t[t.RecipeItems=17]="RecipeItems",t[t.RecipeSearch=18]="RecipeSearch",t[t.RecipeSearchBar=19]="RecipeSearchBar",t[t.RecipeEquipment=20]="RecipeEquipment",t[t.RecipeBook=21]="RecipeBook",t[t.EnchantingInput=22]="EnchantingInput",t[t.EnchantingLapis=23]="EnchantingLapis",t[t.FurnaceFuel=24]="FurnaceFuel",t[t.FurnaceIngredient=25]="FurnaceIngredient",t[t.FurnaceOutput=26]="FurnaceOutput",t[t.HorseEquip=27]="HorseEquip",t[t.Hotbar=28]="Hotbar",t[t.Inventory=29]="Inventory",t[t.Shulker=30]="Shulker",t[t.TradeIngredient1=31]="TradeIngredient1",t[t.TradeIngredient2=32]="TradeIngredient2",t[t.TradeResult=33]="TradeResult",t[t.Offhand=34]="Offhand",t[t.CompCreateInput=35]="CompCreateInput",t[t.CompCreateOutput=36]="CompCreateOutput",t[t.ElementConstructOutput=37]="ElementConstructOutput",t[t.MatReduceInput=38]="MatReduceInput",t[t.MatReduceOutput=39]="MatReduceOutput",t[t.LabTableInput=40]="LabTableInput",t[t.LoomInput=41]="LoomInput",t[t.LoomDye=42]="LoomDye",t[t.LoomMaterial=43]="LoomMaterial",t[t.LoomResult=44]="LoomResult",t[t.BlastFurnaceIngredient=45]="BlastFurnaceIngredient",t[t.SmokerIngredient=46]="SmokerIngredient",t[t.Trade2Ingredient1=47]="Trade2Ingredient1",t[t.Trade2Ingredient2=48]="Trade2Ingredient2",t[t.Trade2Result=49]="Trade2Result",t[t.GrindstoneInput=50]="GrindstoneInput",t[t.GrindstoneAdditional=51]="GrindstoneAdditional",t[t.GrindstoneResult=52]="GrindstoneResult",t[t.StonecutterInput=53]="StonecutterInput",t[t.StonecutterResult=54]="StonecutterResult",t[t.CartographyInput=55]="CartographyInput",t[t.CartographyAdditional=56]="CartographyAdditional",t[t.CartographyResult=57]="CartographyResult",t[t.Barrel=58]="Barrel",t[t.Cursor=59]="Cursor",t[t.CreativeOutput=60]="CreativeOutput",t[t.SmithingTableTemplate=61]="SmithingTableTemplate",t[t.Crafter=62]="Crafter",t[t.Dynamic=63]="Dynamic",t}(qu||{});var Au=function(t){return t[t.None=-9]="None",t[t.Inventory=-1]="Inventory",t[t.Container=0]="Container",t[t.Workbench=1]="Workbench",t[t.Furnace=2]="Furnace",t[t.Enchantment=3]="Enchantment",t[t.BrewingStand=4]="BrewingStand",t[t.Anvil=5]="Anvil",t[t.Dispenser=6]="Dispenser",t[t.Dropper=7]="Dropper",t[t.Hopper=8]="Hopper",t[t.Cauldron=9]="Cauldron",t[t.MinecartChest=10]="MinecartChest",t[t.MinecartHopper=11]="MinecartHopper",t[t.Horse=12]="Horse",t[t.Beacon=13]="Beacon",t[t.StructureEditor=14]="StructureEditor",t[t.Trading=15]="Trading",t[t.CommandBlock=16]="CommandBlock",t[t.Jukebox=17]="Jukebox",t[t.Armor=18]="Armor",t[t.Hand=19]="Hand",t[t.CompoundCreator=20]="CompoundCreator",t[t.ElementConstructor=21]="ElementConstructor",t[t.MaterialReducer=22]="MaterialReducer",t[t.LabTable=23]="LabTable",t[t.Loom=24]="Loom",t[t.Lectern=25]="Lectern",t[t.Grindstone=26]="Grindstone",t[t.BlastFurnace=27]="BlastFurnace",t[t.Smoker=28]="Smoker",t[t.Stonecutter=29]="Stonecutter",t[t.Cartography=30]="Cartography",t[t.Hud=31]="Hud",t[t.JigsawEditor=32]="JigsawEditor",t[t.SmithingTable=33]="SmithingTable",t[t.ChestBoat=34]="ChestBoat",t[t.DecoratedPot=35]="DecoratedPot",t[t.Crafter=36]="Crafter",t}(Au||{});var He=function(t){return t[t.Unknown=-1]="Unknown",t[t.StartDestroyBlock=0]="StartDestroyBlock",t[t.AbortDestroyBlock=1]="AbortDestroyBlock",t[t.StopDestroyBlock=2]="StopDestroyBlock",t[t.GetUpdatedBlock=3]="GetUpdatedBlock",t[t.DropItem=4]="DropItem",t[t.StartSleeping=5]="StartSleeping",t[t.StopSleeping=6]="StopSleeping",t[t.Respawn=7]="Respawn",t[t.StartJump=8]="StartJump",t[t.StartSprinting=9]="StartSprinting",t[t.StopSprinting=10]="StopSprinting",t[t.StartSneaking=11]="StartSneaking",t[t.StopSneaking=12]="StopSneaking",t[t.CreativeDestroyBlock=13]="CreativeDestroyBlock",t[t.ChangeDimensionAck=14]="ChangeDimensionAck",t[t.StartGliding=15]="StartGliding",t[t.StopGliding=16]="StopGliding",t[t.DenyDestroyBlock=17]="DenyDestroyBlock",t[t.CrackBlock=18]="CrackBlock",t[t.ChangeSkin=19]="ChangeSkin",t[t.DEPRECATED_UpdatedEnchantingSeed=20]="DEPRECATED_UpdatedEnchantingSeed",t[t.StartSwimming=21]="StartSwimming",t[t.StopSwimming=22]="StopSwimming",t[t.StartSpinAttack=23]="StartSpinAttack",t[t.StopSpinAttack=24]="StopSpinAttack",t[t.InteractWithBlock=25]="InteractWithBlock",t[t.PredictDestroyBlock=26]="PredictDestroyBlock",t[t.ContinueDestroyBlock=27]="ContinueDestroyBlock",t[t.StartItemUseOn=28]="StartItemUseOn",t[t.StopItemUseOn=29]="StopItemUseOn",t[t.HandledTeleport=30]="HandledTeleport",t[t.MissedSwing=31]="MissedSwing",t[t.StartCrawling=32]="StartCrawling",t[t.StopCrawling=33]="StopCrawling",t[t.StartFlying=34]="StartFlying",t[t.StopFlying=35]="StopFlying",t[t.ClientAckServerData=36]="ClientAckServerData",t[t.StartUsingItem=37]="StartUsingItem",t[t.Count=38]="Count",t}(He||{});var Gu=function(t){return t.Absorption="minecraft:absorption",t.AttackDamage="minecraft:attack_damage",t.FallDamage="minecraft:fall_damage",t.FollowRange="minecraft:follow_range",t.Health="minecraft:health",t.HorseJumpStrength="minecraft:horse.jump_strength",t.KnockbackResistence="minecraft:knockback_resistance",t.LavaMovement="minecraft:lava_movement",t.Luck="minecraft:luck",t.Movement="minecraft:movement",t.PlayerExhaustion="minecraft:player.exhaustion",t.PlayerExperience="minecraft:player.experience",t.PlayerHunger="minecraft:player.hunger",t.PlayerLevel="minecraft:player.level",t.PlayerSaturation="minecraft:player.saturation",t.UnderwaterMovement="minecraft:underwater_movement",t.ZombieSpawnReinforcements="minecraft:zombie.spawn_reinforcements",t}(Gu||{});var pt=function(t){return t[t.NormalTransaction=0]="NormalTransaction",t[t.InventoryMismatch=1]="InventoryMismatch",t[t.ItemUseTransaction=2]="ItemUseTransaction",t[t.ItemUseOnEntityTransaction=3]="ItemUseOnEntityTransaction",t[t.ItemReleaseTransaction=4]="ItemReleaseTransaction",t}(pt||{});var Ku=function(t){return t[t.Container=0]="Container",t[t.Global=1]="Global",t[t.WorldInteraction=2]="WorldInteraction",t[t.Creative=3]="Creative",t[t.CraftSlot=100]="CraftSlot",t[t.Craft=9999]="Craft",t}(Ku||{});var Yu=function(t){return t[t.Undefined=0]="Undefined",t[t.Android=1]="Android",t[t.Ios=2]="Ios",t[t.MacOS=3]="MacOS",t[t.FireOS=4]="FireOS",t[t.GearVR=5]="GearVR",t[t.Hololens=6]="Hololens",t[t.Win10=7]="Win10",t[t.Win32=8]="Win32",t[t.Dedicated=9]="Dedicated",t[t.TVOS=10]="TVOS",t[t.Orbis=11]="Orbis",t[t.Switch=12]="Switch",t[t.Xbox=13]="Xbox",t[t.WindowsPhone=14]="WindowsPhone",t[t.Linux=15]="Linux",t}(Yu||{});var Ju=function(t){return t[t.ServerSearchingForSpawn=0]="ServerSearchingForSpawn",t[t.ServerReadyToSpawn=1]="ServerReadyToSpawn",t[t.ClientReadyToSpawn=2]="ClientReadyToSpawn",t}(Ju||{});var Qu=function(t){return t.Action="form",t.Message="modal",t.Modal="custom_form",t}(Qu||{});var Xu=function(t){return t[t.Normal=0]="Normal",t[t.WaterLogged=1]="WaterLogged",t}(Xu||{});var $u=function(t){return t[t.None=0]="None",t[t.Neighbors=1]="Neighbors",t[t.Network=2]="Network",t[t.NoGraphic=4]="NoGraphic",t[t.Priority=8]="Priority",t}($u||{});var Lu=function(t){return t[t.Overworld=0]="Overworld",t[t.Nether=1]="Nether",t[t.End=2]="End",t}(Lu||{});var Eu=function(t){return t[t.Closed=0]="Closed",t[t.Busy=1]="Busy",t}(Eu||{});var W=function(t){return t[t.Take=0]="Take",t[t.Place=1]="Place",t[t.Swap=2]="Swap",t[t.Drop=3]="Drop",t[t.Destroy=4]="Destroy",t[t.Consume=5]="Consume",t[t.Create=6]="Create",t[t.PlaceInItemContainer_DEPRECATED=7]="PlaceInItemContainer_DEPRECATED",t[t.TakeFromItemContainer_DEPRECATED=8]="TakeFromItemContainer_DEPRECATED",t[t.ScreenLabTableCombine=9]="ScreenLabTableCombine",t[t.ScreenBeaconPayment=10]="ScreenBeaconPayment",t[t.ScreenHUDMineBlock=11]="ScreenHUDMineBlock",t[t.CraftRecipe=12]="CraftRecipe",t[t.CraftRecipeAuto=13]="CraftRecipeAuto",t[t.CraftCreative=14]="CraftCreative",t[t.CraftRecipeOptional=15]="CraftRecipeOptional",t[t.CraftRepairAndDisenchant=16]="CraftRepairAndDisenchant",t[t.CraftLoom=17]="CraftLoom",t[t.CraftNonImplemented_DEPRECATEDASKTYLAING=18]="CraftNonImplemented_DEPRECATEDASKTYLAING",t[t.CraftResults_DEPRECATEDASKTYLAING=19]="CraftResults_DEPRECATEDASKTYLAING",t[t.ifdef=20]="ifdef",t[t.TEST_INFRASTRUCTURE_ENABLED=21]="TEST_INFRASTRUCTURE_ENABLED",t[t.Test=22]="Test",t[t.endif=23]="endif",t}(W||{});var vu=function(t){return t[t.Ok=0]="Ok",t[t.Error=1]="Error",t}(vu||{});var th=function(t){return t.AttackMobs="attack_mobs",t.AttackPlayers="attack_players",t.Build="build",t.Count="count",t.DoorsAndSwitches="doors_and_switches",t.FlySpeed="fly_speed",t.Flying="flying",t.InstantBuild="instant_build",t.Invulnerable="invulnerable",t.Lightning="lightning",t.MayFly="may_fly",t.Mine="mine",t.Muted="muted",t.NoClip="no_clip",t.OpenContainers="open_containers",t.OperatorCommands="operator_commands",t.PrivilegedBuilder="privileged_builder",t.Teleport="teleport",t.WalkSpeed="walk_speed",t.WorldBuilder="world_builder",t}(th||{});var fn=function(t){return t[t.None=0]="None",t[t.SwingArm=1]="SwingArm",t[t.Unknown=2]="Unknown",t[t.WakeUp=3]="WakeUp",t[t.CriticalHit=4]="CriticalHit",t[t.MagicCriticalHit=5]="MagicCriticalHit",t[t.RowRight=128]="RowRight",t[t.RowLeft=129]="RowLeft",t}(fn||{});var eh=function(t){return t[t.Undefined=0]="Undefined",t[t.SoundClick=1e3]="SoundClick",t[t.SoundClickFail=1001]="SoundClickFail",t[t.SoundLaunch=1002]="SoundLaunch",t[t.SoundOpenDoor=1003]="SoundOpenDoor",t[t.SoundFizz=1004]="SoundFizz",t[t.SoundFuse=1005]="SoundFuse",t[t.SoundPlayRecording=1006]="SoundPlayRecording",t[t.SoundGhastWarning=1007]="SoundGhastWarning",t[t.SoundGhastFireball=1008]="SoundGhastFireball",t[t.SoundBlazeFireball=1009]="SoundBlazeFireball",t[t.SoundZombieWoodenDoor=1010]="SoundZombieWoodenDoor",t[t.SoundZombieDoorCrash=1012]="SoundZombieDoorCrash",t[t.SoundZombieInfected=1016]="SoundZombieInfected",t[t.SoundZombieConverted=1017]="SoundZombieConverted",t[t.SoundEndermanTeleport=1018]="SoundEndermanTeleport",t[t.SoundAnvilBroken=1020]="SoundAnvilBroken",t[t.SoundAnvilUsed=1021]="SoundAnvilUsed",t[t.SoundAnvilLand=1022]="SoundAnvilLand",t[t.SoundInfinityArrowPickup=1030]="SoundInfinityArrowPickup",t[t.SoundTeleportEnderPearl=1032]="SoundTeleportEnderPearl",t[t.SoundAddItem=1040]="SoundAddItem",t[t.SoundItemFrameBreak=1041]="SoundItemFrameBreak",t[t.SoundItemFramePlace=1042]="SoundItemFramePlace",t[t.SoundItemFrameRemoveItem=1043]="SoundItemFrameRemoveItem",t[t.SoundItemFrameRotateItem=1044]="SoundItemFrameRotateItem",t[t.SoundExperienceOrbPickup=1051]="SoundExperienceOrbPickup",t[t.SoundTotemUsed=1052]="SoundTotemUsed",t[t.SoundArmorStandBreak=1060]="SoundArmorStandBreak",t[t.SoundArmorStandHit=1061]="SoundArmorStandHit",t[t.SoundArmorStandLand=1062]="SoundArmorStandLand",t[t.SoundArmorStandPlace=1063]="SoundArmorStandPlace",t[t.SoundPointedDripstoneLand=1064]="SoundPointedDripstoneLand",t[t.SoundDyeUsed=1065]="SoundDyeUsed",t[t.SoundInkSacUsed=1066]="SoundInkSacUsed",t[t.SoundAmethystResonate=1067]="SoundAmethystResonate",t[t.QueueCustomMusic=1900]="QueueCustomMusic",t[t.PlayCustomMusic=1901]="PlayCustomMusic",t[t.StopCustomMusic=1902]="StopCustomMusic",t[t.SetMusicVolume=1903]="SetMusicVolume",t[t.ParticlesShoot=2e3]="ParticlesShoot",t[t.ParticlesDestroyBlock=2001]="ParticlesDestroyBlock",t[t.ParticlesPotionSplash=2002]="ParticlesPotionSplash",t[t.ParticlesEyeOfEnderDeath=2003]="ParticlesEyeOfEnderDeath",t[t.ParticlesMobBlockSpawn=2004]="ParticlesMobBlockSpawn",t[t.ParticleCropGrowth=2005]="ParticleCropGrowth",t[t.ParticleSoundGuardianGhost=2006]="ParticleSoundGuardianGhost",t[t.ParticleDeathSmoke=2007]="ParticleDeathSmoke",t[t.ParticleDenyBlock=2008]="ParticleDenyBlock",t[t.ParticleGenericSpawn=2009]="ParticleGenericSpawn",t[t.ParticlesDragonEgg=2010]="ParticlesDragonEgg",t[t.ParticlesCropEaten=2011]="ParticlesCropEaten",t[t.ParticlesCrit=2012]="ParticlesCrit",t[t.ParticlesTeleport=2013]="ParticlesTeleport",t[t.ParticlesCrackBlock=2014]="ParticlesCrackBlock",t[t.ParticlesBubble=2015]="ParticlesBubble",t[t.ParticlesEvaporate=2016]="ParticlesEvaporate",t[t.ParticlesDestroyArmorStand=2017]="ParticlesDestroyArmorStand",t[t.ParticlesBreakingEgg=2018]="ParticlesBreakingEgg",t[t.ParticleDestroyEgg=2019]="ParticleDestroyEgg",t[t.ParticlesEvaporateWater=2020]="ParticlesEvaporateWater",t[t.ParticlesDestroyBlockNoSound=2021]="ParticlesDestroyBlockNoSound",t[t.ParticlesKnockbackRoar=2022]="ParticlesKnockbackRoar",t[t.ParticlesTeleportTrail=2023]="ParticlesTeleportTrail",t[t.ParticlesPointCloud=2024]="ParticlesPointCloud",t[t.ParticlesExplosion=2025]="ParticlesExplosion",t[t.ParticlesBlockExplosion=2026]="ParticlesBlockExplosion",t[t.ParticlesVibrationSignal=2027]="ParticlesVibrationSignal",t[t.ParticlesDripstoneDrip=2028]="ParticlesDripstoneDrip",t[t.ParticlesFizzEffect=2029]="ParticlesFizzEffect",t[t.WaxOn=2030]="WaxOn",t[t.WaxOff=2031]="WaxOff",t[t.Scrape=2032]="Scrape",t[t.ParticlesElectricSpark=2033]="ParticlesElectricSpark",t[t.ParticleTurtleEgg=2034]="ParticleTurtleEgg",t[t.ParticlesSculkShriek=2035]="ParticlesSculkShriek",t[t.SculkCatalystBloom=2036]="SculkCatalystBloom",t[t.SculkCharge=2037]="SculkCharge",t[t.SculkChargePop=2038]="SculkChargePop",t[t.SonicExplosion=2039]="SonicExplosion",t[t.DustPlume=2040]="DustPlume",t[t.StartRaining=3001]="StartRaining",t[t.StartThunderstorm=3002]="StartThunderstorm",t[t.StopRaining=3003]="StopRaining",t[t.StopThunderstorm=3004]="StopThunderstorm",t[t.GlobalPause=3005]="GlobalPause",t[t.SimTimeStep=3006]="SimTimeStep",t[t.SimTimeScale=3007]="SimTimeScale",t[t.ActivateBlock=3500]="ActivateBlock",t[t.CauldronExplode=3501]="CauldronExplode",t[t.CauldronDyeArmor=3502]="CauldronDyeArmor",t[t.CauldronCleanArmor=3503]="CauldronCleanArmor",t[t.CauldronFillPotion=3504]="CauldronFillPotion",t[t.CauldronTakePotion=3505]="CauldronTakePotion",t[t.CauldronFillWater=3506]="CauldronFillWater",t[t.CauldronTakeWater=3507]="CauldronTakeWater",t[t.CauldronAddDye=3508]="CauldronAddDye",t[t.CauldronCleanBanner=3509]="CauldronCleanBanner",t[t.CauldronFlush=3510]="CauldronFlush",t[t.AgentSpawnEffect=3511]="AgentSpawnEffect",t[t.CauldronFillLava=3512]="CauldronFillLava",t[t.CauldronTakeLava=3513]="CauldronTakeLava",t[t.CauldronFillPowderSnow=3514]="CauldronFillPowderSnow",t[t.CauldronTakePowderSnow=3515]="CauldronTakePowderSnow",t[t.StartBlockCracking=3600]="StartBlockCracking",t[t.StopBlockCracking=3601]="StopBlockCracking",t[t.UpdateBlockCracking=3602]="UpdateBlockCracking",t[t.ParticlesCrackBlockDown=3603]="ParticlesCrackBlockDown",t[t.ParticlesCrackBlockUp=3604]="ParticlesCrackBlockUp",t[t.ParticlesCrackBlockNorth=3605]="ParticlesCrackBlockNorth",t[t.ParticlesCrackBlockSouth=3606]="ParticlesCrackBlockSouth",t[t.ParticlesCrackBlockWest=3607]="ParticlesCrackBlockWest",t[t.ParticlesCrackBlockEast=3608]="ParticlesCrackBlockEast",t[t.ParticlesShootWhiteSmoke=3609]="ParticlesShootWhiteSmoke",t[t.ParticlesBreezeWindExplosion=3610]="ParticlesBreezeWindExplosion",t[t.ParticlesTrialSpawnerDetection=3611]="ParticlesTrialSpawnerDetection",t[t.ParticlesTrialSpawnerSpawning=3612]="ParticlesTrialSpawnerSpawning",t[t.ParticlesTrialSpawnerEjecting=3613]="ParticlesTrialSpawnerEjecting",t[t.ParticlesWindExplosion=3614]="ParticlesWindExplosion",t[t.AllPlayersSleeping=3615]="AllPlayersSleeping",t[t.deprecated=3616]="deprecated",t[t.SleepingPlayers=9801]="SleepingPlayers",t[t.JumpPrevented=9810]="JumpPrevented",t[t.AnimationVaultActivate=9811]="AnimationVaultActivate",t[t.AnimationVaultDeactivate=9812]="AnimationVaultDeactivate",t[t.AnimationVaultEjectItem=9813]="AnimationVaultEjectItem",t[t.ParticleLegacyEvent=16384]="ParticleLegacyEvent",t}(eh||{});var rh=function(t){return t[t.ItemUseOn=0]="ItemUseOn",t[t.Hit=1]="Hit",t[t.Step=2]="Step",t[t.Fly=3]="Fly",t[t.Jump=4]="Jump",t[t.Break=5]="Break",t[t.Place=6]="Place",t[t.HeavyStep=7]="HeavyStep",t[t.Gallop=8]="Gallop",t[t.Fall=9]="Fall",t[t.Ambient=10]="Ambient",t[t.AmbientBaby=11]="AmbientBaby",t[t.AmbientInWater=12]="AmbientInWater",t[t.Breathe=13]="Breathe",t[t.Death=14]="Death",t[t.DeathInWater=15]="DeathInWater",t[t.DeathToZombie=16]="DeathToZombie",t[t.Hurt=17]="Hurt",t[t.HurtInWater=18]="HurtInWater",t[t.Mad=19]="Mad",t[t.Boost=20]="Boost",t[t.Bow=21]="Bow",t[t.SquishBig=22]="SquishBig",t[t.SquishSmall=23]="SquishSmall",t[t.FallBig=24]="FallBig",t[t.FallSmall=25]="FallSmall",t[t.Splash=26]="Splash",t[t.Fizz=27]="Fizz",t[t.Flap=28]="Flap",t[t.Swim=29]="Swim",t[t.Drink=30]="Drink",t[t.Eat=31]="Eat",t[t.Takeoff=32]="Takeoff",t[t.Shake=33]="Shake",t[t.Plop=34]="Plop",t[t.Land=35]="Land",t[t.Saddle=36]="Saddle",t[t.Armor=37]="Armor",t[t.ArmorPlace=38]="ArmorPlace",t[t.AddChest=39]="AddChest",t[t.Throw=40]="Throw",t[t.Attack=41]="Attack",t[t.AttackNoDamage=42]="AttackNoDamage",t[t.AttackStrong=43]="AttackStrong",t[t.Warn=44]="Warn",t[t.Shear=45]="Shear",t[t.Milk=46]="Milk",t[t.Thunder=47]="Thunder",t[t.Explode=48]="Explode",t[t.Fire=49]="Fire",t[t.Ignite=50]="Ignite",t[t.Fuse=51]="Fuse",t[t.Stare=52]="Stare",t[t.Spawn=53]="Spawn",t[t.Shoot=54]="Shoot",t[t.BreakBlock=55]="BreakBlock",t[t.Launch=56]="Launch",t[t.Blast=57]="Blast",t[t.LargeBlast=58]="LargeBlast",t[t.Twinkle=59]="Twinkle",t[t.Remedy=60]="Remedy",t[t.Unfect=61]="Unfect",t[t.LevelUp=62]="LevelUp",t[t.BowHit=63]="BowHit",t[t.BulletHit=64]="BulletHit",t[t.ExtinguishFire=65]="ExtinguishFire",t[t.ItemFizz=66]="ItemFizz",t[t.ChestOpen=67]="ChestOpen",t[t.ChestClosed=68]="ChestClosed",t[t.ShulkerBoxOpen=69]="ShulkerBoxOpen",t[t.ShulkerBoxClosed=70]="ShulkerBoxClosed",t[t.EnderChestOpen=71]="EnderChestOpen",t[t.EnderChestClosed=72]="EnderChestClosed",t[t.PowerOn=73]="PowerOn",t[t.PowerOff=74]="PowerOff",t[t.Attach=75]="Attach",t[t.Detach=76]="Detach",t[t.Deny=77]="Deny",t[t.Tripod=78]="Tripod",t[t.Pop=79]="Pop",t[t.DropSlot=80]="DropSlot",t[t.Note=81]="Note",t[t.Thorns=82]="Thorns",t[t.PistonIn=83]="PistonIn",t[t.PistonOut=84]="PistonOut",t[t.Portal=85]="Portal",t[t.Water=86]="Water",t[t.LavaPop=87]="LavaPop",t[t.Lava=88]="Lava",t[t.Burp=89]="Burp",t[t.BucketFillWater=90]="BucketFillWater",t[t.BucketFillLava=91]="BucketFillLava",t[t.BucketEmptyWater=92]="BucketEmptyWater",t[t.BucketEmptyLava=93]="BucketEmptyLava",t[t.EquipChain=94]="EquipChain",t[t.EquipDiamond=95]="EquipDiamond",t[t.EquipGeneric=96]="EquipGeneric",t[t.EquipGold=97]="EquipGold",t[t.EquipIron=98]="EquipIron",t[t.EquipLeather=99]="EquipLeather",t[t.EquipElytra=100]="EquipElytra",t[t.Record13=101]="Record13",t[t.RecordCat=102]="RecordCat",t[t.RecordBlocks=103]="RecordBlocks",t[t.RecordChirp=104]="RecordChirp",t[t.RecordFar=105]="RecordFar",t[t.RecordMall=106]="RecordMall",t[t.RecordMellohi=107]="RecordMellohi",t[t.RecordStal=108]="RecordStal",t[t.RecordStrad=109]="RecordStrad",t[t.RecordWard=110]="RecordWard",t[t.Record11=111]="Record11",t[t.RecordWait=112]="RecordWait",t[t.RecordNull=113]="RecordNull",t[t.Flop=114]="Flop",t[t.GuardianCurse=115]="GuardianCurse",t[t.MobWarning=116]="MobWarning",t[t.MobWarningBaby=117]="MobWarningBaby",t[t.Teleport=118]="Teleport",t[t.ShulkerOpen=119]="ShulkerOpen",t[t.ShulkerClose=120]="ShulkerClose",t[t.Haggle=121]="Haggle",t[t.HaggleYes=122]="HaggleYes",t[t.HaggleNo=123]="HaggleNo",t[t.HaggleIdle=124]="HaggleIdle",t[t.ChorusGrow=125]="ChorusGrow",t[t.ChorusDeath=126]="ChorusDeath",t[t.Glass=127]="Glass",t[t.PotionBrewed=128]="PotionBrewed",t[t.CastSpell=129]="CastSpell",t[t.PrepareAttackSpell=130]="PrepareAttackSpell",t[t.PrepareSummon=131]="PrepareSummon",t[t.PrepareWololo=132]="PrepareWololo",t[t.Fang=133]="Fang",t[t.Charge=134]="Charge",t[t.TakePicture=135]="TakePicture",t[t.PlaceLeashKnot=136]="PlaceLeashKnot",t[t.BreakLeashKnot=137]="BreakLeashKnot",t[t.AmbientGrowl=138]="AmbientGrowl",t[t.AmbientWhine=139]="AmbientWhine",t[t.AmbientPant=140]="AmbientPant",t[t.AmbientPurr=141]="AmbientPurr",t[t.AmbientPurreow=142]="AmbientPurreow",t[t.DeathMinVolume=143]="DeathMinVolume",t[t.DeathMidVolume=144]="DeathMidVolume",t[t.ImitateBlaze=145]="ImitateBlaze",t[t.ImitateCaveSpider=146]="ImitateCaveSpider",t[t.ImitateCreeper=147]="ImitateCreeper",t[t.ImitateElderGuardian=148]="ImitateElderGuardian",t[t.ImitateEnderDragon=149]="ImitateEnderDragon",t[t.ImitateEnderman=150]="ImitateEnderman",t[t.ImitateEndermite=151]="ImitateEndermite",t[t.ImitateEvocationIllager=152]="ImitateEvocationIllager",t[t.ImitateGhast=153]="ImitateGhast",t[t.ImitateHusk=154]="ImitateHusk",t[t.ImitateIllusionIllager=155]="ImitateIllusionIllager",t[t.ImitateMagmaCube=156]="ImitateMagmaCube",t[t.ImitatePolarBear=157]="ImitatePolarBear",t[t.ImitateShulker=158]="ImitateShulker",t[t.ImitateSilverfish=159]="ImitateSilverfish",t[t.ImitateSkeleton=160]="ImitateSkeleton",t[t.ImitateSlime=161]="ImitateSlime",t[t.ImitateSpider=162]="ImitateSpider",t[t.ImitateStray=163]="ImitateStray",t[t.ImitateVex=164]="ImitateVex",t[t.ImitateVindicationIllager=165]="ImitateVindicationIllager",t[t.ImitateWitch=166]="ImitateWitch",t[t.ImitateWither=167]="ImitateWither",t[t.ImitateWitherSkeleton=168]="ImitateWitherSkeleton",t[t.ImitateWolf=169]="ImitateWolf",t[t.ImitateZombie=170]="ImitateZombie",t[t.ImitateZombiePigman=171]="ImitateZombiePigman",t[t.ImitateZombieVillager=172]="ImitateZombieVillager",t[t.EnderEyePlaced=173]="EnderEyePlaced",t[t.EndPortalCreated=174]="EndPortalCreated",t[t.AnvilUse=175]="AnvilUse",t[t.BottleDragonBreath=176]="BottleDragonBreath",t[t.PortalTravel=177]="PortalTravel",t[t.TridentHit=178]="TridentHit",t[t.TridentReturn=179]="TridentReturn",t[t.TridentRiptide_1=180]="TridentRiptide_1",t[t.TridentRiptide_2=181]="TridentRiptide_2",t[t.TridentRiptide_3=182]="TridentRiptide_3",t[t.TridentThrow=183]="TridentThrow",t[t.TridentThunder=184]="TridentThunder",t[t.TridentHitGround=185]="TridentHitGround",t[t.Default=186]="Default",t[t.FletchingTableUse=187]="FletchingTableUse",t[t.ElementConstructOpen=188]="ElementConstructOpen",t[t.IceBombHit=189]="IceBombHit",t[t.BalloonPop=190]="BalloonPop",t[t.LTReactionIceBomb=191]="LTReactionIceBomb",t[t.LTReactionBleach=192]="LTReactionBleach",t[t.LTReactionElephantToothpaste=193]="LTReactionElephantToothpaste",t[t.LTReactionElephantToothpaste2=194]="LTReactionElephantToothpaste2",t[t.LTReactionGlowStick=195]="LTReactionGlowStick",t[t.LTReactionGlowStick2=196]="LTReactionGlowStick2",t[t.LTReactionLuminol=197]="LTReactionLuminol",t[t.LTReactionSalt=198]="LTReactionSalt",t[t.LTReactionFertilizer=199]="LTReactionFertilizer",t[t.LTReactionFireball=200]="LTReactionFireball",t[t.LTReactionMagnesiumSalt=201]="LTReactionMagnesiumSalt",t[t.LTReactionMiscFire=202]="LTReactionMiscFire",t[t.LTReactionFire=203]="LTReactionFire",t[t.LTReactionMiscExplosion=204]="LTReactionMiscExplosion",t[t.LTReactionMiscMystical=205]="LTReactionMiscMystical",t[t.LTReactionMiscMystical2=206]="LTReactionMiscMystical2",t[t.LTReactionProduct=207]="LTReactionProduct",t[t.SparklerUse=208]="SparklerUse",t[t.GlowStickUse=209]="GlowStickUse",t[t.SparklerActive=210]="SparklerActive",t[t.ConvertToDrowned=211]="ConvertToDrowned",t[t.BucketFillFish=212]="BucketFillFish",t[t.BucketEmptyFish=213]="BucketEmptyFish",t[t.BubbleColumnUpwards=214]="BubbleColumnUpwards",t[t.BubbleColumnDownwards=215]="BubbleColumnDownwards",t[t.BubblePop=216]="BubblePop",t[t.BubbleUpInside=217]="BubbleUpInside",t[t.BubbleDownInside=218]="BubbleDownInside",t[t.HurtBaby=219]="HurtBaby",t[t.DeathBaby=220]="DeathBaby",t[t.StepBaby=221]="StepBaby",t[t.SpawnBaby=222]="SpawnBaby",t[t.Born=223]="Born",t[t.TurtleEggBreak=224]="TurtleEggBreak",t[t.TurtleEggCrack=225]="TurtleEggCrack",t[t.TurtleEggHatched=226]="TurtleEggHatched",t[t.LayEgg=227]="LayEgg",t[t.TurtleEggAttacked=228]="TurtleEggAttacked",t[t.BeaconActivate=229]="BeaconActivate",t[t.BeaconAmbient=230]="BeaconAmbient",t[t.BeaconDeactivate=231]="BeaconDeactivate",t[t.BeaconPower=232]="BeaconPower",t[t.ConduitActivate=233]="ConduitActivate",t[t.ConduitAmbient=234]="ConduitAmbient",t[t.ConduitAttack=235]="ConduitAttack",t[t.ConduitDeactivate=236]="ConduitDeactivate",t[t.ConduitShort=237]="ConduitShort",t[t.Swoop=238]="Swoop",t[t.BambooSaplingPlace=239]="BambooSaplingPlace",t[t.PreSneeze=240]="PreSneeze",t[t.Sneeze=241]="Sneeze",t[t.AmbientTame=242]="AmbientTame",t[t.Scared=243]="Scared",t[t.ScaffoldingClimb=244]="ScaffoldingClimb",t[t.CrossbowLoadingStart=245]="CrossbowLoadingStart",t[t.CrossbowLoadingMiddle=246]="CrossbowLoadingMiddle",t[t.CrossbowLoadingEnd=247]="CrossbowLoadingEnd",t[t.CrossbowShoot=248]="CrossbowShoot",t[t.CrossbowQuickChargeStart=249]="CrossbowQuickChargeStart",t[t.CrossbowQuickChargeMiddle=250]="CrossbowQuickChargeMiddle",t[t.CrossbowQuickChargeEnd=251]="CrossbowQuickChargeEnd",t[t.AmbientAggressive=252]="AmbientAggressive",t[t.AmbientWorried=253]="AmbientWorried",t[t.CantBreed=254]="CantBreed",t[t.ShieldBlock=255]="ShieldBlock",t[t.LecternBookPlace=256]="LecternBookPlace",t[t.GrindstoneUse=257]="GrindstoneUse",t[t.Bell=258]="Bell",t[t.CampfireCrackle=259]="CampfireCrackle",t[t.Roar=260]="Roar",t[t.Stun=261]="Stun",t[t.SweetBerryBushHurt=262]="SweetBerryBushHurt",t[t.SweetBerryBushPick=263]="SweetBerryBushPick",t[t.CartographyTableUse=264]="CartographyTableUse",t[t.StonecutterUse=265]="StonecutterUse",t[t.ComposterEmpty=266]="ComposterEmpty",t[t.ComposterFill=267]="ComposterFill",t[t.ComposterFillLayer=268]="ComposterFillLayer",t[t.ComposterReady=269]="ComposterReady",t[t.BarrelOpen=270]="BarrelOpen",t[t.BarrelClose=271]="BarrelClose",t[t.RaidHorn=272]="RaidHorn",t[t.LoomUse=273]="LoomUse",t[t.AmbientInRaid=274]="AmbientInRaid",t[t.UICartographyTableUse=275]="UICartographyTableUse",t[t.UIStonecutterUse=276]="UIStonecutterUse",t[t.UILoomUse=277]="UILoomUse",t[t.SmokerUse=278]="SmokerUse",t[t.BlastFurnaceUse=279]="BlastFurnaceUse",t[t.SmithingTableUse=280]="SmithingTableUse",t[t.Screech=281]="Screech",t[t.Sleep=282]="Sleep",t[t.FurnaceUse=283]="FurnaceUse",t[t.MooshroomConvert=284]="MooshroomConvert",t[t.MilkSuspiciously=285]="MilkSuspiciously",t[t.Celebrate=286]="Celebrate",t[t.JumpPrevent=287]="JumpPrevent",t[t.AmbientPollinate=288]="AmbientPollinate",t[t.BeehiveDrip=289]="BeehiveDrip",t[t.BeehiveEnter=290]="BeehiveEnter",t[t.BeehiveExit=291]="BeehiveExit",t[t.BeehiveWork=292]="BeehiveWork",t[t.BeehiveShear=293]="BeehiveShear",t[t.HoneybottleDrink=294]="HoneybottleDrink",t[t.AmbientCave=295]="AmbientCave",t[t.Retreat=296]="Retreat",t[t.ConvertToZombified=297]="ConvertToZombified",t[t.Admire=298]="Admire",t[t.StepLava=299]="StepLava",t[t.Tempt=300]="Tempt",t[t.Panic=301]="Panic",t[t.Angry=302]="Angry",t[t.AmbientMoodWarpedForest=303]="AmbientMoodWarpedForest",t[t.AmbientMoodSoulsandValley=304]="AmbientMoodSoulsandValley",t[t.AmbientMoodNetherWastes=305]="AmbientMoodNetherWastes",t[t.AmbientMoodBasaltDeltas=306]="AmbientMoodBasaltDeltas",t[t.AmbientMoodCrimsonForest=307]="AmbientMoodCrimsonForest",t[t.RespawnAnchorCharge=308]="RespawnAnchorCharge",t[t.RespawnAnchorDeplete=309]="RespawnAnchorDeplete",t[t.RespawnAnchorSetSpawn=310]="RespawnAnchorSetSpawn",t[t.RespawnAnchorAmbient=311]="RespawnAnchorAmbient",t[t.SoulEscapeQuiet=312]="SoulEscapeQuiet",t[t.SoulEscapeLoud=313]="SoulEscapeLoud",t[t.RecordPigstep=314]="RecordPigstep",t[t.LinkCompassToLodestone=315]="LinkCompassToLodestone",t[t.UseSmithingTable=316]="UseSmithingTable",t[t.EquipNetherite=317]="EquipNetherite",t[t.AmbientLoopWarpedForest=318]="AmbientLoopWarpedForest",t[t.AmbientLoopSoulsandValley=319]="AmbientLoopSoulsandValley",t[t.AmbientLoopNetherWastes=320]="AmbientLoopNetherWastes",t[t.AmbientLoopBasaltDeltas=321]="AmbientLoopBasaltDeltas",t[t.AmbientLoopCrimsonForest=322]="AmbientLoopCrimsonForest",t[t.AmbientAdditionWarpedForest=323]="AmbientAdditionWarpedForest",t[t.AmbientAdditionSoulsandValley=324]="AmbientAdditionSoulsandValley",t[t.AmbientAdditionNetherWastes=325]="AmbientAdditionNetherWastes",t[t.AmbientAdditionBasaltDeltas=326]="AmbientAdditionBasaltDeltas",t[t.AmbientAdditionCrimsonForest=327]="AmbientAdditionCrimsonForest",t[t.SculkSensorPowerOn=328]="SculkSensorPowerOn",t[t.SculkSensorPowerOff=329]="SculkSensorPowerOff",t[t.BucketFillPowderSnow=330]="BucketFillPowderSnow",t[t.BucketEmptyPowderSnow=331]="BucketEmptyPowderSnow",t[t.PointedDripstoneCauldronDripWater=332]="PointedDripstoneCauldronDripWater",t[t.PointedDripstoneCauldronDripLava=333]="PointedDripstoneCauldronDripLava",t[t.PointedDripstoneDripWater=334]="PointedDripstoneDripWater",t[t.PointedDripstoneDripLava=335]="PointedDripstoneDripLava",t[t.CaveVinesPickBerries=336]="CaveVinesPickBerries",t[t.BigDripleafTiltDown=337]="BigDripleafTiltDown",t[t.BigDripleafTiltUp=338]="BigDripleafTiltUp",t[t.CopperWaxOn=339]="CopperWaxOn",t[t.CopperWaxOff=340]="CopperWaxOff",t[t.Scrape=341]="Scrape",t[t.PlayerHurtDrown=342]="PlayerHurtDrown",t[t.PlayerHurtOnFire=343]="PlayerHurtOnFire",t[t.PlayerHurtFreeze=344]="PlayerHurtFreeze",t[t.UseSpyglass=345]="UseSpyglass",t[t.StopUsingSpyglass=346]="StopUsingSpyglass",t[t.AmethystBlockChime=347]="AmethystBlockChime",t[t.AmbientScreamer=348]="AmbientScreamer",t[t.HurtScreamer=349]="HurtScreamer",t[t.DeathScreamer=350]="DeathScreamer",t[t.MilkScreamer=351]="MilkScreamer",t[t.JumpToBlock=352]="JumpToBlock",t[t.PreRam=353]="PreRam",t[t.PreRamScreamer=354]="PreRamScreamer",t[t.RamImpact=355]="RamImpact",t[t.RamImpactScreamer=356]="RamImpactScreamer",t[t.SquidInkSquirt=357]="SquidInkSquirt",t[t.GlowSquidInkSquirt=358]="GlowSquidInkSquirt",t[t.ConvertToStray=359]="ConvertToStray",t[t.CakeAddCandle=360]="CakeAddCandle",t[t.ExtinguishCandle=361]="ExtinguishCandle",t[t.AmbientCandle=362]="AmbientCandle",t[t.BlockClick=363]="BlockClick",t[t.BlockClickFail=364]="BlockClickFail",t[t.SculkCatalystBloom=365]="SculkCatalystBloom",t[t.SculkShriekerShriek=366]="SculkShriekerShriek",t[t.NearbyClose=367]="NearbyClose",t[t.NearbyCloser=368]="NearbyCloser",t[t.NearbyClosest=369]="NearbyClosest",t[t.Agitated=370]="Agitated",t[t.RecordOtherside=371]="RecordOtherside",t[t.Tongue=372]="Tongue",t[t.CrackIronGolem=373]="CrackIronGolem",t[t.RepairIronGolem=374]="RepairIronGolem",t[t.Listening=375]="Listening",t[t.Heartbeat=376]="Heartbeat",t[t.HornBreak=377]="HornBreak",t[t.SculkSpread=379]="SculkSpread",t[t.SculkCharge=380]="SculkCharge",t[t.SculkSensorPlace=381]="SculkSensorPlace",t[t.SculkShriekerPlace=382]="SculkShriekerPlace",t[t.GoatCall0=383]="GoatCall0",t[t.GoatCall1=384]="GoatCall1",t[t.GoatCall2=385]="GoatCall2",t[t.GoatCall3=386]="GoatCall3",t[t.GoatCall4=387]="GoatCall4",t[t.GoatCall5=388]="GoatCall5",t[t.GoatCall6=389]="GoatCall6",t[t.GoatCall7=390]="GoatCall7",t[t.ImitateWarden=426]="ImitateWarden",t[t.ListeningAngry=427]="ListeningAngry",t[t.Item_Given=428]="Item_Given",t[t.Item_Taken=429]="Item_Taken",t[t.Disappeared=430]="Disappeared",t[t.Reappeared=431]="Reappeared",t[t.DrinkMilk=432]="DrinkMilk",t[t.FrogspawnHatched=433]="FrogspawnHatched",t[t.LaySpawn=434]="LaySpawn",t[t.FrogspawnBreak=435]="FrogspawnBreak",t[t.SonicBoom=436]="SonicBoom",t[t.SonicCharge=437]="SonicCharge",t[t.Item_Thrown=438]="Item_Thrown",t[t.Record5=439]="Record5",t[t.ConvertToFrog=440]="ConvertToFrog",t[t.RecordPlaying=441]="RecordPlaying",t[t.EnchantingTableUse=442]="EnchantingTableUse",t[t.StepSand=443]="StepSand",t[t.DashReady=444]="DashReady",t[t.BundleDropContents=445]="BundleDropContents",t[t.BundleInsert=446]="BundleInsert",t[t.BundleRemoveOne=447]="BundleRemoveOne",t[t.PressurePlateClickOff=448]="PressurePlateClickOff",t[t.PressurePlateClickOn=449]="PressurePlateClickOn",t[t.ButtonClickOff=450]="ButtonClickOff",t[t.ButtonClickOn=451]="ButtonClickOn",t[t.DoorOpen=452]="DoorOpen",t[t.DoorClose=453]="DoorClose",t[t.TrapdoorOpen=454]="TrapdoorOpen",t[t.TrapdoorClose=455]="TrapdoorClose",t[t.FenceGateOpen=456]="FenceGateOpen",t[t.FenceGateClose=457]="FenceGateClose",t[t.Insert=458]="Insert",t[t.Pickup=459]="Pickup",t[t.InsertEnchanted=460]="InsertEnchanted",t[t.PickupEnchanted=461]="PickupEnchanted",t[t.Brush=462]="Brush",t[t.BrushCompleted=463]="BrushCompleted",t[t.ShatterDecoratedPot=464]="ShatterDecoratedPot",t[t.BreakDecoratedPot=465]="BreakDecoratedPot",t[t.SnifferEggCrack=466]="SnifferEggCrack",t[t.SnifferEggHatched=467]="SnifferEggHatched",t[t.WaxedSignInteractFail=468]="WaxedSignInteractFail",t[t.RecordRelic=469]="RecordRelic",t[t.Bump=470]="Bump",t[t.PumpkinCarve=471]="PumpkinCarve",t[t.ConvertHuskToZombie=472]="ConvertHuskToZombie",t[t.PigDeath=473]="PigDeath",t[t.HoglinConvertToZombified=474]="HoglinConvertToZombified",t[t.AmbientUnderwaterEnter=475]="AmbientUnderwaterEnter",t[t.AmbientUnderwaterExit=476]="AmbientUnderwaterExit",t[t.BottleFill=477]="BottleFill",t[t.BottleEmpty=478]="BottleEmpty",t[t.CrafterCraft=479]="CrafterCraft",t[t.CrafterFail=480]="CrafterFail",t[t.DecoratedPotInsert=481]="DecoratedPotInsert",t[t.DecoratedPotInsertFail=482]="DecoratedPotInsertFail",t[t.CrafterDisableSlot=483]="CrafterDisableSlot",t[t.CopperBulbTurnOn=490]="CopperBulbTurnOn",t[t.CopperBulbTurnOff=491]="CopperBulbTurnOff",t[t.Undefined=492]="Undefined",t}(rh||{});var ih=function(t){return t[t.Addon=1]="Addon",t[t.Cached=2]="Cached",t[t.CopyProtected=3]="CopyProtected",t[t.Behaviour=4]="Behaviour",t[t.PersonaPiece=5]="PersonaPiece",t[t.Resources=6]="Resources",t[t.Skins=7]="Skins",t[t.WorldTemplate=8]="WorldTemplate",t}(ih||{});var We=function(t){return t[t.ContainerInventory=0]="ContainerInventory",t[t.GlobalInventory=1]="GlobalInventory",t[t.WorldInteraction=2]="WorldInteraction",t[t.CreativeInventory=3]="CreativeInventory",t[t.NonImplementedFeatureTODO=99999]="NonImplementedFeatureTODO",t}(We||{});var oh=function(t){return t[t.Place=0]="Place",t[t.Use=1]="Use",t[t.Destroy=2]="Destroy",t}(oh||{});var nh=function(t){return t[t.Interact=0]="Interact",t[t.Attack=1]="Attack",t}(nh||{});var ah=function(t){return t[t.Release=0]="Release",t[t.Consume=1]="Consume",t}(ah||{});var sh=function(t){return t[t.Bottom=0]="Bottom",t[t.Top=1]="Top",t[t.North=2]="North",t[t.South=3]="South",t[t.West=4]="West",t[t.East=5]="East",t}(sh||{});var ch=function(t){return t[t.Ascending=0]="Ascending",t[t.Descending=1]="Descending",t}(ch||{});var ph=function(t){return t.List="slot",t.Sidebar="sidebar",t.BelowName="belowname",t}(ph||{});var fh=function(t){return t[t.Register=0]="Register",t[t.Clear=1]="Clear",t}(fh||{});var dh=function(t){return t[t.PaperDoll=0]="PaperDoll",t[t.Armor=1]="Armor",t[t.ToolTips=2]="ToolTips",t[t.TouchControls=3]="TouchControls",t[t.Crosshair=4]="Crosshair",t[t.HotBar=5]="HotBar",t[t.Health=6]="Health",t[t.ProgressBar=7]="ProgressBar",t[t.Hunger=8]="Hunger",t[t.AirBubbles=9]="AirBubbles",t[t.HorseHealth=10]="HorseHealth",t[t.StatusEffects=11]="StatusEffects",t[t.ItemText=12]="ItemText",t[t.Count=13]="Count",t}(dh||{});var lh=function(t){return t[t.Hide=0]="Hide",t[t.Reset=1]="Reset",t[t.Count=2]="Count",t}(lh||{});var mh=function(t){return t[t.Protection=0]="Protection",t[t.FireProtection=1]="FireProtection",t[t.FeatherFalling=2]="FeatherFalling",t[t.BlastProtection=3]="BlastProtection",t[t.ProjectileProtection=4]="ProjectileProtection",t[t.Thorns=5]="Thorns",t[t.Respiration=6]="Respiration",t[t.DepthStrider=7]="DepthStrider",t[t.AquaAffinity=8]="AquaAffinity",t[t.Sharpness=9]="Sharpness",t[t.Smite=10]="Smite",t[t.BaneOfArthropods=11]="BaneOfArthropods",t[t.Knockback=12]="Knockback",t[t.FireAspect=13]="FireAspect",t[t.Looting=14]="Looting",t[t.Efficiency=15]="Efficiency",t[t.SilkTouch=16]="SilkTouch",t[t.Unbreaking=17]="Unbreaking",t[t.Fortune=18]="Fortune",t[t.Power=19]="Power",t[t.Punch=20]="Punch",t[t.Flame=21]="Flame",t[t.Infinity=22]="Infinity",t[t.LuckOfTheSea=23]="LuckOfTheSea",t[t.Lure=24]="Lure",t[t.FrostWalker=25]="FrostWalker",t[t.Mending=26]="Mending",t[t.CurseOfBinding=27]="CurseOfBinding",t[t.CurseOfVanishing=28]="CurseOfVanishing",t[t.Impaling=29]="Impaling",t[t.Riptide=30]="Riptide",t[t.Loyalty=31]="Loyalty",t[t.Channeling=32]="Channeling",t[t.Multishot=33]="Multishot",t[t.Piercing=34]="Piercing",t[t.QuickCharge=35]="QuickCharge",t[t.SoulSpeed=36]="SoulSpeed",t[t.SweepingEdge=37]="SweepingEdge",t[t.None=38]="None",t[t.Unknown=39]="Unknown",t}(mh||{});var U=function(t){return t[t.Add=0]="Add",t[t.PlayerAdded=1]="PlayerAdded",t[t.Remove=2]="Remove",t[t.PlayerRemoved=3]="PlayerRemoved",t[t.UpdatePercent=4]="UpdatePercent",t[t.UpdateName=5]="UpdateName",t[t.UpdateProperties=6]="UpdateProperties",t[t.UpdateStyle=7]="UpdateStyle",t[t.Query=8]="Query",t}(U||{});var uh=function(t){return t[t.Pink=0]="Pink",t[t.Blue=1]="Blue",t[t.Red=2]="Red",t[t.Green=3]="Green",t[t.Yellow=4]="Yellow",t[t.Magenta=5]="Magenta",t[t.Purple=6]="Purple",t[t.White=7]="White",t}(uh||{});var hh=function(t){return t[t.Open=0]="Open",t[t.Close=1]="Close",t}(hh||{});var gh=function(t){return t[t.JUMP=1]="JUMP",t[t.HURT_ANIMATION=2]="HURT_ANIMATION",t[t.DEATH_ANIMATION=3]="DEATH_ANIMATION",t[t.ARM_SWING=4]="ARM_SWING",t[t.STOP_ATTACK=5]="STOP_ATTACK",t[t.TAME_FAIL=6]="TAME_FAIL",t[t.TAME_SUCCESS=7]="TAME_SUCCESS",t[t.SHAKE_WET=8]="SHAKE_WET",t[t.USE_ITEM=9]="USE_ITEM",t[t.EAT_GRASS_ANIMATION=10]="EAT_GRASS_ANIMATION",t[t.FISH_HOOK_BUBBLE=11]="FISH_HOOK_BUBBLE",t[t.FISH_HOOK_POSITION=12]="FISH_HOOK_POSITION",t[t.FISH_HOOK_HOOK=13]="FISH_HOOK_HOOK",t[t.FISH_HOOK_TEASE=14]="FISH_HOOK_TEASE",t[t.SQUID_INK_CLOUD=15]="SQUID_INK_CLOUD",t[t.ZOMBIE_VILLAGER_CURE=16]="ZOMBIE_VILLAGER_CURE",t[t.PLAY_AMBIENT_SOUND=17]="PLAY_AMBIENT_SOUND",t[t.RESPAWN=18]="RESPAWN",t[t.IRON_GOLEM_OFFER_FLOWER=19]="IRON_GOLEM_OFFER_FLOWER",t[t.IRON_GOLEM_WITHDRAW_FLOWER=20]="IRON_GOLEM_WITHDRAW_FLOWER",t[t.LOVE_PARTICLES=21]="LOVE_PARTICLES",t[t.VILLAGER_ANGRY=22]="VILLAGER_ANGRY",t[t.VILLAGER_HAPPY=23]="VILLAGER_HAPPY",t[t.WITCH_SPELL_PARTICLES=24]="WITCH_SPELL_PARTICLES",t[t.FIREWORK_PARTICLES=25]="FIREWORK_PARTICLES",t[t.IN_LOVE_PARTICLES=26]="IN_LOVE_PARTICLES",t[t.SILVERFISH_SPAWN_ANIMATION=27]="SILVERFISH_SPAWN_ANIMATION",t[t.GUARDIAN_ATTACK=28]="GUARDIAN_ATTACK",t[t.WITCH_DRINK_POTION=29]="WITCH_DRINK_POTION",t[t.WITCH_THROW_POTION=30]="WITCH_THROW_POTION",t[t.MINECART_TNT_PRIME_FUSE=31]="MINECART_TNT_PRIME_FUSE",t[t.CREEPER_PRIME_FUSE=32]="CREEPER_PRIME_FUSE",t[t.AIR_SUPPLY_EXPIRED=33]="AIR_SUPPLY_EXPIRED",t[t.PLAYER_ADD_XP_LEVELS=34]="PLAYER_ADD_XP_LEVELS",t[t.ELDER_GUARDIAN_CURSE=35]="ELDER_GUARDIAN_CURSE",t[t.AGENT_ARM_SWING=36]="AGENT_ARM_SWING",t[t.ENDER_DRAGON_DEATH=37]="ENDER_DRAGON_DEATH",t[t.DUST_PARTICLES=38]="DUST_PARTICLES",t[t.ARROW_SHAKE=39]="ARROW_SHAKE",t[t.EATING_ITEM=57]="EATING_ITEM",t[t.BABY_ANIMAL_FEED=60]="BABY_ANIMAL_FEED",t[t.DEATH_SMOKE_CLOUD=61]="DEATH_SMOKE_CLOUD",t[t.COMPLETE_TRADE=62]="COMPLETE_TRADE",t[t.REMOVE_LEASH=63]="REMOVE_LEASH",t[t.CARAVAN_UPDATED=64]="CARAVAN_UPDATED",t[t.CONSUME_TOTEM=65]="CONSUME_TOTEM",t[t.PLAYER_CHECK_TREASURE_HUNTER_ACHIEVEMENT=66]="PLAYER_CHECK_TREASURE_HUNTER_ACHIEVEMENT",t[t.ENTITY_SPAWN=67]="ENTITY_SPAWN",t[t.DRAGON_PUKE=68]="DRAGON_PUKE",t[t.ITEM_ENTITY_MERGE=69]="ITEM_ENTITY_MERGE",t[t.START_SWIM=70]="START_SWIM",t[t.BALLOON_POP=71]="BALLOON_POP",t[t.TREASURE_HUNT=72]="TREASURE_HUNT",t[t.AGENT_SUMMON=73]="AGENT_SUMMON",t[t.CHARGED_ITEM=74]="CHARGED_ITEM",t[t.FALL=75]="FALL",t[t.GROW_UP=76]="GROW_UP",t[t.VIBRATION_DETECTED=77]="VIBRATION_DETECTED",t[t.DRINK_MILK=78]="DRINK_MILK",t}(gh||{});var yh=function(t){return t[t.SERVER=0]="SERVER",t[t.MUTE_CHAT=1]="MUTE_CHAT",t}(yh||{});var wh=function(t){return t[t.Head=0]="Head",t[t.Chest=1]="Chest",t[t.Legs=2]="Legs",t[t.Feet=3]="Feet",t}(wh||{});var bh=function(t){return t[t.Speed=1]="Speed",t[t.Slowness=2]="Slowness",t[t.Haste=3]="Haste",t[t.MiningFatigue=4]="MiningFatigue",t[t.Strength=5]="Strength",t[t.InstantHealth=6]="InstantHealth",t[t.InstantDamage=7]="InstantDamage",t[t.JumpBoost=8]="JumpBoost",t[t.Nausea=9]="Nausea",t[t.Regeneration=10]="Regeneration",t[t.Resistance=11]="Resistance",t[t.FireResistance=12]="FireResistance",t[t.WaterBreathing=13]="WaterBreathing",t[t.Invisibility=14]="Invisibility",t[t.Blindness=15]="Blindness",t[t.NightVision=16]="NightVision",t[t.Hunger=17]="Hunger",t[t.Weakness=18]="Weakness",t[t.Poison=19]="Poison",t[t.Wither=20]="Wither",t[t.HealthBoost=21]="HealthBoost",t[t.Absorption=22]="Absorption",t[t.Saturation=23]="Saturation",t[t.Levitation=24]="Levitation",t[t.FatalPoison=25]="FatalPoison",t[t.ConduitPower=26]="ConduitPower",t[t.SlowFalling=27]="SlowFalling",t[t.BadOmen=28]="BadOmen",t[t.HeroOfTheVillage=29]="HeroOfTheVillage",t[t.Darkness=30]="Darkness",t[t.TrialOmen=31]="TrialOmen",t[t.WindCharged=32]="WindCharged",t[t.Weaving=33]="Weaving",t[t.Oozing=34]="Oozing",t[t.Infested=35]="Infested",t}(bh||{});var Ph=function(t){return t[t.EffectAdd=1]="EffectAdd",t[t.EffectModify=2]="EffectModify",t[t.EffectRemove=3]="EffectRemove",t}(Ph||{});var Rh=function(t){return t[t.NONE=0]="NONE",t[t.SURVIVAL=1]="SURVIVAL",t[t.RECIPE_BOOK=2]="RECIPE_BOOK",t[t.CREATIVE=3]="CREATIVE",t}(Rh||{});var xh=function(t){return t[t.NONE=0]="NONE",t[t.CONSTRUCTION=1]="CONSTRUCTION",t[t.EQUIPMENT=2]="EQUIPMENT",t[t.ITEMS=3]="ITEMS",t[t.NATURE=4]="NATURE",t[t.SEARCH=5]="SEARCH",t[t.SURVIVAL=6]="SURVIVAL",t}(xh||{});var Ih=function(t){return t[t.NONE=0]="NONE",t[t.FULL_SCREEN=1]="FULL_SCREEN",t[t.CRAFTING=2]="CRAFTING",t[t.ARMOR=3]="ARMOR",t}(Ih||{});var Rs=function(t){return t[t.Reserved0=0]="Reserved0",t[t.StructuralIntegrity=1]="StructuralIntegrity",t[t.Variant=2]="Variant",t[t.ColorIndex=3]="ColorIndex",t[t.Name=4]="Name",t[t.Owner=5]="Owner",t[t.Target=6]="Target",t[t.AirSupply=7]="AirSupply",t[t.EffectColor=8]="EffectColor",t[t.Reserved009=9]="Reserved009",t[t.Reserved010=10]="Reserved010",t[t.Hurt=11]="Hurt",t[t.HurtDirection=12]="HurtDirection",t[t.RowTimeLeft=13]="RowTimeLeft",t[t.RowTimeRight=14]="RowTimeRight",t[t.Value=15]="Value",t[t.DisplayTileRuntimeId=16]="DisplayTileRuntimeId",t[t.DisplayOffset=17]="DisplayOffset",t[t.CustomDisplay=18]="CustomDisplay",t[t.Swell=19]="Swell",t[t.OldSwell=20]="OldSwell",t[t.SwellDirection=21]="SwellDirection",t[t.ChargeAmount=22]="ChargeAmount",t[t.CarryBlockRuntimeId=23]="CarryBlockRuntimeId",t[t.ClientEvent=24]="ClientEvent",t[t.UsingItem=25]="UsingItem",t[t.PlayerFlags=26]="PlayerFlags",t[t.PlayerIndex=27]="PlayerIndex",t[t.BedPosition=28]="BedPosition",t[t.XPower=29]="XPower",t[t.YPower=30]="YPower",t[t.ZPower=31]="ZPower",t[t.AuxPower=32]="AuxPower",t[t.Fishx=33]="Fishx",t[t.Fishz=34]="Fishz",t[t.Fishangle=35]="Fishangle",t[t.AuxValueData=36]="AuxValueData",t[t.LeashHolder=37]="LeashHolder",t[t.Reserved038=38]="Reserved038",t[t.HasNpc=39]="HasNpc",t[t.NpcData=40]="NpcData",t[t.Actions=41]="Actions",t[t.AirSupplyMax=42]="AirSupplyMax",t[t.MarkVariant=43]="MarkVariant",t[t.ContainerType=44]="ContainerType",t[t.ContainerSize=45]="ContainerSize",t[t.ContainerStrengthModifier=46]="ContainerStrengthModifier",t[t.BlockTarget=47]="BlockTarget",t[t.Inv=48]="Inv",t[t.TargetA=49]="TargetA",t[t.TargetB=50]="TargetB",t[t.TargetC=51]="TargetC",t[t.AerialAttack=52]="AerialAttack",t[t.Reserved053=53]="Reserved053",t[t.Reserved054=54]="Reserved054",t[t.FuseTime=55]="FuseTime",t[t.Reserved056=56]="Reserved056",t[t.SeatLockPassengerRotation=57]="SeatLockPassengerRotation",t[t.SeatLockPassengerRotationDegrees=58]="SeatLockPassengerRotationDegrees",t[t.SeatRotationOffset=59]="SeatRotationOffset",t[t.SeatRotationOffsetDegrees=60]="SeatRotationOffsetDegrees",t[t.DataRadius=61]="DataRadius",t[t.DataWaiting=62]="DataWaiting",t[t.DataParticle=63]="DataParticle",t[t.PeekId=64]="PeekId",t[t.AttachFace=65]="AttachFace",t[t.Attached=66]="Attached",t[t.AttachPos=67]="AttachPos",t[t.TradeTarget=68]="TradeTarget",t[t.Career=69]="Career",t[t.HasCommandBlock=70]="HasCommandBlock",t[t.CommandName=71]="CommandName",t[t.LastCommandOutput=72]="LastCommandOutput",t[t.TrackCommandOutput=73]="TrackCommandOutput",t[t.Reserved074=74]="Reserved074",t[t.Strength=75]="Strength",t[t.StrengthMax=76]="StrengthMax",t[t.DataSpellCastingColor=77]="DataSpellCastingColor",t[t.DataLifetimeTicks=78]="DataLifetimeTicks",t[t.PoseIndex=79]="PoseIndex",t[t.DataTickOffset=80]="DataTickOffset",t[t.NametagAlwaysShow=81]="NametagAlwaysShow",t[t.Color2Index=82]="Color2Index",t[t.NameAuthor=83]="NameAuthor",t[t.Score=84]="Score",t[t.BalloonAnchor=85]="BalloonAnchor",t[t.PuffedState=86]="PuffedState",t[t.BubbleTime=87]="BubbleTime",t[t.Agent=88]="Agent",t[t.SittingAmount=89]="SittingAmount",t[t.SittingAmountPrevious=90]="SittingAmountPrevious",t[t.EatingCounter=91]="EatingCounter",t[t.Reserved092=92]="Reserved092",t[t.LayingAmount=93]="LayingAmount",t[t.LayingAmountPrevious=94]="LayingAmountPrevious",t[t.DataDuration=95]="DataDuration",t[t.DataSpawnTimeDeprecated=96]="DataSpawnTimeDeprecated",t[t.DataChangeRate=97]="DataChangeRate",t[t.DataChangeOnPickup=98]="DataChangeOnPickup",t[t.DataPickupCount=99]="DataPickupCount",t[t.InteractText=100]="InteractText",t[t.TradeTier=101]="TradeTier",t[t.MaxTradeTier=102]="MaxTradeTier",t[t.TradeExperience=103]="TradeExperience",t[t.SkinId=104]="SkinId",t[t.SpawningFrames=105]="SpawningFrames",t[t.CommandBlockTickDelay=106]="CommandBlockTickDelay",t[t.CommandBlockExecuteOnFirstTick=107]="CommandBlockExecuteOnFirstTick",t[t.AmbientSoundInterval=108]="AmbientSoundInterval",t[t.AmbientSoundIntervalRange=109]="AmbientSoundIntervalRange",t[t.AmbientSoundEventName=110]="AmbientSoundEventName",t[t.FallDamageMultiplier=111]="FallDamageMultiplier",t[t.NameRawText=112]="NameRawText",t[t.CanRideTarget=113]="CanRideTarget",t[t.LowTierCuredTradeDiscount=114]="LowTierCuredTradeDiscount",t[t.HighTierCuredTradeDiscount=115]="HighTierCuredTradeDiscount",t[t.NearbyCuredTradeDiscount=116]="NearbyCuredTradeDiscount",t[t.NearbyCuredDiscountTimeStamp=117]="NearbyCuredDiscountTimeStamp",t[t.Hitbox=118]="Hitbox",t[t.IsBuoyant=119]="IsBuoyant",t[t.FreezingEffectStrength=120]="FreezingEffectStrength",t[t.BuoyancyData=121]="BuoyancyData",t[t.GoatHornCount=122]="GoatHornCount",t[t.BaseRuntimeId=123]="BaseRuntimeId",t[t.MovementSoundDistanceOffset=124]="MovementSoundDistanceOffset",t[t.HeartbeatIntervalTicks=125]="HeartbeatIntervalTicks",t[t.HeartbeatSoundEvent=126]="HeartbeatSoundEvent",t[t.PlayerLastDeathPos=127]="PlayerLastDeathPos",t[t.PlayerLastDeathDimension=128]="PlayerLastDeathDimension",t[t.PlayerHasDied=129]="PlayerHasDied",t[t.CollisionBox=130]="CollisionBox",t[t.VisibleMobEffects=131]="VisibleMobEffects",t[t.Count=132]="Count",t}(Rs||{});var kh=function(t){return t[t.Unknown=-1]="Unknown",t[t.OnFire=0]="OnFire",t[t.Sneaking=1]="Sneaking",t[t.Riding=2]="Riding",t[t.Sprinting=3]="Sprinting",t[t.UsingItem=4]="UsingItem",t[t.Invisible=5]="Invisible",t[t.Tempted=6]="Tempted",t[t.InLove=7]="InLove",t[t.Saddled=8]="Saddled",t[t.Powered=9]="Powered",t[t.Ignited=10]="Ignited",t[t.Baby=11]="Baby",t[t.Converting=12]="Converting",t[t.Critical=13]="Critical",t[t.CanShowName=14]="CanShowName",t[t.AlwaysShowName=15]="AlwaysShowName",t[t.NoAi=16]="NoAi",t[t.Silent=17]="Silent",t[t.WallClimbing=18]="WallClimbing",t[t.CanClimb=19]="CanClimb",t[t.CanSwim=20]="CanSwim",t[t.CanFly=21]="CanFly",t[t.CanWalk=22]="CanWalk",t[t.Resting=23]="Resting",t[t.Sitting=24]="Sitting",t[t.Angry=25]="Angry",t[t.Interested=26]="Interested",t[t.Charged=27]="Charged",t[t.Tamed=28]="Tamed",t[t.Orphaned=29]="Orphaned",t[t.Leashed=30]="Leashed",t[t.Sheared=31]="Sheared",t[t.Gliding=32]="Gliding",t[t.Elder=33]="Elder",t[t.Moving=34]="Moving",t[t.Breathing=35]="Breathing",t[t.Chested=36]="Chested",t[t.Stackable=37]="Stackable",t[t.ShowBottom=38]="ShowBottom",t[t.Standing=39]="Standing",t[t.Shaking=40]="Shaking",t[t.Idling=41]="Idling",t[t.Casting=42]="Casting",t[t.Charging=43]="Charging",t[t.WasdControlled=44]="WasdControlled",t[t.CanPowerJump=45]="CanPowerJump",t[t.CanDash=46]="CanDash",t[t.Lingering=47]="Lingering",t[t.HasCollision=48]="HasCollision",t[t.HasGravity=49]="HasGravity",t[t.FireImmune=50]="FireImmune",t[t.Dancing=51]="Dancing",t[t.Enchanted=52]="Enchanted",t[t.ReturnTrident=53]="ReturnTrident",t[t.ContainerIsPrivate=54]="ContainerIsPrivate",t[t.IsTransforming=55]="IsTransforming",t[t.DamageNearbyMobs=56]="DamageNearbyMobs",t[t.Swimming=57]="Swimming",t[t.Bribed=58]="Bribed",t[t.IsPregnant=59]="IsPregnant",t[t.LayingEgg=60]="LayingEgg",t[t.PassengerCanPick=61]="PassengerCanPick",t[t.TransitionSitting=62]="TransitionSitting",t[t.Eating=63]="Eating",t[t.LayingDown=64]="LayingDown",t[t.Sneezing=65]="Sneezing",t[t.Trusting=66]="Trusting",t[t.Rolling=67]="Rolling",t[t.Scared=68]="Scared",t[t.InScaffolding=69]="InScaffolding",t[t.OverScaffolding=70]="OverScaffolding",t[t.DescendThroughBlock=71]="DescendThroughBlock",t[t.Blocking=72]="Blocking",t[t.TransitionBlocking=73]="TransitionBlocking",t[t.BlockedUsingShield=74]="BlockedUsingShield",t[t.BlockedUsingDamagedShield=75]="BlockedUsingDamagedShield",t[t.Sleeping=76]="Sleeping",t[t.WantsToWake=77]="WantsToWake",t[t.TradeInterest=78]="TradeInterest",t[t.DoorBreaker=79]="DoorBreaker",t[t.BreakingObstruction=80]="BreakingObstruction",t[t.DoorOpener=81]="DoorOpener",t[t.IsIllagerCaptain=82]="IsIllagerCaptain",t[t.Stunned=83]="Stunned",t[t.Roaring=84]="Roaring",t[t.DelayedAttack=85]="DelayedAttack",t[t.IsAvoidingMobs=86]="IsAvoidingMobs",t[t.IsAvoidingBlock=87]="IsAvoidingBlock",t[t.FacingTargetToRangeAttack=88]="FacingTargetToRangeAttack",t[t.HiddenWhenInvisible=89]="HiddenWhenInvisible",t[t.IsInUi=90]="IsInUi",t[t.Stalking=91]="Stalking",t[t.Emoting=92]="Emoting",t[t.Celebrating=93]="Celebrating",t[t.Admiring=94]="Admiring",t[t.CelebratingSpecial=95]="CelebratingSpecial",t[t.OutOfControl=96]="OutOfControl",t[t.RamAttack=97]="RamAttack",t[t.PlayingDead=98]="PlayingDead",t[t.InAscendableBlock=99]="InAscendableBlock",t[t.OverDescendableBlock=100]="OverDescendableBlock",t[t.Croaking=101]="Croaking",t[t.EatMob=102]="EatMob",t[t.JumpGoalJump=103]="JumpGoalJump",t[t.Emerging=104]="Emerging",t[t.Sniffing=105]="Sniffing",t[t.Digging=106]="Digging",t[t.SonicBoom=107]="SonicBoom",t[t.HasDashCooldown=108]="HasDashCooldown",t[t.PushTowardsClosestSpace=109]="PushTowardsClosestSpace",t[t.Deprecated1=110]="Deprecated1",t[t.Deprecated2=111]="Deprecated2",t[t.Deprecated3=112]="Deprecated3",t[t.Searching=113]="Searching",t[t.Crawling=114]="Crawling",t[t.TimerFlag1=115]="TimerFlag1",t[t.TimerFlag2=116]="TimerFlag2",t[t.TimerFlag3=117]="TimerFlag3",t[t.BodyRotationBlocked=118]="BodyRotationBlocked",t[t.Count=119]="Count",t}(kh||{});var N=function(t){return t[t.Byte=0]="Byte",t[t.Short=1]="Short",t[t.Int=2]="Int",t[t.Float=3]="Float",t[t.String=4]="String",t[t.CompoundTag=5]="CompoundTag",t[t.BlockPos=6]="BlockPos",t[t.Long=7]="Long",t[t.Vec3=8]="Vec3",t}(N||{});var Sh=function(t){return t[t.None=-1]="None",t[t.Override=0]="Override",t[t.Contact=1]="Contact",t[t.EntityAttack=2]="EntityAttack",t[t.Projectile=3]="Projectile",t[t.Suffocation=4]="Suffocation",t[t.Fall=5]="Fall",t[t.Fire=6]="Fire",t[t.FireTick=7]="FireTick",t[t.Lava=8]="Lava",t[t.Drowning=9]="Drowning",t[t.BlockExplosion=10]="BlockExplosion",t[t.EntityExplosion=11]="EntityExplosion",t[t.Void=12]="Void",t[t.SelfDestruct=13]="SelfDestruct",t[t.Magic=14]="Magic",t[t.Wither=15]="Wither",t[t.Starve=16]="Starve",t[t.Anvil=17]="Anvil",t[t.Thorns=18]="Thorns",t[t.FallingBlock=19]="FallingBlock",t[t.Piston=20]="Piston",t[t.FlyIntoWall=21]="FlyIntoWall",t[t.Magma=22]="Magma",t[t.Fireworks=23]="Fireworks",t[t.Lightning=24]="Lightning",t[t.Charging=25]="Charging",t[t.Temperature=26]="Temperature",t[t.Freezing=27]="Freezing",t[t.Stalactite=28]="Stalactite",t[t.Stalagmite=29]="Stalagmite",t[t.RamAttack=30]="RamAttack",t[t.SonicBoom=31]="SonicBoom",t[t.Campfire=32]="Campfire",t[t.SoulCampfire=33]="SoulCampfire",t[t.All=34]="All",t}(Sh||{});var Oh=function(t){return t[t.Unknown=-1]="Unknown",t[t.EquipArmor=0]="EquipArmor",t[t.Eat=1]="Eat",t[t.Attack=2]="Attack",t[t.Consume=3]="Consume",t[t.Throw=4]="Throw",t[t.Shoot=5]="Shoot",t[t.Place=6]="Place",t[t.FillBottle=7]="FillBottle",t[t.FillBucket=8]="FillBucket",t[t.PourBucket=9]="PourBucket",t[t.UseTool=10]="UseTool",t[t.Interact=11]="Interact",t[t.Retrieved=12]="Retrieved",t[t.Dyed=13]="Dyed",t[t.Traded=14]="Traded",t[t.BrushingCompleted=15]="BrushingCompleted",t[t.OpenedVault=16]="OpenedVault",t[t._Count=17]="_Count",t}(Oh||{});var Bh=function(t){return t[t.SetActions=0]="SetActions",t[t.ExecuteAction=1]="ExecuteAction",t[t.ExecuteClosingCommands=2]="ExecuteClosingCommands",t[t.SetName=3]="SetName",t[t.SetSkin=4]="SetSkin",t[t.SetInteractText=5]="SetInteractText",t[t.ExecuteOpeningCommands=6]="ExecuteOpeningCommands",t}(Bh||{});var Ch=function(t){return t[t.Unknown=0]="Unknown",t[t.StartLoadingScreen=1]="StartLoadingScreen",t[t.EndLoadingScreen=2]="EndLoadingScreen",t}(Ch||{});var Vh=function(t){return t[t.Positional=0]="Positional",t[t.Rotational=1]="Rotational",t}(Vh||{});var _h=function(t){return t[t.Add=0]="Add",t[t.Stop=1]="Stop",t}(_h||{});var ft=function(t){return t[t.ReplacePage=0]="ReplacePage",t[t.AddPage=1]="AddPage",t[t.DeletePage=2]="DeletePage",t[t.SwapPage=3]="SwapPage",t[t.Finalize=4]="Finalize",t}(ft||{});var jh=function(t){return t[t.Camera=0]="Camera",t[t.Player=1]="Player",t}(jh||{});var Uh=function(t){return t[t.Linear=0]="Linear",t[t.Spring=1]="Spring",t[t.InQuad=2]="InQuad",t[t.OutQuad=3]="OutQuad",t[t.InOutQuad=4]="InOutQuad",t[t.InCubic=5]="InCubic",t[t.OutCubic=6]="OutCubic",t[t.InOutCubic=7]="InOutCubic",t[t.InQuart=8]="InQuart",t[t.OutQuart=9]="OutQuart",t[t.InOutQuart=10]="InOutQuart",t[t.InQuint=11]="InQuint",t[t.OutQuint=12]="OutQuint",t[t.InOutQuint=13]="InOutQuint",t[t.InSine=14]="InSine",t[t.OutSine=15]="OutSine",t[t.InOutSine=16]="InOutSine",t[t.InExpo=17]="InExpo",t[t.OutExpo=18]="OutExpo",t[t.InOutExpo=19]="InOutExpo",t[t.InCirc=20]="InCirc",t[t.OutCirc=21]="OutCirc",t[t.InOutCirc=22]="InOutCirc",t[t.InBounce=23]="InBounce",t[t.OutBounce=24]="OutBounce",t[t.InOutBounce=25]="InOutBounce",t[t.InBack=26]="InBack",t[t.OutBack=27]="OutBack",t[t.InOutBack=28]="InOutBack",t[t.InElastic=29]="InElastic",t[t.OutElastic=30]="OutElastic",t[t.InOutElastic=31]="InOutElastic",t}(Uh||{});var D=function(t){return t[t.ShapelessRecipe=0]="ShapelessRecipe",t[t.ShapedRecipe=1]="ShapedRecipe",t[t.FurnaceRecipe=2]="FurnaceRecipe",t[t.FurnaceAuxRecipe=3]="FurnaceAuxRecipe",t[t.MultiRecipe=4]="MultiRecipe",t[t.UserDataShapelessRecipe=5]="UserDataShapelessRecipe",t[t.ShapelessChemistryRecipe=6]="ShapelessChemistryRecipe",t[t.ShapedChemistryRecipe=7]="ShapedChemistryRecipe",t[t.SmithingTransformRecipe=8]="SmithingTransformRecipe",t[t.SmithingTrimRecipe=9]="SmithingTrimRecipe",t[t.COUNT=10]="COUNT",t}(D||{});var X=function(t){return t[t.Invalid=0]="Invalid",t[t.Default=1]="Default",t[t.Molang=2]="Molang",t[t.ItemTag=3]="ItemTag",t[t.Deferred=4]="Deferred",t[t.ComplexAlias=5]="ComplexAlias",t}(X||{});var dn=function(t){return t[t.None=0]="None",t[t.AlwaysUnlocked=1]="AlwaysUnlocked",t[t.PlayerInWater=2]="PlayerInWater",t[t.PlayerHasManyItems=3]="PlayerHasManyItems",t}(dn||{});var Nh=function(t){return t[t.FurnanceTickCount=0]="FurnanceTickCount",t[t.FurnaceLitTime=1]="FurnaceLitTime",t[t.FurnaceLitDuration=2]="FurnaceLitDuration",t[t.FurnaceStoredXp=3]="FurnaceStoredXp",t[t.FurnaceFuelAux=4]="FurnaceFuelAux",t[t.BrewTime=5]="BrewTime",t[t.BrewFuelAmount=6]="BrewFuelAmount",t[t.BrewFuelTotal=7]="BrewFuelTotal",t}(Nh||{});var de=function(t){return t[t.Invalid=0]="Invalid",t[t.Player=1]="Player",t[t.Entity=2]="Entity",t[t.FakePlayer=3]="FakePlayer",t}(de||{});var ln=function(t){return t[t.Change=0]="Change",t[t.Remove=1]="Remove",t}(ln||{});var Dh=function(t){return t[t.Legacy=0]="Legacy",t[t.Overworld=1]="Overworld",t[t.Flat=2]="Flat",t[t.Nether=3]="Nether",t[t.TheEnd=4]="TheEnd",t[t.Void=5]="Void",t}(Dh||{});var Mh=function(t){return t[t.Unknown=0]="Unknown",t[t.PlayerInput=1]="PlayerInput",t[t.SimulationTick=2]="SimulationTick",t}(Mh||{});var dt=function(t){return t[t.Ascend=0]="Ascend",t[t.Descend=1]="Descend",t[t.NorthJump_DEPRECATED=2]="NorthJump_DEPRECATED",t[t.JumpDown=3]="JumpDown",t[t.SprintDown=4]="SprintDown",t[t.ChangeHeight=5]="ChangeHeight",t[t.Jumping=6]="Jumping",t[t.AutoJumpingInWater=7]="AutoJumpingInWater",t[t.Sneaking=8]="Sneaking",t[t.SneakDown=9]="SneakDown",t[t.Up=10]="Up",t[t.Down=11]="Down",t[t.Left=12]="Left",t[t.Right=13]="Right",t[t.UpLeft=14]="UpLeft",t[t.UpRight=15]="UpRight",t[t.WantUp=16]="WantUp",t[t.WantDown=17]="WantDown",t[t.WantDownSlow=18]="WantDownSlow",t[t.WantUpSlow=19]="WantUpSlow",t[t.Sprinting=20]="Sprinting",t[t.AscendBlock=21]="AscendBlock",t[t.DescendBlock=22]="DescendBlock",t[t.SneakToggleDown=23]="SneakToggleDown",t[t.PersistSneak=24]="PersistSneak",t[t.StartSprinting=25]="StartSprinting",t[t.StopSprinting=26]="StopSprinting",t[t.StartSneaking=27]="StartSneaking",t[t.StopSneaking=28]="StopSneaking",t[t.StartSwimming=29]="StartSwimming",t[t.StopSwimming=30]="StopSwimming",t[t.StartJumping=31]="StartJumping",t[t.StartGliding=32]="StartGliding",t[t.StopGliding=33]="StopGliding",t[t.PerformItemInteraction=34]="PerformItemInteraction",t[t.PerformBlockActions=35]="PerformBlockActions",t[t.PerformItemStackRequest=36]="PerformItemStackRequest",t[t.HandledTeleport=37]="HandledTeleport",t[t.Emoting=38]="Emoting",t[t.MissedSwing=39]="MissedSwing",t[t.StartCrawling=40]="StartCrawling",t[t.StopCrawling=41]="StopCrawling",t[t.StartFlying=42]="StartFlying",t[t.StopFlying=43]="StopFlying",t[t.ClientAckServerData=44]="ClientAckServerData",t[t.IsInClientPredictedVehicle=45]="IsInClientPredictedVehicle",t[t.PaddlingLeft=46]="PaddlingLeft",t[t.PaddlingRight=47]="PaddlingRight",t[t.BlockBreakingDelayEnabled=48]="BlockBreakingDelayEnabled",t[t.HorizontalCollision=49]="HorizontalCollision",t[t.VerticalCollision=50]="VerticalCollision",t[t.DownLeft=51]="DownLeft",t[t.DownRight=52]="DownRight",t[t.StartUsingItem=53]="StartUsingItem",t[t.IsCameraRelativeMovementEnabled=54]="IsCameraRelativeMovementEnabled",t[t.IsRotControlledByMoveDirection=55]="IsRotControlledByMoveDirection",t[t.StartSpinAttack=56]="StartSpinAttack",t[t.StopSpinAttack=57]="StopSpinAttack",t[t.INPUT_NUM=58]="INPUT_NUM",t}(dt||{});var mn=function(t){return t[t.Normal=0]="Normal",t[t.Teaser=1]="Teaser",t[t.Screen=2]="Screen",t[t.Viewer=3]="Viewer",t[t.Reality=4]="Reality",t[t.Placement=5]="Placement",t[t.LivingRoom=6]="LivingRoom",t[t.ExitLevel=7]="ExitLevel",t[t.ExitLevelLivingRoom=8]="ExitLevelLivingRoom",t[t.NumberModes=9]="NumberModes",t}(mn||{});var un=function(t){return t[t.Unknown=0]="Unknown",t[t.Mouse=1]="Mouse",t[t.Touch=2]="Touch",t[t.GamePad=3]="GamePad",t[t.MotionController=4]="MotionController",t}(un||{});var hn=function(t){return t[t.Touch=0]="Touch",t[t.Crosshair=1]="Crosshair",t[t.Classic=2]="Classic",t}(hn||{});var Zh=function(t){return t[t.Sound=0]="Sound",t[t.ChangeState=1]="ChangeState",t}(Zh||{});var Th=function(t){return t[t.None=0]="None",t[t.Camera=2]="Camera",t[t.Movement=4]="Movement",t}(Th||{});var zh=function(t){return t[t.Remove=0]="Remove",t[t.Rider=1]="Rider",t[t.Passenger=2]="Passenger",t}(zh||{});var Fh=function(t){return t[t.Initial=1]="Initial",t[t.SupportTargetModuleUuid=2]="SupportTargetModuleUuid",t[t.SupportTargetSelection=3]="SupportTargetSelection",t[t.SupportPasscode=4]="SupportPasscode",t}(Fh||{});var Hh=function(t){return t[t.HasX=1]="HasX",t[t.HasY=2]="HasY",t[t.HasZ=4]="HasZ",t[t.HasRotationX=8]="HasRotationX",t[t.HasRotationY=16]="HasRotationY",t[t.HasRotationZ=32]="HasRotationZ",t[t.OnGround=64]="OnGround",t[t.Teleport=128]="Teleport",t[t.ForceMove=256]="ForceMove",t[t.All=63]="All",t}(Hh||{});var P=function(t){return t[t.AchievementAwarded=0]="AchievementAwarded",t[t.EntityInteract=1]="EntityInteract",t[t.PortalBuilt=2]="PortalBuilt",t[t.PortalUsed=3]="PortalUsed",t[t.MobKilled=4]="MobKilled",t[t.CauldronUsed=5]="CauldronUsed",t[t.PlayerDeath=6]="PlayerDeath",t[t.BossKilled=7]="BossKilled",t[t.AgentCommand=8]="AgentCommand",t[t.AgentCreated=9]="AgentCreated",t[t.BannerPatternRemoved=10]="BannerPatternRemoved",t[t.CommandExecuted=11]="CommandExecuted",t[t.FishBucketed=12]="FishBucketed",t[t.MobBorn=13]="MobBorn",t[t.PetDied=14]="PetDied",t[t.CauldronBlockUsed=15]="CauldronBlockUsed",t[t.ComposterBlockUsed=16]="ComposterBlockUsed",t[t.BellBlockUsed=17]="BellBlockUsed",t[t.ActorDefinition=18]="ActorDefinition",t[t.RaidUpdate=19]="RaidUpdate",t[t.PlayerMovementAnomaly=20]="PlayerMovementAnomaly",t[t.PlayerMovementCorrected=21]="PlayerMovementCorrected",t[t.HoneyHarvested=22]="HoneyHarvested",t[t.TargetBlockHit=23]="TargetBlockHit",t[t.PiglinBarter=24]="PiglinBarter",t[t.WaxedOrUnwaxedCopper=25]="WaxedOrUnwaxedCopper",t[t.CodeBuilderRuntimeAction=26]="CodeBuilderRuntimeAction",t[t.CodeBuilderScoreboard=27]="CodeBuilderScoreboard",t[t.StriderRiddenInLavaInOverworld=28]="StriderRiddenInLavaInOverworld",t[t.SneakCloseToSculkSensor=29]="SneakCloseToSculkSensor",t[t.CarefulRestoration=30]="CarefulRestoration",t[t.ItemUsed=31]="ItemUsed",t}(P||{});var gn=function(t){return t[t.Player=0]="Player",t[t.World=1]="World",t}(gn||{});var yn=function(t){return t[t.LegacyClientAuthoritativeV1=0]="LegacyClientAuthoritativeV1",t[t.ClientAuthoritativeV2=1]="ClientAuthoritativeV2",t[t.ServerAuthoritativeV3=2]="ServerAuthoritativeV3",t}(yn||{});var Wh=function(t){return t[t.Undetermined=0]="Undetermined",t[t.SuperLow=1]="SuperLow",t[t.Low=2]="Low",t[t.Mid=3]="Mid",t[t.Hight=4]="Hight",t[t.SuperHigh=5]="SuperHigh",t}(Wh||{});var qh=function(t){return t[t.Build=1]="Build",t[t.Mine=2]="Mine",t[t.DoorsAndSwitches=4]="DoorsAndSwitches",t[t.OpenContainers=8]="OpenContainers",t[t.AttackPlayers=16]="AttackPlayers",t[t.AttackMobs=32]="AttackMobs",t[t.OperatorCommands=64]="OperatorCommands",t[t.Teleport=128]="Teleport",t}(qh||{});var Ah=function(t){return t[t.Impulse=0]="Impulse",t[t.Repeating=1]="Repeating",t[t.Chain=2]="Chain",t}(Ah||{});import{Endianness as ia,Float32 as oa,VarLong as Zw,VarString as Tw,ZigZong as zw}from"@serenityjs/binarystream";import{Serialize as ot,Proto as Fw}from"@serenityjs/raknet";import{Endianness as wn}from"@serenityjs/binarystream";import{DataType as Gh}from"@serenityjs/raknet";var bn=class kp extends Gh{static{s(this,"LoginTokens")}client;identity;constructor(e,r){super(),this.client=e,this.identity=r}static read(e){e.readVarInt();let r=e.readString32(wn.Little),o=e.readString32(wn.Little);return new kp(o,r)}static write(e,r){e.writeVarInt(r.identity.length+r.client.length+8),e.writeString32(r.identity,wn.Little),e.writeString32(r.client,wn.Little)}};import{Endianness as Pn}from"@serenityjs/binarystream";import{DataType as Kh}from"@serenityjs/raknet";var nB=class Sp extends Kh{static{s(this,"BehaviorPackInfo")}contentIdentity;contentKey;hasScripts;size;subpackName;uuid;version;addonPack;constructor(e,r,o,n,i,a,c,d){super(),this.contentIdentity=e,this.contentKey=r,this.hasScripts=o,this.size=n,this.subpackName=i,this.uuid=a,this.version=c,this.addonPack=d}static read(e){let r=[],o=e.readInt16(Pn.Little);for(let n=0;n<o;n++){let i=e.readVarString(),a=e.readVarString(),c=e.readUint32(Pn.Little),d=e.readVarString(),u=e.readVarString(),w=e.readVarString(),b=e.readBool(),I=e.readBool();r.push(new Sp(w,d,b,c,u,i,a,I))}return r}static write(e,r){e.writeInt16(r.length,Pn.Little);for(let o of r)e.writeVarString(o.uuid),e.writeVarString(o.version),e.writeUint32(o.size,Pn.Little),e.writeVarString(o.contentKey),e.writeVarString(o.subpackName),e.writeVarString(o.contentIdentity),e.writeBool(o.hasScripts),e.writeBool(o.addonPack)}};import{Endianness as Rn}from"@serenityjs/binarystream";import{DataType as Yh}from"@serenityjs/raknet";var Op=class extends Yh{static{s(this,"TexturePackInfo")}contentIdentity;contentKey;hasScripts;rtxEnabled;size;subpackName;uuid;version;addonPack;cdnLink;constructor(e,r,o,n,i,a,c,d,u,w){super(),this.contentIdentity=e,this.contentKey=r,this.hasScripts=o,this.rtxEnabled=n,this.size=i,this.subpackName=a,this.uuid=c,this.version=d,this.addonPack=u,this.cdnLink=w}static read(e){let r=[],o=e.readInt16(Rn.Little);for(let n=0;n<o;n++){let i=e.readVarString(),a=e.readVarString(),c=e.readUint64(Rn.Little),d=e.readVarString(),u=e.readVarString(),w=e.readVarString(),b=e.readBool(),I=e.readBool(),B=e.readBool(),S=e.readVarString();r.push(new this(w,d,b,B,c,u,i,a,I,S))}return r}static write(e,r){e.writeInt16(r.length,Rn.Little);for(let o of r)e.writeVarString(o.uuid),e.writeVarString(o.version),e.writeUint64(o.size,Rn.Little),e.writeVarString(o.contentKey),e.writeVarString(o.subpackName),e.writeVarString(o.contentIdentity),e.writeBool(o.hasScripts),e.writeBool(o.rtxEnabled),e.writeBool(o.addonPack),e.writeVarString(o.cdnLink)}};import{DataType as Jh}from"@serenityjs/raknet";var uB=class Bp extends Jh{static{s(this,"PackLinks")}id;url;constructor(e,r){super(),this.id=e,this.url=r}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readVarString(),a=e.readVarString();r.push(new Bp(i,a))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeVarString(o.id),e.writeVarString(o.url)}};import{Endianness as Cp}from"@serenityjs/binarystream";import{DataType as Qh}from"@serenityjs/raknet";var Vp=class extends Qh{static{s(this,"ResourcePackIds")}static read(e){let r=[],o=e.readInt16(Cp.Little);for(let n=0;n<o;n++){let i=e.readVarString();r.push(i)}return r}static write(e,r){e.writeInt16(r.length,Cp.Little);for(let o of r)e.writeVarString(o)}};import{DataType as Xh}from"@serenityjs/raknet";var xs=class _p extends Xh{static{s(this,"ResourceIdVersions")}name;uuid;version;constructor(e,r,o){super(),this.name=e,this.uuid=r,this.version=o}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readVarString(),a=e.readVarString(),c=e.readVarString();r.push(new _p(c,i,a))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeVarString(o.uuid),e.writeVarString(o.version),e.writeVarString(o.name)}};import{Endianness as jp}from"@serenityjs/binarystream";import{DataType as $h}from"@serenityjs/raknet";var xn=class Up extends $h{static{s(this,"Experiments")}enabled;name;constructor(e,r){super(),this.name=e,this.enabled=r}static read(e){let r=[],o=e.readInt32(jp.Little);for(let n=0;n<o;n++){let i=e.readVarString(),a=e.readBool();r.push(new Up(i,a))}return r}static write(e,r){e.writeInt32(r.length,jp.Little);for(let o of r)e.writeVarString(o.name),e.writeBool(o.enabled)}};import{Endianness as Sr}from"@serenityjs/binarystream";import{DataType as Lh}from"@serenityjs/raknet";var l=class $ extends Lh{static{s(this,"Vector3f")}x;y;z;constructor(e,r,o){super(),this.x=e,this.y=r,this.z=o}set(e){this.x=e.x,this.y=e.y,this.z=e.z}round(){let e=Math.round(this.x),r=Math.round(this.y),o=Math.round(this.z);return new $(e,r,o)}ceil(){let e=Math.ceil(this.x),r=Math.ceil(this.y),o=Math.ceil(this.z);return new $(e,r,o)}floor(){let e=Math.floor(this.x),r=Math.floor(this.y),o=Math.floor(this.z);return new $(e,r,o)}add(e){return new $(this.x+e.x,this.y+e.y,this.z+e.z)}subtract(e){return new $(this.x-e.x,this.y-e.y,this.z-e.z)}multiply(e){return new $(this.x*e,this.y*e,this.z*e)}divide(e){return new $(this.x/e,this.y/e,this.z/e)}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}cross(e){let r=this.y*e.z-this.z*e.y,o=this.z*e.x-this.x*e.z,n=this.x*e.y-this.y*e.x;return new $(r,o,n)}length(){return Math.hypot(this.x,this.y,this.z)}lengthSqrt(){return this.x*this.x+this.y*this.y+this.z*this.z}normalize(){let e=this.length();return new $(this.x/e,this.y/e,this.z/e)}lerp(e,r){return new $(this.x+(e.x-this.x)*r,this.y+(e.y-this.y)*r,this.z+(e.z-this.z)*r)}slerp(e,r){let o=this.dot(e),n=Math.acos(o),i=Math.sin(n),a=Math.sin((1-r)*n)/i,c=Math.sin(r*n)/i;return this.multiply(a).add(e.multiply(c))}equals(e){return this.x===e.x&&this.y===e.y&&this.z===e.z}distance(e){return Math.hypot(this.x-e.x,this.y-e.y,this.z-e.z)}absolute(){return new $(Math.abs(this.x),Math.abs(this.y),Math.abs(this.z))}isZero(){return Math.abs(this.x)<Number.EPSILON&&Math.abs(this.y)<Number.EPSILON&&Math.abs(this.z)<Number.EPSILON}static fromArray(e){return new $(e[0],e[1],e[2])}static read(e){let r=e.readFloat32(Sr.Little),o=e.readFloat32(Sr.Little),n=e.readFloat32(Sr.Little);return new $(r,o,n)}static write(e,r){e.writeFloat32(r.x,Sr.Little),e.writeFloat32(r.y,Sr.Little),e.writeFloat32(r.z,Sr.Little)}};import{Endianness as In}from"@serenityjs/binarystream";import{DataType as Eh}from"@serenityjs/raknet";var M=class Np extends Eh{static{s(this,"Vector2f")}x;y;constructor(e,r){super(),this.x=e,this.y=r}static read(e){let r=e.readFloat32(In.Little),o=e.readFloat32(In.Little);return new Np(r,o)}static write(e,r){e.writeFloat32(r.x,In.Little),e.writeFloat32(r.y,In.Little)}};import{DataType as vh}from"@serenityjs/raknet";import{BinaryStream as Dp}from"@serenityjs/binarystream";var R=class Q extends vh{static{s(this,"BlockPosition")}x;y;z;constructor(e,r,o){super(),this.x=e,this.y=r,this.z=o}round(){let e=Math.round(this.x),r=Math.round(this.y),o=Math.round(this.z);return new Q(e,r,o)}ceil(){let e=Math.ceil(this.x),r=Math.ceil(this.y),o=Math.ceil(this.z);return new Q(e,r,o)}floor(){let e=Math.floor(this.x),r=Math.floor(this.y),o=Math.floor(this.z);return new Q(e,r,o)}add(e){return new Q(this.x+e.x,this.y+e.y,this.z+e.z)}subtract(e){return new Q(this.x-e.x,this.y-e.y,this.z-e.z)}multiply(e){return new Q(this.x*e,this.y*e,this.z*e)}divide(e){return new Q(this.x/e,this.y/e,this.z/e)}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}cross(e){let r=this.y*e.z-this.z*e.y,o=this.z*e.x-this.x*e.z,n=this.x*e.y-this.y*e.x;return new Q(r,o,n)}length(){return Math.hypot(this.x,this.y,this.z)}lengthSqrt(){return this.x*this.x+this.y*this.y+this.z*this.z}normalize(){let e=this.length();return new Q(this.x/e,this.y/e,this.z/e)}lerp(e,r){return new Q(this.x+(e.x-this.x)*r,this.y+(e.y-this.y)*r,this.z+(e.z-this.z)*r)}slerp(e,r){let o=this.dot(e),n=Math.acos(o),i=Math.sin(n),a=Math.sin((1-r)*n)/i,c=Math.sin(r*n)/i;return this.multiply(a).add(e.multiply(c))}equals(e){return this.x===e.x&&this.y===e.y&&this.z===e.z}distance(e){return Math.hypot(this.x-e.x,this.y-e.y,this.z-e.z)}absolute(){return new Q(Math.abs(this.x),Math.abs(this.y),Math.abs(this.z))}static read(e){let r=e.readZigZag(),o=e.readVarInt(),n=e.readZigZag();return o=4294967231>=o?o:o-4294967296,new Q(r,o,n)}static write(e,r){let o=r.y<0?4294967296+r.y:r.y;e.writeZigZag(r.x),e.writeVarInt(o),e.writeZigZag(r.z)}static fromVector3f(e){return new Q(Math.floor(e.x),Math.floor(e.y),Math.floor(e.z))}static from(e){return new Q(Math.floor(e.x),Math.floor(e.y),Math.floor(e.z))}static toVector3f(e){return new l(e.x,e.y,e.z)}static hash(e){let r=new Dp;this.write(r,e);let o=0n;for(let n of r.getBuffer())o=o<<8n|BigInt(n);return o}static unhash(e){let r=[];for(;e>0;)r.push(Number(e&0xffn)),e>>=8n;let o=Buffer.from(r.reverse()),n=new Dp(o);return this.read(n)}};import{Endianness as Mp}from"@serenityjs/binarystream";import{DataType as tg}from"@serenityjs/raknet";var Or=class Zp extends tg{static{s(this,"GameRules")}editable;name;type;value;constructor(e,r,o,n){super(),this.editable=e,this.name=r,this.type=o,this.value=n}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readVarString(),a=e.readBool(),c=e.readVarInt(),d;switch(c){default:throw new Error(`Reading unknown GameRuleType: ${c}`);case fe.Bool:{d=e.readBool();break}case fe.Int:{d=e.readZigZag();break}case fe.Float:{d=e.readFloat32(Mp.Little);break}}r.push(new Zp(a,i,c,d))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)switch(e.writeVarString(o.name),e.writeBool(o.editable),e.writeVarInt(o.type),o.type){default:throw new Error(`Writing unknown GameRuleType: ${o.type}`);case fe.Bool:{e.writeBool(o.value);break}case fe.Int:{e.writeZigZag(o.value);break}case fe.Float:{e.writeFloat32(o.value,Mp.Little);break}}}};import{DataType as eg}from"@serenityjs/raknet";import{CompoundTag as Tp}from"@serenityjs/nbt";var zp=class Fp extends eg{static{s(this,"BlockProperty")}name;nbt;constructor(e,r){super(),this.name=e,this.nbt=r}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readVarString(),a=Tp.read(e,!0);r.push(new Fp(i,a))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeVarString(o.name),Tp.write(e,o.nbt,!0)}};import{Endianness as Hp}from"@serenityjs/binarystream";import{DataType as rg}from"@serenityjs/raknet";var Wp=class qp extends rg{static{s(this,"ItemData")}componentBased;name;networkId;constructor(e,r,o){super(),this.componentBased=e,this.name=r,this.networkId=o}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readVarString(),a=e.readInt16(Hp.Little),c=e.readBool();r.push(new qp(c,i,a))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeVarString(o.name),e.writeInt16(o.networkId,Hp.Little),e.writeBool(o.componentBased)}};import{DataType as ig}from"@serenityjs/raknet";var Ap=class Gp extends ig{static{s(this,"TeleportCause")}cause;sourceEntityType;constructor(e,r){super(),this.cause=e,this.sourceEntityType=r}static read(e,r,o){if(o===cn.Teleport){let n=e.readInt32(r),i=e.readInt32(r);return new Gp(n,i)}else return null}static write(e,r,o,n){n===cn.Teleport&&(e.writeInt32(r.cause,o),e.writeInt32(r.sourceEntityType,o))}};import{DataType as pg}from"@serenityjs/raknet";import{Endianness as $p}from"@serenityjs/binarystream";import{DataType as cg}from"@serenityjs/raknet";import{Endianness as Cr}from"@serenityjs/binarystream";import{DataType as og}from"@serenityjs/raknet";import{Endianness as kn}from"@serenityjs/binarystream";var et=class Kp extends og{static{s(this,"SkinImage")}width;height;data;constructor(e,r,o){super(),this.width=e,this.height=r,this.data=o}static read(e){let r=e.readUint32(kn.Little),o=e.readUint32(kn.Little),n=e.readVarInt(),i=e.readBuffer(n);return new Kp(r,o,i)}static write(e,r){e.writeUint32(r.width,kn.Little),e.writeUint32(r.height,kn.Little),e.writeVarInt(r.data.length),e.writeBuffer(r.data)}};import{DataType as ng}from"@serenityjs/raknet";import{Endianness as Br}from"@serenityjs/binarystream";var Sn=class Yp extends ng{static{s(this,"SkinAnimation")}image;type;frames;expression;constructor(e,r,o,n){super(),this.image=e,this.type=r,this.frames=o,this.expression=n}static read(e){let r=et.read(e),o=e.readUint32(Br.Little),n=e.readFloat32(Br.Little),i=e.readUint32(Br.Little);return new Yp(r,o,n,i)}static write(e,r){et.write(e,r.image),e.writeUint32(r.type,Br.Little),e.writeFloat32(r.frames,Br.Little),e.writeUint32(r.expression,Br.Little)}};import{DataType as ag}from"@serenityjs/raknet";var On=class Jp extends ag{static{s(this,"SkinPersonaPiece")}identifier;type;packIdentifier;isDefault;productIdentifier;constructor(e,r,o,n,i){super(),this.identifier=e,this.type=r,this.packIdentifier=o,this.isDefault=n,this.productIdentifier=i}static read(e){let r=e.readVarString(),o=e.readVarString(),n=e.readVarString(),i=e.readBool(),a=e.readVarString();return new Jp(r,o,n,i,a)}static write(e,r){e.writeVarString(r.identifier),e.writeVarString(r.type),e.writeVarString(r.packIdentifier),e.writeBool(r.isDefault),e.writeVarString(r.productIdentifier)}};import{DataType as sg}from"@serenityjs/raknet";import{Endianness as Qp}from"@serenityjs/binarystream";var Bn=class Xp extends sg{static{s(this,"SkinPersonaTintPiece")}type;colors;constructor(e,r){super(),this.type=e,this.colors=r}static read(e){let r=e.readVarString(),o=e.readUint32(Qp.Little),n=[];for(let i=0;i<o;i++)n.push(e.readVarString());return new Xp(r,n)}static write(e,r){e.writeVarString(r.type),e.writeUint32(r.colors.length,Qp.Little);for(let o of r.colors)e.writeVarString(o)}};var qe=class Is extends cg{static{s(this,"SerializedSkin")}identifier;playFabIdentifier;resourcePatch;skinImage;animations;capeImage;geometryData;geometryVersion;animationData;capeIdentifier;fullIdentifier;armSize;skinColor;personaPieces;tintPieces;isPremium;isPersona;isPersonaCapeOnClassic;isPrimaryUser;overridingPlayerAppearance;constructor(e,r,o,n,i,a,c,d,u,w,b,I,B,S,z,ct,ae,se,ce,Di){super(),this.identifier=e,this.playFabIdentifier=r,this.resourcePatch=o,this.skinImage=n,this.animations=i,this.capeImage=a,this.geometryData=c,this.geometryVersion=d,this.animationData=u,this.capeIdentifier=w,this.fullIdentifier=b,this.armSize=I,this.skinColor=B,this.personaPieces=S,this.tintPieces=z,this.isPremium=ct,this.isPersona=ae,this.isPersonaCapeOnClassic=se,this.isPrimaryUser=ce,this.overridingPlayerAppearance=Di}static read(e){let r=e.readVarString(),o=e.readVarString(),n=e.readVarString(),i=et.read(e),a=e.readUint32(Cr.Little),c=[];for(let pe=0;pe<a;pe++)c.push(Sn.read(e));let d=et.read(e),u=e.readVarString(),w=e.readVarString(),b=e.readVarString(),I=e.readVarString(),B=e.readVarString(),S=e.readVarString(),z=e.readVarString(),ct=e.readUint32(Cr.Little),ae=[];for(let pe=0;pe<ct;pe++)ae.push(On.read(e));let se=e.readUint32(Cr.Little),ce=[];for(let pe=0;pe<se;pe++)ce.push(Bn.read(e));let Di=e.readBool(),bs=e.readBool(),Ps=e.readBool(),Bu=e.readBool(),Cu=e.readBool();return new Is(r,o,n,i,c,d,u,w,b,I,B,S,z,ae,ce,Di,bs,Ps,Bu,Cu)}static write(e,r){e.writeVarString(r.identifier),e.writeVarString(r.playFabIdentifier),e.writeVarString(r.resourcePatch),et.write(e,r.skinImage),e.writeUint32(r.animations.length,Cr.Little);for(let o of r.animations)Sn.write(e,o);et.write(e,r.capeImage),e.writeVarString(r.geometryData),e.writeVarString(r.geometryVersion),e.writeVarString(r.animationData),e.writeVarString(r.capeIdentifier),e.writeVarString(r.fullIdentifier),e.writeVarString(r.armSize),e.writeVarString(r.skinColor),e.writeUint32(r.personaPieces.length,Cr.Little);for(let o of r.personaPieces)On.write(e,o);e.writeUint32(r.tintPieces.length,Cr.Little);for(let o of r.tintPieces)Bn.write(e,o);e.writeBool(r.isPremium),e.writeBool(r.isPersona),e.writeBool(r.isPersonaCapeOnClassic),e.writeBool(r.isPrimaryUser),e.writeBool(r.overridingPlayerAppearance)}static from(e){return{identifier:e.SkinId,playFabIdentifier:e.PlayFabId,resourcePatch:Buffer.from(e.SkinResourcePatch,"base64").toString("utf8"),skinImage:new et(e.SkinImageWidth,e.SkinImageHeight,Buffer.from(e.SkinData,"base64")),animations:e.AnimatedImageData.map(r=>new Sn(new et(r.ImageWidth,r.ImageHeight,Buffer.from(r.Image,"base64")),r.Frames,r.AnimationExpression,r.Type)),capeImage:new et(e.CapeImageWidth,e.CapeImageHeight,Buffer.from(e.CapeData,"base64")),geometryData:Buffer.from(e.SkinGeometryData,"base64").toString("utf8"),geometryVersion:Buffer.from(e.SkinGeometryDataEngineVersion,"base64").toString("utf8"),animationData:e.SkinAnimationData,capeIdentifier:e.CapeId,fullIdentifier:e.SkinId+e.CapeId,armSize:e.ArmSize,skinColor:e.SkinColor,personaPieces:e.PersonaPieces.map(r=>new On(r.PieceId,r.PieceType,r.PackId,r.IsDefault,r.ProductId)),tintPieces:e.PieceTintColors.map(r=>new Bn(r.PieceType,r.Colors)),isPremium:e.PremiumSkin,isPersona:e.PersonaSkin,isPersonaCapeOnClassic:e.CapeOnClassicSkin,isPrimaryUser:e.TrustedSkin,overridingPlayerAppearance:e.OverrideSkin}}static empty(){return new Is("","","",new et(0,0,Buffer.alloc(0)),[],new et(0,0,Buffer.alloc(0)),"","","","","","","",[],[],!1,!1,!1,!1,!1)}};var Lp=class ks extends pg{static{s(this,"PlayerListRecord")}uuid;uniqueId;username;xuid;platformChatIdentifier;platformBuild;skin;isTeacher;isHost;isVisitor;constructor(e,r,o,n,i,a,c,d,u,w){super(),this.uuid=e,this.uniqueId=r??null,this.username=o??null,this.xuid=n??null,this.platformChatIdentifier=i??null,this.platformBuild=a??null,this.skin=c??null,this.isTeacher=d??null,this.isHost=u??null,this.isVisitor=w??null}static read(e,r,o){if(o===pn.Remove){let a=e.readVarInt(),c=[];for(let d=0;d<a;d++)c.push(new ks(e.readUuid()));return c}let n=e.readVarInt(),i=[];for(let a=0;a<n;a++){let c=e.readUuid(),d=e.readZigZong(),u=e.readVarString(),w=e.readVarString(),b=e.readVarString(),I=e.readInt32($p.Little),B=qe.read(e),S=e.readBool(),z=e.readBool(),ct=e.readBool();i.push(new ks(c,d,u,w,b,I,B,S,z,ct))}for(let a=0;a<n;a++)e.readBool();return i}static write(e,r,o,n){if(e.writeVarInt(r.length),n===pn.Remove){for(let i of r)e.writeUuid(i.uuid);return}for(let i of r)e.writeUuid(i.uuid),e.writeZigZong(i.uniqueId),e.writeVarString(i.username),e.writeVarString(i.xuid),e.writeVarString(i.platformChatIdentifier),e.writeInt32(i.platformBuild,$p.Little),qe.write(e,i.skin),e.writeBool(i.isTeacher),e.writeBool(i.isHost),e.writeBool(i.isVisitor);for(let i=0;i<r.length;i++)e.writeBool(!0)}};import{Endianness as Vr}from"@serenityjs/binarystream";import{DataType as dg}from"@serenityjs/raknet";import{DataType as fg}from"@serenityjs/raknet";import{Endianness as Cn}from"@serenityjs/binarystream";var Ss=class Ep extends fg{static{s(this,"AbilitySet")}ability;value;constructor(e,r){super(),this.ability=e,this.value=r}static read(e){let r=[],o=e.readUint32(Cn.Little),n=e.readUint32(Cn.Little);for(let i of Object.values(V)){if(!(o&1<<i))continue;let a=(n&1<<i)!==0;r.push(new Ep(i,a))}return r}static write(e,r){let o=0,n=0;for(let{ability:i,value:a}of r)o|=1<<i,n|=a?1<<i:0;e.writeUint32(o,Cn.Little),e.writeUint32(n,Cn.Little)}};var Vn=class vp extends dg{static{s(this,"AbilityLayer")}type;abilities;flySpeed;walkSpeed;constructor(e,r,o,n){super(),this.type=e,this.abilities=r,this.flySpeed=o,this.walkSpeed=n}static read(e){let r=[],o=e.readUint8();for(let n=0;n<o;n++){let i=e.readUint16(Vr.Little),a=Ss.read(e),c=e.readFloat32(Vr.Little),d=e.readFloat32(Vr.Little);r.push(new vp(i,a,c,d))}return r}static write(e,r){e.writeUint8(r.length);for(let o of r)e.writeUint16(o.type,Vr.Little),Ss.write(e,o.abilities),e.writeFloat32(o.flySpeed,Vr.Little),e.writeFloat32(o.walkSpeed,Vr.Little)}};import{DataType as lg}from"@serenityjs/raknet";var tf=class extends lg{static{s(this,"TextSource")}static read(e,r,o){return o===J.Chat||o===J.Whisper||o===J.Announcement?e.readVarString():null}static write(e,r,o,n){(n===J.Chat||n===J.Whisper||n===J.Announcement)&&e.writeVarString(r)}};import{DataType as mg}from"@serenityjs/raknet";var ef=class extends mg{static{s(this,"TextParameters")}static read(e,r,o){if(o===J.Translation||o===J.Popup||o===J.JukeboxPopup){let n=[],i=e.readVarInt();for(let a=0;a<i;a++)n.push(e.readVarString());return n}else return null}static write(e,r,o,n){if(n===J.Translation||n===J.Popup||n===J.JukeboxPopup){e.writeVarInt(r.length);for(let i of r)e.writeVarString(i)}}};import{DataType as ug}from"@serenityjs/raknet";var rf=class extends ug{static{s(this,"InteractPosition")}static read(e,r,o){return o===kr.InteractUpdate||o===kr.StopRiding?l.read(e):null}static write(e,r,o,n){(n===kr.InteractUpdate||n===kr.StopRiding)&&l.write(e,r)}};import{Endianness as lt}from"@serenityjs/binarystream";import{DataType as gg}from"@serenityjs/raknet";import{Endianness as _r}from"@serenityjs/binarystream";import{DataType as hg}from"@serenityjs/raknet";var Os=class extends hg{static{s(this,"AttributeModifier")}id;name;amount;operation;operand;serializable;constructor(e,r,o,n,i,a){super(),this.id=e,this.name=r,this.amount=o,this.operation=n,this.operand=i,this.serializable=a}static read(e){let r=e.readVarString(),o=e.readVarString(),n=e.readInt32(_r.Little),i=e.readInt32(_r.Little),a=e.readFloat32(_r.Little),c=e.readBool();return new this(r,o,n,i,a,c)}static write(e,r){e.writeVarString(r.id),e.writeVarString(r.name),e.writeInt32(r.amount,_r.Little),e.writeInt32(r.operation,_r.Little),e.writeFloat32(r.operand,_r.Little),e.writeBool(r.serializable)}};var of=class extends gg{static{s(this,"Attribute")}min;max;current;defaultMin;defaultMax;default;name;modifiers;constructor(e,r,o,n,i,a,c,d){super(),this.min=e,this.max=r,this.current=o,this.defaultMin=n,this.defaultMax=i,this.default=a,this.name=c,this.modifiers=d}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readFloat32(lt.Little),a=e.readFloat32(lt.Little),c=e.readFloat32(lt.Little),d=e.readFloat32(lt.Little),u=e.readFloat32(lt.Little),w=e.readFloat32(lt.Little),b=e.readVarString(),I=[],B=e.readVarInt();for(let S=0;S<B;S++)I.push(Os.read(e));r.push(new this(i,a,c,u,d,w,b,I))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r){e.writeFloat32(o.min,lt.Little),e.writeFloat32(o.max,lt.Little),e.writeFloat32(o.current,lt.Little),e.writeFloat32(o.defaultMin,lt.Little),e.writeFloat32(o.defaultMax,lt.Little),e.writeFloat32(o.default,lt.Little),e.writeVarString(o.name),e.writeVarInt(o.modifiers.length);for(let n of o.modifiers)Os.write(e,n)}}};import{Endianness as nf}from"@serenityjs/binarystream";import{DataType as yg}from"@serenityjs/raknet";var af=class Bs extends yg{static{s(this,"ChunkCoords")}x;z;constructor(e,r){super(),this.x=e,this.z=r}static read(e){let r=[],o=e.readUint32(nf.Little);for(let n=0;n<o;n++){let i=e.readZigZag(),a=e.readZigZag();r.push(new Bs(i,a))}return r}static write(e,r){e.writeUint32(r.length,nf.Little);for(let o of r)e.writeZigZag(o.x),e.writeZigZag(o.z)}static hash(e){let r=BigInt(e.x),o=BigInt(e.z);return r<<32n|o&0xffffffffn}static unhash(e){let r=Number(e>>32n),o=e&0xffffffffn,n=Number(o>=0x80000000n?o-0x100000000n:o);return new Bs(r,n)}};import{DataType as wg}from"@serenityjs/raknet";var _n=class sf extends wg{static{s(this,"Links")}immediate;riddenEntityId;riderEntityId;riderInitiated;type;constructor(e,r,o,n,i){super(),this.immediate=e,this.riddenEntityId=r,this.riderEntityId=o,this.riderInitiated=n,this.type=i}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readZigZong(),a=e.readZigZong(),c=e.readUint8(),d=e.readBool(),u=e.readBool();r.push(new sf(d,i,a,u,c))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeZigZong(o.riddenEntityId),e.writeZigZong(o.riderEntityId),e.writeUint8(o.type),e.writeBool(o.immediate),e.writeBool(o.riderInitiated)}};import{DataType as bg}from"@serenityjs/raknet";var cf=class extends bg{static{s(this,"ModalFormData")}static read(e,r,o){return o?e.readVarString():null}static write(e,r,o,n){n&&e.writeVarString(r)}};import{DataType as Pg}from"@serenityjs/raknet";var pf=class extends Pg{static{s(this,"ModalFormCanceled")}static read(e,r,o){return o?e.readUint8():null}static write(e,r,o,n){n&&e.writeUint8(r)}};import{Endianness as jr}from"@serenityjs/binarystream";import{DataType as Rg}from"@serenityjs/raknet";var ff=class df extends Rg{static{s(this,"EntityAttributes")}name;min;value;max;constructor(e,r,o,n){super(),this.name=e,this.min=r,this.value=o,this.max=n}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readVarString(),a=e.readFloat32(jr.Little),c=e.readFloat32(jr.Little),d=e.readFloat32(jr.Little);r.push(new df(i,a,c,d))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeVarString(o.name),e.writeFloat32(o.min,jr.Little),e.writeFloat32(o.value,jr.Little),e.writeFloat32(o.max,jr.Little)}};import{DataType as Ig}from"@serenityjs/raknet";import{DataType as xg}from"@serenityjs/raknet";import{Endianness as lf}from"@serenityjs/binarystream";var bt=class mf extends xg{static{s(this,"FullContainerName")}identifier;dynamicIdentifier;constructor(e,r){super(),this.identifier=e,this.dynamicIdentifier=r}static read(e){let r=e.readUint8(),n=e.readBool()?e.readUint32(lf.Little):void 0;return new mf(r,n)}static write(e,r){e.writeUint8(r.identifier),r.dynamicIdentifier?(e.writeBool(!0),e.writeUint32(r.dynamicIdentifier,lf.Little)):e.writeBool(!1)}};var G=class uf extends Ig{static{s(this,"ItemStackRequestSlotInfo")}container;slot;stackId;constructor(e,r,o){super(),this.container=e,this.slot=r,this.stackId=o}static read(e){let r=bt.read(e),o=e.readUint8(),n=e.readZigZag();return new uf(r,o,n)}static write(e,r){bt.write(e,r.container),e.writeUint8(r.slot),e.writeZigZag(r.stackId)}};import{DataType as kg}from"@serenityjs/raknet";var hf=class Cs extends kg{static{s(this,"ItemStackResponses")}status;id;containers;constructor(e,r,o){super(),this.status=e,this.id=r,this.containers=o}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readUint8(),a=e.readZigZag();if(i>0)r.push(new Cs(i,a));else{let c=e.readVarInt(),d=[],u=e.readUint8(),w=e.readVarInt(),b=[];for(let I=0;I<w;I++)for(let B=0;B<c;B++){let S=e.readUint8(),z=e.readUint8(),ct=e.readUint8(),ae=e.readZigZag(),se=e.readVarString(),ce=e.readZigZag();b.push({amount:ct,nametag:se,durabilityCorrection:ce,hotbarSlot:z,runtimeId:ae,slot:S})}d.push({slots:b,type:u}),r.push(new Cs(i,a,d))}}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)if(e.writeUint8(o.status),e.writeZigZag(o.id),!(o.status>0)){e.writeVarInt(o.containers.length);for(let n of o.containers){e.writeUint8(n.type),e.writeVarInt(n.slots.length);for(let i of n.slots)e.writeUint8(i.slot),e.writeUint8(i.hotbarSlot),e.writeUint8(i.amount),e.writeZigZag(i.runtimeId),e.writeVarString(i.nametag),e.writeZigZag(i.durabilityCorrection)}}}};import{DataType as Cg}from"@serenityjs/raknet";import{DataType as Og}from"@serenityjs/raknet";import{BinaryStream as Bg,Endianness as jn}from"@serenityjs/binarystream";import{Endianness as rt}from"@serenityjs/binarystream";import{CompoundTag as gf}from"@serenityjs/nbt";import{DataType as Sg}from"@serenityjs/raknet";var XC={[V.Build]:!0,[V.Mine]:!0,[V.DoorsAndSwitches]:!0,[V.OpenContainers]:!0,[V.AttackPlayers]:!0,[V.AttackMobs]:!0,[V.OperatorCommands]:!1,[V.Teleport]:!1,[V.Invulnerable]:!1,[V.Flying]:!1,[V.MayFly]:!1,[V.InstantBuild]:!1,[V.Lightning]:!1,[V.FlySpeed]:!0,[V.WalkSpeed]:!0,[V.Muted]:!1,[V.WorldBuilder]:!1,[V.NoClip]:!1,[V.PrivilegedBuilder]:!1,[V.Count]:!1};var LC=748,EC="1.21.41",vC=50,Vs=380;var Ur=class yf extends Sg{static{s(this,"ItemInstanceUserData")}nbt;canPlaceOn;canDestroy;ticking;constructor(e,r,o,n){super(),this.nbt=e,this.canPlaceOn=r,this.canDestroy=o,this.ticking=n}static read(e,r,o){let n=e.readUint16(rt.Little),i;if(n===65535){let b=e.readInt8();switch(b){case 1:{i=gf.read(e);break}default:throw new Error(`Unsupported NBT formatting version: ${b}`)}}else i=null;let a=[],c=e.readInt32(rt.Little);for(let b=0;b<c;b++){let I=e.readString32(rt.Little);a.push(I)}let d=[],u=e.readInt32(rt.Little);for(let b=0;b<u;b++){let I=e.readString32(rt.Little);d.push(I)}let w=o===Vs?e.readInt64(rt.Little):null;return new yf(i,a,d,w)}static write(e,r,o,n){r.nbt?(e.writeUint16(65535,rt.Little),e.writeInt8(1),gf.write(e,r.nbt,!1)):e.writeUint16(0,rt.Little),e.writeInt32(r.canPlaceOn.length,rt.Little);for(let i of r.canPlaceOn)e.writeString32(i,rt.Little);e.writeInt32(r.canDestroy.length,rt.Little);for(let i of r.canDestroy)e.writeString32(i,rt.Little);n===Vs&&e.writeInt64(r.ticking??BigInt(0),rt.Little)}};var x=class _s extends Og{static{s(this,"NetworkItemStackDescriptor")}network;stackSize;metadata;stackNetId;networkBlockId;extras;constructor(e,r,o,n,i,a){super(),this.network=e,this.stackSize=r??null,this.metadata=o??null,this.stackNetId=n??null,this.networkBlockId=i??null,this.extras=a??null}static read(e){let r=e.readZigZag();if(r===0)return new _s(r);let o=e.readUint16(jn.Little),n=e.readVarInt(),i=e.readBool()?e.readVarInt():null,a=e.readZigZag(),d=e.readVarInt()>0?Ur.read(e,jn.Little,r):null;return new _s(r,o,n,i,a,d)}static write(e,r){if(e.writeZigZag(r.network),r.network!==0)if(e.writeUint16(r.stackSize??0,jn.Little),e.writeVarInt(r.metadata??0),r.stackNetId?(e.writeBool(!0),e.writeVarInt(r.stackNetId)):e.writeBool(!1),e.writeZigZag(r.networkBlockId??0),r.extras){let o=new Bg;Ur.write(o,r.extras,jn.Little,r.network),e.writeVarInt(o.binary.length),e.write(o.binary)}else e.writeVarInt(0)}};var wf=class extends Cg{static{s(this,"ItemStacks")}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=x.read(e);r.push(i)}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)x.write(e,o)}};import{DataType as Vg}from"@serenityjs/raknet";var bV=class extends Vg{static{s(this,"VariableStringArray")}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++)r.push(e.readVarString());return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeVarString(o)}};import{Uint16 as bf,Uint32 as Pf,Uint8 as Rf}from"@serenityjs/binarystream";import{DataType as _g}from"@serenityjs/raknet";var xf=class If extends _g{static{s(this,"Enums")}name;values;constructor(e,r){super(),this.name=e,this.values=r}static read(e,r,o){let n=[],i=e.readVarInt();for(let a=0;a<i;a++){let c=e.readVarString(),d=[],u=e.readVarInt();for(let w=0;w<u;w++){let b=o.length<255?Rf:o.length<65535?bf:Pf;d.push(b.read(e,r))}n.push(new If(c,d))}return n}static write(e,r,o,n){e.writeVarInt(r.length);for(let i of r){e.writeVarString(i.name),e.writeVarInt(i.values.length);for(let a of i.values)(n.length<255?Rf:n.length<65535?bf:Pf).write(e,a,o)}}};import{Endianness as Un}from"@serenityjs/binarystream";import{DataType as jg}from"@serenityjs/raknet";var kf=class Sf extends jg{static{s(this,"Subcommands")}name;values;constructor(e,r){super(),this.name=e,this.values=r}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readVarString(),a=[],c=e.readVarInt();for(let d=0;d<c;d++){let u=e.readUint16(Un.Little),w=e.readUint16(Un.Little);a.push({index:u,value:w})}r.push(new Sf(i,a))}return r}static write(e,r){e.writeVarInt(r.length);for(let{name:o,values:n}of r){e.writeVarString(o),e.writeVarInt(n.length);for(let{index:i,value:a}of n)e.writeUint16(i,Un.Little),e.writeUint16(a,Un.Little)}}};import{Endianness as le}from"@serenityjs/binarystream";import{DataType as Ug}from"@serenityjs/raknet";var Of=class Bf extends Ug{static{s(this,"Commands")}name;description;flags;permissionLevel;alias;subcommands;overloads;constructor(e,r,o,n,i,a,c){super(),this.name=e,this.description=r,this.flags=o,this.permissionLevel=n,this.alias=i,this.subcommands=a,this.overloads=c}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readVarString(),a=e.readVarString(),c=e.readUint16(le.Little),d=e.readUint8(),u=e.readInt32(le.Little),w=[],b=e.readVarInt();for(let S=0;S<b;S++)w.push(e.readUint16(le.Little));let I=[],B=e.readVarInt();for(let S=0;S<B;S++){let z=e.readBool(),ct=[],ae=e.readVarInt();for(let se=0;se<ae;se++){let ce=e.readVarString(),Di=e.readUint32(le.Little),bs=e.readBool(),Ps=e.readUint8();ct.push({symbol:Di,name:ce,optional:bs,options:Ps})}I.push({chaining:z,parameters:ct})}r.push(new Bf(i,a,c,d,u,w,I))}return r}static write(e,r){e.writeVarInt(r.length);for(let{name:o,description:n,flags:i,permissionLevel:a,alias:c,subcommands:d,overloads:u}of r){e.writeVarString(o),e.writeVarString(n),e.writeUint16(i,le.Little),e.writeUint8(a),e.writeInt32(c,le.Little),e.writeVarInt(d.length);for(let w of d)e.writeUint16(w,le.Little);e.writeVarInt(u.length);for(let{chaining:w,parameters:b}of u){e.writeBool(w),e.writeVarInt(b.length);for(let{name:I,symbol:B,optional:S,options:z}of b)e.writeVarString(I),e.writeUint32(B,le.Little),e.writeBool(S),e.writeUint8(z)}}}};import{DataType as Ng}from"@serenityjs/raknet";var Cf=class Vf extends Ng{static{s(this,"DynamicEnums")}name;values;constructor(e,r){super(),this.name=e,this.values=r}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readVarString(),a=[],c=e.readVarInt();for(let d=0;d<c;d++)a.push(e.readVarString());r.push(new Vf(i,a))}return r}static write(e,r){e.writeVarInt(r.length);for(let{name:o,values:n}of r){e.writeVarString(o),e.writeVarInt(n.length);for(let i of n)e.writeVarString(i)}}};import{DataType as Dg}from"@serenityjs/raknet";import{Endianness as Nn}from"@serenityjs/binarystream";var _f=class jf extends Dg{static{s(this,"EnumConstraints")}valueIndex;enumIndex;constaints;constructor(e,r,o){super(),this.valueIndex=e,this.enumIndex=r,this.constaints=o}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readUint32(Nn.Little),a=e.readUint32(Nn.Little),c=[],d=e.readVarInt();for(let u=0;u<d;u++)c.push(e.readUint8());r.push(new jf(i,a,c))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r){e.writeUint32(o.valueIndex,Nn.Little),e.writeUint32(o.enumIndex,Nn.Little),e.writeVarInt(o.constaints.length);for(let n of o.constaints)e.writeUint8(n)}}};import{Endianness as Mg}from"@serenityjs/binarystream";import{DataType as Zg}from"@serenityjs/raknet";var Uf=class extends Zg{static{s(this,"AnimateAction")}static read(e,r,o){return o===fn.RowRight||o===fn.RowLeft?e.readFloat32(r):null}static write(e,r){r!==null&&e.writeFloat32(r,Mg.Little)}};import{DataType as Tg}from"@serenityjs/raknet";var Ae=class Nf extends Tg{static{s(this,"CommandOriginData")}origin;uuid;requestId;playerActorUniqueId;constructor(e,r,o,n){super(),this.origin=e,this.uuid=r,this.requestId=o,this.playerActorUniqueId=n??0n}static read(e){let r=e.readVarInt(),o=e.readUuid(),n=e.readVarString(),i=0n;return(r===3||r===4)&&(i=e.readVarLong()),new Nf(r,o,n,i)}static write(e,r){e.writeVarInt(r.origin),e.writeUuid(r.uuid),e.writeVarString(r.requestId),(r.origin===3||r.origin===4)&&e.writeVarLong(r.playerActorUniqueId)}};import{DataType as Fg}from"@serenityjs/raknet";import{DataType as zg}from"@serenityjs/raknet";var js=class Df extends zg{static{s(this,"CommandOutputMessage")}isInternal;messageId;parameters;constructor(e,r,o){super(),this.isInternal=e,this.messageId=r,this.parameters=o}static read(e){let r=e.readBool(),o=e.readVarString(),n=[],i=e.readVarInt();for(let a=0;a<i;a++)n.push(e.readVarString());return new Df(r,o,n)}static write(e,r){e.writeBool(r.isInternal),e.writeVarString(r.messageId),e.writeVarInt(r.parameters.length);for(let o of r.parameters)e.writeVarString(o)}};var Dn=class Mf extends Fg{static{s(this,"CommandOutputData")}originData;outputType;successCount;messages;data;constructor(e,r,o,n,i){super(),this.originData=e,this.outputType=r,this.successCount=o,this.messages=n,this.data=i}static read(e){let r=Ae.read(e),o=e.readByte(),n=e.readVarInt(),i=e.readVarInt(),a=[];for(let d=0;d<i;d++)a.push(js.read(e));let c="";return o===3&&(c=e.readVarString()),new Mf(r,o,n,a,c)}static write(e,r){Ae.write(e,r.originData),e.writeByte(r.outputType),e.writeVarInt(r.successCount),e.writeVarInt(r.messages.length);for(let o of r.messages)js.write(e,o)}};import{DataType as Hg}from"@serenityjs/raknet";var Nr=class Us extends Hg{static{s(this,"Rotation")}yaw;pitch;headYaw;constructor(e,r,o){super(),this.yaw=e,this.pitch=r,this.headYaw=o}set(e){this.yaw=e.yaw,this.pitch=e.pitch,this.headYaw=e.headYaw}floor(){return this.yaw=Math.floor(this.yaw),this.pitch=Math.floor(this.pitch),this.headYaw=Math.floor(this.headYaw),this}static fromVector3f(e){let r=e.floor();return new Us(r.x,r.y,r.z)}static read(e){let r=e.readByte()*1.40625,o=e.readByte()*(360/256),n=e.readByte()*(360/256);return new Us(r,o,n)}static write(e,r){e.writeByte(Math.floor(r.pitch/(360/256))),e.writeByte(Math.floor(r.headYaw/(360/256))),e.writeByte(Math.floor(r.yaw/(360/256)))}};import{DataType as Wg}from"@serenityjs/raknet";import{BinaryStream as qg,Endianness as Mn}from"@serenityjs/binarystream";var _=class Ns extends Wg{static{s(this,"NetworkItemInstanceDescriptor")}network;stackSize;metadata;networkBlockId;extras;constructor(e,r,o,n,i){super(),this.network=e,this.stackSize=r??null,this.metadata=o??null,this.networkBlockId=n??null,this.extras=i??null}static read(e){let r=e.readZigZag();if(r===0)return new Ns(r);let o=e.readUint16(Mn.Little),n=e.readVarInt(),i=e.readZigZag(),c=e.readVarInt()>0?Ur.read(e,Mn.Little,r):null;return new Ns(r,o,n,i,c)}static write(e,r){if(e.writeZigZag(r.network),r.network!==0)if(e.writeUint16(r.stackSize??0,Mn.Little),e.writeVarInt(r.metadata??0),e.writeZigZag(r.networkBlockId??0),r.extras){let o=new qg;Ur.write(o,r.extras,Mn.Little,r.network),e.writeVarInt(o.binary.length),e.write(o.binary)}else e.writeVarInt(0)}};import{DataType as Ag}from"@serenityjs/raknet";var Zf=class extends Ag{static{s(this,"CreativeItems")}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readVarInt(),a=_.read(e);r.push(a)}return r}static write(e,r){e.writeVarInt(r.length);for(let[o,n]of r.entries())e.writeVarInt(o),_.write(e,n)}};import{CompoundTag as Tf}from"@serenityjs/nbt";import{DataType as Gg}from"@serenityjs/raknet";var zf=class Ff extends Gg{static{s(this,"ComponentItem")}name;data;constructor(e,r){super(),this.name=e,this.data=r}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readVarString(),a=Tf.read(e,!0);r.push(new Ff(i,a))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeVarString(o.name),Tf.write(e,o.data,!0)}};import{DataType as Kg}from"@serenityjs/raknet";var Ge=class Ds extends Kg{static{s(this,"LegacyTransaction")}request;actions;constructor(e,r){super(),this.request=e,this.actions=r??null}static read(e){let r=e.readZigZag();if(r===0)return new Ds(r);let o=[],n=e.readVarInt();for(let i=0;i<n;i++){let a=e.readUint8(),c=[],d=e.readVarInt();for(let u=0;u<d;u++){let w=e.readUint8();c.push(w)}o.push({containerId:a,changedSlots:c})}return new Ds(r,o)}static write(e,r){if(e.writeZigZag(r.request),r.request!==0){if(r.actions===null)throw new Error("actions are not present.");e.writeVarInt(r.actions.length);for(let o of r.actions){e.writeUint8(o.containerId),e.writeVarInt(o.changedSlots.length);for(let n of o.changedSlots)e.writeUint8(n)}}}};import{DataType as Lg}from"@serenityjs/raknet";import{DataType as Jg}from"@serenityjs/raknet";import{DataType as Yg}from"@serenityjs/raknet";var Ms=class Hf extends Yg{static{s(this,"InventorySource")}type;containerId;bitFlags;constructor(e,r,o){super(),this.type=e,this.containerId=r??null,this.bitFlags=o??null}static read(e){let r=e.readVarInt(),o=null,n=null;switch(r){case We.ContainerInventory:{o=e.readVarInt();break}case We.WorldInteraction:{n=e.readVarInt();break}case We.CreativeInventory:break;default:throw new Error(`Unknown/not implemented inventory source type: ${r}`)}return new Hf(r,o,n)}static write(e,r){switch(e.writeVarInt(r.type),r.type){case We.ContainerInventory:{if(r.containerId===null)throw new Error("ContainerInventory type must have a containerId value");e.writeVarInt(r.containerId);break}case We.WorldInteraction:{if(r.bitFlags===null)throw new Error("WorldInteraction type must have a bitFlags value");e.writeVarInt(r.bitFlags);break}default:throw new Error(`Unknown/not implemented inventory source type: ${r.type}`)}}};var Dr=class Wf extends Jg{static{s(this,"InventoryAction")}source;slot;oldItem;newItem;constructor(e,r,o,n){super(),this.source=e,this.slot=r,this.oldItem=o,this.newItem=n}static read(e){let r=Ms.read(e),o=e.readVarInt(),n=x.read(e),i=x.read(e);return new Wf(r,o,n,i)}static write(e,r){Ms.write(e,r.source),e.writeVarInt(r.slot),x.write(e,r.oldItem),x.write(e,r.newItem)}};import{DataType as Qg}from"@serenityjs/raknet";var Mr=class qf extends Qg{static{s(this,"ItemUseInventoryTransaction")}type;triggerType;blockPosition;face;slot;item;fromPosition;clickPosition;networkBlockId;initialTransaction;constructor(e,r,o,n,i,a,c,d,u,w){super(),this.type=e,this.triggerType=r,this.blockPosition=o,this.face=n,this.slot=i,this.item=a,this.fromPosition=c,this.clickPosition=d,this.networkBlockId=u,this.initialTransaction=w}static read(e){let r=e.readVarInt(),o=e.readVarInt(),n=R.read(e),i=e.readZigZag(),a=e.readZigZag(),c=x.read(e),d=l.read(e),u=l.read(e),w=e.readZigZag(),b=e.readBool();return new qf(r,o,n,i,a,c,d,u,w,b)}static write(e,r){e.writeVarInt(r.type),e.writeVarInt(r.triggerType),R.write(e,r.blockPosition),e.writeZigZag(r.face),e.writeZigZag(r.slot),x.write(e,r.item),l.write(e,r.fromPosition),l.write(e,r.clickPosition),e.writeZigZag(r.networkBlockId),e.writeBool(r.initialTransaction)}};import{DataType as Xg}from"@serenityjs/raknet";var Zs=class Af extends Xg{static{s(this,"ItemUseOnEntityInventoryTransaction")}actorRuntimeId;type;slot;item;fromPosition;clickPosition;constructor(e,r,o,n,i,a){super(),this.actorRuntimeId=e,this.type=r,this.slot=o,this.item=n,this.fromPosition=i,this.clickPosition=a}static read(e){let r=e.readVarLong(),o=e.readVarInt(),n=e.readZigZag(),i=x.read(e),a=l.read(e),c=l.read(e);return new Af(r,o,n,i,a,c)}static write(e,r){e.writeVarLong(r.actorRuntimeId),e.writeVarInt(r.type),e.writeZigZag(r.slot),x.write(e,r.item),l.write(e,r.fromPosition),l.write(e,r.clickPosition)}};import{DataType as $g}from"@serenityjs/raknet";var Ts=class Gf extends $g{static{s(this,"ItemReleaseInventoryTransaction")}type;slot;item;headPosition;constructor(e,r,o,n){super(),this.type=e,this.slot=r,this.item=o,this.headPosition=n}static read(e){let r=e.readVarInt(),o=e.readZigZag(),n=x.read(e),i=l.read(e);return new Gf(r,o,n,i)}static write(e,r){e.writeVarInt(r.type),e.writeZigZag(r.slot),x.write(e,r.item),l.write(e,r.headPosition)}};var Zn=class Mi extends Lg{static{s(this,"InventoryTransaction")}type;actions;itemUse;itemUseOnEntity;itemRelease;constructor(e,r,o,n,i){super(),this.type=e,this.actions=r,this.itemUse=o??null,this.itemUseOnEntity=n??null,this.itemRelease=i??null}static read(e){let r=e.readVarInt(),o=e.readVarInt(),n=[];for(let i=0;i<o;i++){let a=Dr.read(e);n.push(a)}switch(r){default:throw new Error(`Unknown/not implemented inventory transaction type: ${r}`);case pt.NormalTransaction:case pt.InventoryMismatch:return new Mi(r,n);case pt.ItemUseTransaction:{let i=Mr.read(e);return new Mi(r,n,i)}case pt.ItemUseOnEntityTransaction:{let i=Zs.read(e);return new Mi(r,n,null,i)}case pt.ItemReleaseTransaction:{let i=Ts.read(e);return new Mi(r,n,null,null,i)}}}static write(e,r){e.writeVarInt(r.type),e.writeVarInt(r.actions.length);for(let o of r.actions)Dr.write(e,o);switch(r.type){default:throw new Error(`Unknown/not implemented inventory transaction type: ${r.type}`);case pt.NormalTransaction:case pt.InventoryMismatch:return;case pt.ItemUseTransaction:{Mr.write(e,r.itemUse);return}case pt.ItemUseOnEntityTransaction:{Zs.write(e,r.itemUseOnEntity);return}case pt.ItemReleaseTransaction:{Ts.write(e,r.itemRelease);return}}}};import{DataType as Eg}from"@serenityjs/raknet";var Kf=class extends Eg{static{s(this,"EnumValues")}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++)r.push(e.readVarString());return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeVarString(o)}};import{DataType as vg}from"@serenityjs/raknet";var Yf=class extends vg{static{s(this,"ChainedSubcommandValues")}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++)r.push(e.readVarString());return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeVarString(o)}};import{DataType as ty}from"@serenityjs/raknet";var Jf=class extends ty{static{s(this,"PostFixes")}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++)r.push(e.readVarString());return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeVarString(o)}};import{DataType as ey}from"@serenityjs/raknet";import{Endianness as Qf}from"@serenityjs/binarystream";var Xf=class $f extends ey{static{s(this,"ScoreEntry")}scoreboardId;objectiveName;score;identityType;actorUniqueId;customName;constructor(e,r,o,n,i,a){super(),this.scoreboardId=e,this.objectiveName=r,this.score=o,this.identityType=n,this.actorUniqueId=i,this.customName=a}static read(e,r,o){let n=[],i=e.readVarInt();for(let a=0;a<i;a++){let c=e.readVarLong(),d=e.readVarString(),u=e.readInt32(Qf.Little),w=null,b=null,I=null;if(o===ln.Change)switch(w=e.readByte(),w){case de.Player:case de.Entity:{b=e.readZigZong();break}case de.FakePlayer:{I=e.readVarString();break}}n.push(new $f(c,d,u,w,b,I))}return n}static write(e,r,o,n){e.writeVarInt(r.length);for(let i of r)if(e.writeVarLong(i.scoreboardId),e.writeVarString(i.objectiveName),e.writeInt32(i.score,Qf.Little),n===ln.Change)switch(e.writeByte(i.identityType),i.identityType){case de.Player:case de.Entity:{e.writeZigZong(i.actorUniqueId);break}case de.FakePlayer:{e.writeVarString(i.customName);break}}}};import{DataType as ry}from"@serenityjs/raknet";var Tn=class Lf extends ry{static{s(this,"ScoreboardIdentity")}scoreboardId;entityUniqueId;constructor(e,r){super(),this.scoreboardId=e,this.entityUniqueId=r}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readVarLong(),a=e.readVarLong();r.push(new Lf(i,a))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeVarLong(o.scoreboardId),e.writeVarLong(o.entityUniqueId)}};import{DataType as iy}from"@serenityjs/raknet";var Ef=class extends iy{static{s(this,"HudElementData")}element;constructor(e){super(),this.element=e}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readUint8();r.push(new this(i))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeUint8(o.element)}};import{Endianness as zn}from"@serenityjs/binarystream";import{DataType as oy}from"@serenityjs/raknet";var Fn=class extends oy{static{s(this,"BossEventAdd")}title;percent;darkenScreen;color;overlay;constructor(e,r,o,n,i){super(),this.title=e,this.percent=r,this.darkenScreen=o,this.color=n,this.overlay=i}static read(e,r,o){if(o===U.Add){let n=e.readVarString(),i=e.readFloat32(zn.Little),a=e.readInt16(zn.Little),c=e.readVarInt(),d=e.readVarInt();return new this(n,i,a,c,d)}else return null}static write(e,r,o,n){n===U.Add&&(e.writeVarString(r.title),e.writeFloat32(r.percent,zn.Little),e.writeInt16(r.darkenScreen,zn.Little),e.writeVarInt(r.color),e.writeVarInt(r.overlay))}};import{DataType as ny}from"@serenityjs/raknet";import{Endianness as Hn}from"@serenityjs/binarystream";var Wn=class extends ny{static{s(this,"BossEventUpdate")}playerUniqueId;percent;title;darkenScreen;color;overlay;constructor(e,r,o,n,i,a){super(),this.playerUniqueId=e,this.percent=r,this.title=o,this.darkenScreen=n,this.color=i,this.overlay=a}static read(e,r,o){switch(o){case U.Add:case U.Remove:return null;case U.PlayerAdded:case U.PlayerRemoved:{let n=e.readZigZong();return new this(n)}case U.UpdatePercent:{let n=e.readFloat32(Hn.Little);return new this(null,n)}case U.UpdateName:{let n=e.readVarString();return new this(null,null,n)}case U.UpdateProperties:{let n=e.readInt16(Hn.Little),i=e.readVarInt(),a=e.readVarInt();return new this(null,null,null,n,i,a)}case U.UpdateStyle:{let n=e.readVarInt(),i=e.readVarInt();return new this(null,null,null,null,n,i)}case U.Query:{let n=e.readZigZong();return new this(n)}}}static write(e,r,o,n){switch(n){case U.Add:case U.Remove:break;case U.PlayerAdded:case U.PlayerRemoved:{e.writeZigZong(r.playerUniqueId??BigInt(0));break}case U.UpdatePercent:{e.writeFloat32(r.percent??0,Hn.Little);break}case U.UpdateName:{e.writeVarString(r.title??"");break}case U.UpdateProperties:{e.writeInt16(r.darkenScreen??0,Hn.Little),e.writeVarInt(r.color??0),e.writeVarInt(r.overlay??0);break}case U.UpdateStyle:{e.writeVarInt(r.color??0),e.writeVarInt(r.overlay??0);break}case U.Query:{e.writeZigZong(r.playerUniqueId??BigInt(0));break}}}};import{DataType as ay}from"@serenityjs/raknet";var qn=class vf extends ay{static{s(this,"AnimateEntity")}actorRuntimeId;constructor(e){super(),this.actorRuntimeId=e}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readZigZong(),a=new vf(i);r.push(a)}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeZigZong(o.actorRuntimeId)}};import{DataType as sy}from"@serenityjs/raknet";var td=class ed extends sy{static{s(this,"Emotes")}uuid;constructor(e){super(),this.uuid=e}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readUuid();r.push(new ed(i))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeUuid(o.uuid)}};import{DataType as cy}from"@serenityjs/raknet";var rd=class id extends cy{static{s(this,"DeathParameters")}message;constructor(e){super(),this.message=e}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readVarString();r.push(new id(i))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeVarString(o.message)}};import{DataType as py}from"@serenityjs/raknet";var $2=class zs extends py{static{s(this,"Color")}alpha;red;green;blue;constructor(e,r,o,n){super(),this.alpha=e&255,this.red=r&255,this.green=o&255,this.blue=n&255}static mix(e,r){let o=Math.round((e.alpha+r.alpha)/2),n=Math.round((e.red+r.red)/2),i=Math.round((e.green+r.green)/2),a=Math.round((e.blue+r.blue)/2);return new zs(o,n,i,a)}toInt(){return this.alpha<<24|this.red<<16|this.green<<8|this.blue}static fromInt(e){let r=e>>24&255,o=e>>16&255,n=e>>8&255,i=e&255;return new zs(r,o,n,i)}static write(e,r){e.writeUint32(r.toInt())}};import{DataType as fy}from"@serenityjs/raknet";import{Endianness as An}from"@serenityjs/binarystream";import{CompoundTag as od}from"@serenityjs/nbt";var Mt=class nd extends fy{static{s(this,"DataItem")}identifier;type;value;constructor(e,r,o){super(),this.identifier=e,this.type=r,this.value=o}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readVarInt(),a=e.readVarInt(),c;switch(a){case N.Byte:{c=e.readInt8();break}case N.Short:{c=e.readInt16(An.Little);break}case N.Int:{c=e.readZigZag();break}case N.Float:{c=e.readFloat32(An.Little);break}case N.String:{c=e.readVarString();break}case N.CompoundTag:{c=od.read(e,!0);break}case N.BlockPos:{c=R.read(e);break}case N.Long:{c=e.readZigZong();break}case N.Vec3:{c=l.read(e);break}}r.push(new nd(i,a,c))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)switch(e.writeVarInt(o.identifier),e.writeVarInt(o.type),o.type){case N.Byte:{e.writeInt8(o.value);break}case N.Short:{e.writeInt16(o.value,An.Little);break}case N.Int:{e.writeZigZag(o.value);break}case N.Float:{e.writeFloat32(o.value,An.Little);break}case N.String:{e.writeVarString(o.value);break}case N.CompoundTag:{od.write(e,o.value);break}case N.BlockPos:{R.write(e,o.value);break}case N.Long:{e.writeZigZong(o.value);break}case N.Vec3:{l.write(e,o.value);break}}}};import{Endianness as ad}from"@serenityjs/binarystream";import{DataType as dy}from"@serenityjs/raknet";var mt=class sd extends dy{static{s(this,"PropertySyncData")}floats;ints;constructor(e,r){super(),this.floats=e,this.ints=r}static read(e){let r=[],o=e.readVarInt();for(let a=0;a<o;a++){let c=e.readVarInt(),d=e.readZigZag();r.push({index:c,value:d})}let n=[],i=e.readVarInt();for(let a=0;a<i;a++){let c=e.readVarInt(),d=e.readFloat32(ad.Little);n.push({index:c,value:d})}return new sd(n,r)}static write(e,r){e.writeVarInt(r.ints.length);for(let o of r.ints)e.writeVarInt(o.index),e.writeZigZag(o.value);e.writeVarInt(r.floats.length);for(let o of r.floats)e.writeVarInt(o.index),e.writeFloat32(o.value,ad.Little)}};import{DataType as ly}from"@serenityjs/raknet";var Gn=class cd extends ly{static{s(this,"BookActions")}pageIndex;pageIndexB;textA;textB;xuid;constructor(e,r,o,n,i){super(),this.pageIndex=e,this.textA=r,this.textB=o,this.xuid=n,this.pageIndexB=i}static read(e,r,o){let n=0,i=0,a="",c="",d="";switch(o){case ft.ReplacePage:case ft.AddPage:{n=e.readByte(),a=e.readVarString(),c=e.readVarString();break}case ft.DeletePage:{n=e.readByte();break}case ft.SwapPage:{n=e.readByte(),i=e.readByte();break}case ft.Finalize:a=e.readVarString(),c=e.readVarString(),d=e.readVarString()}return new cd(n,a,c,d,i)}static write(e,r,o,n){switch(n){case ft.ReplacePage:case ft.AddPage:{e.writeByte(r.pageIndex),e.writeVarString(r.textA),e.writeVarString(r.textB);break}case ft.DeletePage:{e.writeByte(r.pageIndex);break}case ft.SwapPage:{e.writeByte(r.pageIndex),e.writeByte(r.pageIndexB);break}case ft.Finalize:{e.writeVarString(r.textA),e.writeVarString(r.textB),e.writeVarString(r.xuid);break}}}};import{DataType as my}from"@serenityjs/raknet";import{Bool as uy,Float32 as hy,Float64 as gy,Uint32 as yy,Uint64 as wy,VarString as by,ZigZag as Py,ZigZong as Ry}from"@serenityjs/binarystream";var k=class pd extends my{static{s(this,"Optional")}static read(e,r,o,n){let i=e.readBool(),a=s(u=>u instanceof u,"isDataValue");if(!i)return;let c,d=n;if(d){if(a(d)){c=d.read(e,r,o);return}c=d.read(e,r,o)}return c}static write(e,r,o,n,i){let a=r!=null,c=s(u=>u instanceof u,"isDataValue");if(e.writeBool(a),!a)return;let d=i??pd.getType(r);if(d){if(c(d)){d.write(e,r,o,n);return}d.write(e,r,o)}}static getType(e){switch(typeof e){case"string":return by;case"number":return e%1!=0?hy:e<0?Py:yy;case"bigint":return e%1n!=0n?gy:e<0n?Ry:wy;case"boolean":return uy}}};import{DataType as xy}from"@serenityjs/raknet";import{Bool as Kn,Endianness as L,Float32 as E,Uint8 as fd}from"@serenityjs/binarystream";var dd=class ld extends xy{static{s(this,"CameraPreset")}name;parent;position;rotation;speed;snapToTarget;viewOffset;entityOffset;radius;listener;effects;constructor(e,r,o,n,i,a,c,d,u,w,b){super(),this.name=e,this.parent=r,this.position=o,this.rotation=n,this.speed=i,this.snapToTarget=a,this.viewOffset=c,this.entityOffset=d,this.radius=u,this.listener=w,this.effects=b}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++)r.push(new ld(e.readVarString(),e.readVarString(),new l(k.read(e,L.Little,void 0,E),k.read(e,L.Little,void 0,E),k.read(e,L.Little,void 0,E)),new M(k.read(e,L.Little,void 0,E),k.read(e,L.Little,void 0,E)),k.read(e,L.Little,void 0,E),k.read(e,void 0,void 0,Kn),k.read(e,void 0,void 0,M),k.read(e,void 0,void 0,l),k.read(e,L.Little,void 0,E),k.read(e,void 0,void 0,fd),k.read(e,void 0,void 0,Kn)));return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeVarString(o.name),e.writeVarString(o.parent),k.write(e,o.position?.x,L.Little,null,E),k.write(e,o.position?.y,L.Little,null,E),k.write(e,o.position?.z,L.Little,null,E),k.write(e,o.rotation?.x,L.Little,null,E),k.write(e,o.rotation?.y,L.Little,null,E),k.write(e,o.speed,L.Little,null,E),k.write(e,o.snapToTarget,void 0,null,Kn),k.write(e,o.viewOffset,void 0,null,M),k.write(e,o.entityOffset,void 0,null,l),k.write(e,o.radius,L.Little,null,E),k.write(e,o.listener,void 0,null,fd),k.write(e,o.effects,void 0,null,Kn)}};import{DataType as Sy}from"@serenityjs/raknet";import{Bool as Oy,Endianness as By}from"@serenityjs/binarystream";import{DataType as Iy}from"@serenityjs/raknet";import{Endianness as ky}from"@serenityjs/binarystream";var md=class extends Iy{static{s(this,"CameraSetEasing")}type;duration;constructor(e,r){super(),this.type=e,this.duration=r}static write(e,r){e.writeUint8(r.type),e.writeFloat32(r.duration,ky.Little)}};var ud=class extends Sy{static{s(this,"CameraSetInstruction")}runtimeId;easing;position;rotation;facing;constructor(e,r,o,n,i){super(),this.runtimeId=e,this.easing=r,this.position=o,this.rotation=n,this.facing=i}static write(e,r){e.writeInt32(r.runtimeId,By.Little),k.write(e,r.easing,void 0,null,md),k.write(e,r.position,void 0,null,l),k.write(e,r.rotation,void 0,null,M),k.write(e,r.facing,void 0,null,l),k.write(e,void 0,void 0,void 0,Oy)}};import{DataType as _y}from"@serenityjs/raknet";import{Bool as jy}from"@serenityjs/binarystream";import{DataType as Vy}from"@serenityjs/raknet";import{DataType as Cy}from"@serenityjs/raknet";import{Endianness as Fs}from"@serenityjs/binarystream";var hd=class extends Cy{static{s(this,"CameraFadeDuration")}fadeIn;hold;fadeOut;constructor(e,r,o){super(),this.fadeIn=e,this.hold=r,this.fadeOut=o}static write(e,r){e.writeFloat32(r.fadeIn,Fs.Little),e.writeFloat32(r.hold,Fs.Little),e.writeFloat32(r.fadeOut,Fs.Little)}};var gd=class extends Vy{static{s(this,"CameraFadeInstruction")}duration;color;constructor(e,r){super(),this.duration=e,this.color=r}static write(e,r){k.write(e,r.duration,void 0,null,hd),k.write(e,r.color,void 0,null,l)}};var Yn=class extends _y{static{s(this,"CameraInstructions")}Set;Clear;Fade;constructor(e,r,o){super(),this.Set=e,this.Clear=r,this.Fade=o}static write(e,r){k.write(e,r.Set,void 0,null,ud),k.write(e,r.Clear,void 0,null,jy),k.write(e,r.Fade,void 0,null,gd)}};import{DataType as Uy}from"@serenityjs/raknet";import{Endianness as Zr}from"@serenityjs/binarystream";var C=class extends Uy{static{s(this,"RecipeIngredient")}type;default;molang;itemTag;deferred;complexAlias;stackSize;constructor(e,r,o,n,i,a,c){super(),this.type=e,this.default=r,this.molang=o,this.itemTag=n,this.deferred=i,this.complexAlias=a,this.stackSize=c}static read(e){let r=e.readUint8(),o=null,n=null,i=null,a=null,c=null;switch(r){default:throw new Error(`Unknown ingredient type: ${r}, offset: ${e.offset}`);case X.Invalid:break;case X.Default:{let u=e.readInt16(Zr.Little),w=u===0?0:e.readInt16(Zr.Little);o={networkId:u,metadata:w};break}case X.Molang:{let u=e.readVarString(),w=e.readUint8();n={molang:u,version:w};break}case X.ItemTag:{i={tag:e.readVarString()};break}case X.Deferred:{let u=e.readVarString(),w=e.readInt16(Zr.Little);a={name:u,metadata:w};break}case X.ComplexAlias:{c={name:e.readVarString()};break}}let d=e.readZigZag();return new this(r,o,n,i,a,c,d)}static write(e,r){switch(e.writeUint8(r.type),r.type){default:throw new Error(`Unknown ingredient type: ${r.type}`);case X.Invalid:break;case X.Default:{let o=r.default;e.writeInt16(o.networkId,Zr.Little),o.networkId!==0&&e.writeInt16(o.metadata,Zr.Little);break}case X.Molang:{let o=r.molang;e.writeVarString(o.molang),e.writeUint8(o.version);break}case X.ItemTag:{let o=r.itemTag;e.writeVarString(o.tag);break}case X.Deferred:{let o=r.deferred;e.writeVarString(o.name),e.writeInt16(o.metadata,Zr.Little);break}case X.ComplexAlias:{let o=r.complexAlias;e.writeVarString(o.name);break}}e.writeZigZag(r.stackSize)}};import{DataType as Ny}from"@serenityjs/raknet";var Zt=class yd extends Ny{static{s(this,"RecipeUnlockingRequirement")}context;ingredients;constructor(e,r){super(),this.context=e,this.ingredients=r}static read(e){let r=e.readByte();if(r!==dn.None)return new yd(r,null);let o=[],n=e.readVarInt();for(let i=0;i<n;i++){let a=C.read(e);o.push(a)}return new this(r,o)}static write(e,r){if(e.writeByte(r.context),r.context===dn.None){let o=r.ingredients;e.writeVarInt(o.length);for(let n of o)C.write(e,n)}}};import{DataType as Wy}from"@serenityjs/raknet";import{DataType as Dy}from"@serenityjs/raknet";var Ke=class extends Dy{static{s(this,"ShapelessRecipe")}identifier;ingredients;resultants;uuid;tag;priority;requirement;recipeNetorkId;constructor(e,r,o,n,i,a,c,d){super(),this.identifier=e,this.ingredients=r,this.resultants=o,this.uuid=n,this.tag=i,this.priority=a,this.requirement=c,this.recipeNetorkId=d}static read(e){let r=e.readVarString(),o=e.readVarInt(),n=[];for(let I=0;I<o;I++){let B=C.read(e);n.push(B)}let i=e.readVarInt(),a=[];for(let I=0;I<i;I++){let B=_.read(e);a.push(B)}let c=e.readUuid(),d=e.readVarString(),u=e.readZigZag(),w=Zt.read(e),b=e.readVarInt();return new this(r,n,a,c,d,u,w,b)}static write(e,r){e.writeVarString(r.identifier);let o=r.ingredients;e.writeVarInt(o.length);for(let i of o)C.write(e,i);let n=r.resultants;e.writeVarInt(n.length);for(let i of n)_.write(e,i);e.writeUuid(r.uuid),e.writeVarString(r.tag),e.writeZigZag(r.priority),Zt.write(e,r.requirement),e.writeVarInt(r.recipeNetorkId)}};import{DataType as My}from"@serenityjs/raknet";var Hs=class extends My{static{s(this,"SmithingTransformRecipe")}identifier;templateIngredient;baseIngredient;additionalIngredient;resultant;tag;recipeNetworkId;constructor(e,r,o,n,i,a,c){super(),this.identifier=e,this.templateIngredient=r,this.baseIngredient=o,this.additionalIngredient=n,this.resultant=i,this.tag=a,this.recipeNetworkId=c}static read(e){let r=e.readVarString(),o=C.read(e),n=C.read(e),i=C.read(e),a=_.read(e),c=e.readVarString(),d=e.readVarInt();return new this(r,o,n,i,a,c,d)}static write(e,r){e.writeVarString(r.identifier),C.write(e,r.templateIngredient),C.write(e,r.baseIngredient),C.write(e,r.additionalIngredient),_.write(e,r.resultant),e.writeVarString(r.tag),e.writeVarInt(r.recipeNetworkId)}};import{DataType as Zy}from"@serenityjs/raknet";var Ws=class extends Zy{static{s(this,"MultiRecipe")}uuid;networkId;constructor(e,r){super(),this.uuid=e,this.networkId=r}static read(e){let r=e.readUuid(),o=e.readVarInt();return new this(r,o)}static write(e,r){e.writeUuid(r.uuid),e.writeVarInt(r.networkId)}};import{DataType as Ty}from"@serenityjs/raknet";var qs=class extends Ty{static{s(this,"FurnanceAuxRecipe")}data;metadata;resultant;tag;constructor(e,r,o,n){super(),this.data=e,this.metadata=r,this.resultant=o,this.tag=n}static read(e){let r=e.readZigZag(),o=e.readZigZag(),n=_.read(e),i=e.readVarString();return new this(r,o,n,i)}static write(e,r){e.writeZigZag(r.data),e.writeZigZag(r.metadata),_.write(e,r.resultant),e.writeVarString(r.tag)}};import{DataType as zy}from"@serenityjs/raknet";var As=class wd extends zy{static{s(this,"FurnanceRecipe")}data;resultant;tag;constructor(e,r,o){super(),this.data=e,this.resultant=r,this.tag=o}static read(e){let r=e.readZigZag(),o=_.read(e),n=e.readVarString();return new wd(r,o,n)}static write(e,r){e.writeZigZag(r.data),_.write(e,r.resultant),e.writeVarString(r.tag)}};import{DataType as Fy}from"@serenityjs/raknet";var Zi=class extends Fy{static{s(this,"ShapedRecipe")}identifier;width;height;ingredients;resultants;uuid;tag;priority;symmetrical;requirement;recipeNetorkId;constructor(e,r,o,n,i,a,c,d,u,w,b){super(),this.identifier=e,this.width=r,this.height=o,this.ingredients=n,this.resultants=i,this.uuid=a,this.tag=c,this.priority=d,this.symmetrical=u,this.requirement=w,this.recipeNetorkId=b}static read(e){let r=e.readVarString(),o=e.readZigZag(),n=e.readZigZag(),i=[];for(let S=0;S<o*n;S++){let z=C.read(e);i.push(z)}let a=[],c=e.readVarInt();for(let S=0;S<c;S++){let z=_.read(e);a.push(z)}let d=e.readUuid(),u=e.readVarString(),w=e.readZigZag(),b=e.readBool(),I=Zt.read(e),B=e.readVarInt();return new this(r,o,n,i,a,d,u,w,b,I,B)}static write(e,r){e.writeVarString(r.identifier),e.writeZigZag(r.width),e.writeZigZag(r.height);for(let o of r.ingredients)C.write(e,o);e.writeVarInt(r.resultants.length);for(let o of r.resultants)_.write(e,o);e.writeUuid(r.uuid),e.writeVarString(r.tag),e.writeZigZag(r.priority),e.writeBool(r.symmetrical),Zt.write(e,r.requirement),e.writeVarInt(r.recipeNetorkId)}};import{DataType as Hy}from"@serenityjs/raknet";var Gs=class extends Hy{static{s(this,"SmithingTrimRecipe")}identifier;templateIngredient;baseIngredient;additionalIngredient;tag;recipeNetworkId;constructor(e,r,o,n,i,a){super(),this.identifier=e,this.templateIngredient=r,this.baseIngredient=o,this.additionalIngredient=n,this.tag=i,this.recipeNetworkId=a}static read(e){let r=e.readVarString(),o=C.read(e),n=C.read(e),i=C.read(e),a=e.readVarString(),c=e.readVarInt();return new this(r,o,n,i,a,c)}static write(e,r){e.writeVarString(r.identifier),C.write(e,r.templateIngredient),C.write(e,r.baseIngredient),C.write(e,r.additionalIngredient),e.writeVarString(r.tag),e.writeVarInt(r.recipeNetworkId)}};var bd=class extends Wy{static{s(this,"CraftingDataEntry")}type;shapeless;shaped;furnace;furnaceAux;multi;userDataShapeless;shapelessChemistry;shapedChemistry;smithingTransform;smithingTrim;constructor(e,r,o,n,i,a,c,d,u,w,b){super(),this.type=e,this.shapeless=r,this.shaped=o,this.furnace=n,this.furnaceAux=i,this.multi=a,this.userDataShapeless=c,this.shapelessChemistry=d,this.shapedChemistry=u,this.smithingTransform=w,this.smithingTrim=b}static read(e){let r=e.readVarInt(),o=[];for(let n=0;n<r;n++){let i=e.readZigZag(),a=null,c=null,d=null,u=null,w=null,b=null,I=null,B=null,S=null,z=null;switch(i){default:throw new Error(`Unknown crafting data entry type: ${i}, index: ${n}, offset: ${e.offset}`);case D.ShapelessRecipe:{a=Ke.read(e);break}case D.ShapedRecipe:{c=Zi.read(e);break}case D.FurnaceRecipe:{d=As.read(e);break}case D.FurnaceAuxRecipe:{u=qs.read(e);break}case D.MultiRecipe:{w=Ws.read(e);break}case D.UserDataShapelessRecipe:{b=Ke.read(e);break}case D.ShapelessChemistryRecipe:{I=Ke.read(e);break}case D.ShapedChemistryRecipe:{B=Zi.read(e);break}case D.SmithingTransformRecipe:{S=Hs.read(e);break}case D.SmithingTrimRecipe:{z=Gs.read(e);break}}let ct=new this(i,a,c,d,u,w,b,I,B,S,z);o.push(ct)}return o}static write(e,r){e.writeVarInt(r.length);for(let o of r)switch(e.writeZigZag(o.type),o.type){default:throw new Error(`Unknown crafting data entry type: ${o.type}`);case D.ShapelessRecipe:{Ke.write(e,o.shapeless);break}case D.ShapedRecipe:{Zi.write(e,o.shaped);break}case D.FurnaceRecipe:{As.write(e,o.furnace);break}case D.FurnaceAuxRecipe:{qs.write(e,o.furnaceAux);break}case D.MultiRecipe:{Ws.write(e,o.multi);break}case D.UserDataShapelessRecipe:{Ke.write(e,o.userDataShapeless);break}case D.ShapelessChemistryRecipe:{Ke.write(e,o.shapelessChemistry);break}case D.ShapedChemistryRecipe:{Zi.write(e,o.shapedChemistry);break}case D.SmithingTransformRecipe:{Hs.write(e,o.smithingTransform);break}case D.SmithingTrimRecipe:{Gs.write(e,o.smithingTrim);break}}}};import{DataType as qy}from"@serenityjs/raknet";var Pd=class extends qy{static{s(this,"PotionMixDataEntry")}inputNetworkId;inputMetadata;ingredientNetworkId;ingredientMetadata;resultantNetworkId;resultantMetadata;constructor(e,r,o,n,i,a){super(),this.inputNetworkId=e,this.inputMetadata=r,this.ingredientNetworkId=o,this.ingredientMetadata=n,this.resultantNetworkId=i,this.resultantMetadata=a}static read(e){let r=e.readVarInt(),o=[];for(let n=0;n<r;n++){let i=e.readZigZag(),a=e.readZigZag(),c=e.readZigZag(),d=e.readZigZag(),u=e.readZigZag(),w=e.readZigZag();o.push(new this(i,a,c,d,u,w))}return o}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeZigZag(o.inputNetworkId),e.writeZigZag(o.inputMetadata),e.writeZigZag(o.ingredientNetworkId),e.writeZigZag(o.ingredientMetadata),e.writeZigZag(o.resultantNetworkId),e.writeZigZag(o.resultantMetadata)}};import{DataType as Ay}from"@serenityjs/raknet";var Rd=class extends Ay{static{s(this,"ContainerMixDataEntry")}inputNetworkId;reactantNetworkId;resultantNetworkId;constructor(e,r,o){super(),this.inputNetworkId=e,this.reactantNetworkId=r,this.resultantNetworkId=o}static read(e){let r=new Array,o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readZigZag(),a=e.readZigZag(),c=e.readZigZag(),d=new this(i,a,c);r.push(d)}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeZigZag(o.inputNetworkId),e.writeZigZag(o.reactantNetworkId),e.writeZigZag(o.resultantNetworkId)}};import{DataType as Gy}from"@serenityjs/raknet";var xd=class extends Gy{static{s(this,"MaterialReducerDataEntry")}inputNetworkId;resultantNetworkId;resultantStackSize;constructor(e,r,o){super(),this.inputNetworkId=e,this.resultantNetworkId=r,this.resultantStackSize=o}static read(e){let r=new Array,o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readZigZag(),a=e.readZigZag(),c=e.readZigZag(),d=new this(i,a,c);r.push(d)}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeZigZag(o.inputNetworkId),e.writeZigZag(o.resultantNetworkId),e.writeZigZag(o.resultantStackSize)}};import{DataType as Ky}from"@serenityjs/raknet";var VN=class extends Ky{static{s(this,"UserDataShapelessRecipe")}identifier;ingredients;resultants;uuid;tag;priority;requirement;constructor(e,r,o,n,i,a,c){super(),this.identifier=e,this.ingredients=r,this.resultants=o,this.uuid=n,this.tag=i,this.priority=a,this.requirement=c}static read(e){let r=e.readVarString(),o=e.readVarInt(),n=[];for(let b=0;b<o;b++){let I=C.read(e);n.push(I)}let i=e.readVarInt(),a=[];for(let b=0;b<i;b++){let I=_.read(e);a.push(I)}let c=e.readUuid(),d=e.readVarString(),u=e.readZigZag(),w=Zt.read(e);return new this(r,n,a,c,d,u,w)}static write(e,r){e.writeVarString(r.identifier);let o=r.ingredients;e.writeVarInt(o.length);for(let i of o)C.write(e,i);let n=r.resultants;e.writeVarInt(n.length);for(let i of n)_.write(e,i);e.writeUuid(r.uuid),e.writeVarString(r.tag),e.writeZigZag(r.priority),Zt.write(e,r.requirement)}};import{DataType as Jy}from"@serenityjs/raknet";import{DataType as Yy}from"@serenityjs/raknet";var Ks=class Id extends Yy{static{s(this,"StructureSettings")}structurePalletName;ignoreEntities;ignoreBlocks;allowNonTicking;size;offset;lastEdit;rotation;mirror;animationMode;animationSeconds;integrityValue;integritySeed;rotationPivot;constructor(e,r,o,n,i,a,c,d,u,w,b,I,B,S){super(),this.structurePalletName=e,this.ignoreEntities=r,this.ignoreBlocks=o,this.allowNonTicking=n,this.size=i,this.offset=a,this.lastEdit=c,this.rotation=d,this.mirror=u,this.animationMode=w,this.animationSeconds=b,this.integrityValue=I,this.integritySeed=B,this.rotationPivot=S}static write(e,r){e.writeVarString(r.structurePalletName),e.writeBool(r.ignoreBlocks),e.writeBool(r.ignoreEntities),e.writeBool(r.allowNonTicking),R.write(e,r.size),R.write(e,r.offset),e.writeZigZong(r.lastEdit),e.writeByte(r.animationMode),e.writeFloat32(r.animationSeconds),e.writeFloat32(r.integrityValue),e.writeUint32(r.integritySeed),l.write(e,r.rotationPivot)}static read(e){return new Id(e.readVarString(),e.readBool(),e.readBool(),e.readBool(),R.read(e),R.read(e),e.readZigZong(),e.readByte(),e.readByte(),e.readByte(),e.readFloat32(),e.readFloat32(),e.readUint32(),l.read(e))}};var Jn=class kd extends Jy{static{s(this,"StructureEditorData")}structureName;dataField;includePlayers;showBoundingBox;blockType;structureSetting;redstoneSaveMode;constructor(e,r,o,n,i,a,c){super(),this.structureName=e,this.dataField=r,this.includePlayers=o,this.showBoundingBox=n,this.blockType=i,this.structureSetting=a,this.redstoneSaveMode=c}static write(e,r){e.writeVarString(r.structureName),e.writeVarString(r.dataField),e.writeBool(r.includePlayers),e.writeBool(r.showBoundingBox),e.writeVarInt(r.blockType),Ks.write(e,r.structureSetting),e.writeVarInt(r.redstoneSaveMode)}static read(e){return new kd(e.readVarString(),e.readVarString(),e.readBool(),e.readBool(),e.readVarInt(),Ks.read(e),e.readVarInt())}};import{DataType as Xy}from"@serenityjs/raknet";import{DataType as Qy}from"@serenityjs/raknet";var Ys=class Sd extends Qy{static{s(this,"DimensionDefinition")}identifier;heightMax;heightMin;generatorType;constructor(e,r,o,n){super(),this.identifier=e,this.heightMax=r,this.heightMin=o,this.generatorType=n}static write(e,r){e.writeVarString(r.identifier),e.writeVarInt(r.heightMax),e.writeVarInt(r.heightMin),e.writeVarInt(r.generatorType)}static read(e){return new Sd(e.readVarString(),e.readVarInt(),e.readVarInt(),e.readVarInt())}};var Qn=class Od extends Xy{static{s(this,"DimensionDefinitionGroup")}definitions;constructor(e){super(),this.definitions=e}static write(e,r){e.writeVarInt(r.definitions.length);for(let o of r.definitions)Ys.write(e,o)}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++)r.push(Ys.read(e));return new Od(r)}};import{DataType as $y}from"@serenityjs/raknet";var Bd=class extends $y{static{s(this,"ItemStackActionTakePlace")}amount;source;destination;constructor(e,r,o){super(),this.amount=e,this.source=r,this.destination=o}static read(e){let r=e.readUint8(),o=G.read(e),n=G.read(e);return new this(r,o,n)}static write(e,r){e.writeUint8(r.amount),G.write(e,r.source),G.write(e,r.destination)}};import{DataType as Ly}from"@serenityjs/raknet";var Cd=class extends Ly{static{s(this,"ItemStackRequestActionSwap")}source;destination;constructor(e,r){super(),this.source=e,this.destination=r}static read(e){let r=G.read(e),o=G.read(e);return new this(r,o)}static write(e,r){G.write(e,r.source),G.write(e,r.destination)}};import{DataType as Ey}from"@serenityjs/raknet";var Vd=class extends Ey{static{s(this,"ItemStackRequestActionDrop")}amount;source;randomly;constructor(e,r,o){super(),this.amount=e,this.source=r,this.randomly=o}static read(e){let r=e.readUint8(),o=G.read(e),n=e.readBool();return new this(r,o,n)}static write(e,r){e.writeUint8(r.amount),G.write(e,r.source),e.writeBool(r.randomly)}};import{DataType as vy}from"@serenityjs/raknet";var _d=class extends vy{static{s(this,"ItemStackRequestActionDestroyConsume")}amount;source;constructor(e,r){super(),this.amount=e,this.source=r}static read(e){let r=e.readUint8(),o=G.read(e);return new this(r,o)}static write(e,r){e.writeUint8(r.amount),G.write(e,r.source)}};import{DataType as tw}from"@serenityjs/raknet";var jd=class extends tw{static{s(this,"ItemStackRequestActionCreate")}slot;constructor(e){super(),this.slot=e}static read(e){let r=e.readUint8();return new this(r)}static write(e,r){e.writeUint8(r.slot)}};import{DataType as ew}from"@serenityjs/raknet";var Ud=class extends ew{static{s(this,"ItemStackRequestActionBeanconPayment")}primaryEffect;secondaryEffect;constructor(e,r){super(),this.primaryEffect=e,this.secondaryEffect=r}static read(e){let r=e.readZigZag(),o=e.readZigZag();return new this(r,o)}static write(e,r){e.writeZigZag(r.primaryEffect),e.writeZigZag(r.secondaryEffect)}};import{DataType as rw}from"@serenityjs/raknet";var Nd=class extends rw{static{s(this,"ItemStackRequestActionMineBlock")}slot;predictedDurability;networkId;constructor(e,r,o){super(),this.slot=e,this.predictedDurability=r,this.networkId=o}static read(e){let r=e.readZigZag(),o=e.readZigZag(),n=e.readZigZag();return new this(r,o,n)}static write(e,r){e.writeZigZag(r.slot),e.writeZigZag(r.predictedDurability),e.writeZigZag(r.networkId)}};import{DataType as iw}from"@serenityjs/raknet";var Dd=class extends iw{static{s(this,"ItemStackRequestActionCraftRecipe")}recipeId;amount;constructor(e,r){super(),this.recipeId=e,this.amount=r}static read(e){let r=e.readVarInt(),o=e.readUint8();return new this(r,o)}static write(e,r){e.writeVarInt(r.recipeId),e.writeUint8(r.amount)}};import{DataType as ow}from"@serenityjs/raknet";var Md=class extends ow{static{s(this,"ItemStackRequestActionCraftRecipeAuto")}recipeId;timesCrafted;ingredients;constructor(e,r,o){super(),this.recipeId=e,this.timesCrafted=r,this.ingredients=o}static read(e){let r=e.readVarInt(),o=e.readUint8(),n=e.readVarInt(),i=[];for(let a=0;a<n;a++)i[a]=C.read(e);return new this(r,o,i)}static write(e,r){e.writeVarInt(r.recipeId),e.writeUint8(r.timesCrafted),e.writeVarInt(r.ingredients.length);for(let o of r.ingredients)C.write(e,o)}};import{DataType as nw}from"@serenityjs/raknet";var Zd=class extends nw{static{s(this,"ItemStackRequestActionCraftCreative")}creativeIndex;amount;constructor(e,r){super(),this.creativeIndex=e,this.amount=r}static read(e){let r=e.readVarInt(),o=e.readUint8();return new this(r,o)}static write(e,r){e.writeVarInt(r.creativeIndex),e.writeUint8(r.amount)}};import{DataType as aw}from"@serenityjs/raknet";import{Endianness as Td}from"@serenityjs/binarystream";var zd=class extends aw{static{s(this,"ItemStackRequestActionOptional")}recipeId;filteredStringIndex;constructor(e,r){super(),this.recipeId=e,this.filteredStringIndex=r}static read(e){let r=e.readVarInt(),o=e.readUint32(Td.Little);return new this(r,o)}static write(e,r){e.writeVarInt(r.recipeId),e.writeUint32(r.filteredStringIndex,Td.Little)}};import{DataType as sw}from"@serenityjs/raknet";var YD=class extends sw{static{s(this,"ItemStackRequestActionCraftGrindstoneRequest")}recipeId;cost;amount;constructor(e,r,o){super(),this.recipeId=e,this.cost=r,this.amount=o}static read(e){let r=e.readVarInt(),o=e.readVarInt(),n=e.readUint8();return new this(r,o,n)}static write(e,r){e.writeVarInt(r.recipeId),e.writeVarInt(r.cost),e.writeUint8(r.amount)}};import{DataType as cw}from"@serenityjs/raknet";var LD=class extends cw{static{s(this,"ItemStackRequestActionCraftLoomRequest")}pattern;constructor(e){super(),this.pattern=e}static read(e){let r=e.readVarString();return new this(r)}static write(e,r){e.writeVarString(r.pattern)}};import{DataType as pw}from"@serenityjs/raknet";var Fd=class extends pw{static{s(this,"ItemStackRequestActionResultsDeprecated")}resultants;amount;constructor(e,r){super(),this.resultants=e,this.amount=r}static read(e){let r=e.readVarInt(),o=[];for(let i=0;i<r;i++)o[i]=_.read(e);let n=e.readUint8();return new this(o,n)}static write(e,r){e.writeVarInt(r.resultants.length);for(let o of r.resultants)_.write(e,o);e.writeUint8(r.amount)}};import{DataType as fw}from"@serenityjs/raknet";var Tr=class extends fw{static{s(this,"ItemStackRequestAction")}action;takeOrPlace;swap;drop;destroyOrConsume;create;beaconPayment;mineBlock;craftRecipe;craftRecipeAuto;craftCreative;optional;craftGrindstoneRequest;craftLoomRequest;resultsDeprecated;constructor(e,r,o,n,i,a,c,d,u,w,b,I,B,S,z){super(),this.action=e,this.takeOrPlace=r??null,this.swap=o??null,this.drop=n??null,this.destroyOrConsume=i??null,this.create=a??null,this.beaconPayment=c??null,this.mineBlock=d??null,this.craftRecipe=u??null,this.craftRecipeAuto=w??null,this.craftCreative=b??null,this.optional=I??null,this.craftGrindstoneRequest=B??null,this.craftLoomRequest=S??null,this.resultsDeprecated=z??null}static read(e){let r=e.readUint8();switch(r){default:return new this(r);case W.Take:case W.Place:case W.TakeFromItemContainer_DEPRECATED:case W.PlaceInItemContainer_DEPRECATED:return new this(r,Bd.read(e));case W.Swap:return new this(r,null,Cd.read(e));case W.Drop:return new this(r,null,null,Vd.read(e));case W.Destroy:case W.Consume:return new this(r,null,null,null,_d.read(e));case W.Create:return new this(r,null,null,null,null,jd.read(e));case W.ScreenBeaconPayment:return new this(r,null,null,null,null,null,Ud.read(e));case W.ScreenHUDMineBlock:return new this(r,null,null,null,null,null,null,Nd.read(e));case W.CraftRecipe:return new this(r,null,null,null,null,null,null,null,Dd.read(e));case W.CraftRecipeAuto:return new this(r,null,null,null,null,null,null,null,null,Md.read(e));case W.CraftCreative:return new this(r,null,null,null,null,null,null,null,null,null,Zd.read(e));case W.CraftRecipeOptional:return new this(r,null,null,null,null,null,null,null,null,null,null,zd.read(e));case W.CraftResults_DEPRECATEDASKTYLAING:return new this(r,null,null,null,null,null,null,null,null,null,null,null,null,null,Fd.read(e))}}};import{DataType as dw}from"@serenityjs/raknet";import{Endianness as Hd}from"@serenityjs/binarystream";var Wd=class qd extends dw{static{s(this,"ItemStackRequest")}clientRequestId;actions;filterStrings;stringsFilterOrigin;constructor(e,r,o,n){super(),this.clientRequestId=e,this.actions=r,this.filterStrings=o,this.stringsFilterOrigin=n}static read(e){let r=new Array,o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readZigZag(),a=new Array,c=e.readVarInt();for(let b=0;b<c;b++)a.push(Tr.read(e));let d=new Array,u=e.readVarInt();for(let b=0;b<u;b++)d.push(e.readVarString());let w=e.readInt32(Hd.Little);r.push(new qd(i,a,d,w))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r){e.writeZigZag(o.clientRequestId),e.writeVarInt(o.actions.length);for(let n of o.actions)Tr.write(e,n);e.writeVarInt(o.filterStrings.length);for(let n of o.filterStrings)e.writeVarString(n);e.writeInt32(o.stringsFilterOrigin,Hd.Little)}}};import{DataType as lw}from"@serenityjs/raknet";var Xn=class Ad extends lw{static{s(this,"DisconnectMessage")}message;filtered;constructor(e,r){super(),this.message=e??null,this.filtered=r??null}static read(e,r,o){if(o)return new Ad;let n=e.readVarString(),i=e.readVarString();return new this(n,i)}static write(e,r,o,n){n||(e.writeVarString(r.message??"Disconnected from server."),e.writeVarString(r.filtered??"Disconnected from server."))}};import{DataType as uw}from"@serenityjs/raknet";import{Endianness as Kd}from"@serenityjs/binarystream";import{DataType as mw}from"@serenityjs/raknet";var Ye=class Gd extends mw{static{s(this,"Enchant")}id;level;constructor(e,r){super(),this.id=e,this.level=r}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readByte(),a=e.readByte();r.push(new Gd(i,a))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeByte(o.id),e.writeByte(o.level)}};var Yd=class Jd extends uw{static{s(this,"EnchantOption")}cost;slotFlags;equipEnchantments;heldEnchantments;selfEnchantments;name;optionId;constructor(e,r,o,n,i,a,c){super(),this.cost=e,this.slotFlags=r,this.equipEnchantments=o,this.heldEnchantments=n,this.selfEnchantments=i,this.name=a,this.optionId=c}static read(e){let r=[],o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readVarInt(),a=e.readInt32(Kd.Little),c=Ye.read(e),d=Ye.read(e),u=Ye.read(e),w=e.readVarString(),b=e.readUint32();r.push(new Jd(i,a,c,d,u,w,b))}return r}static write(e,r){e.writeVarInt(r.length);for(let o of r)e.writeVarInt(o.cost),e.writeInt32(o.slotFlags,Kd.Little),Ye.write(e,o.equipEnchantments),Ye.write(e,o.heldEnchantments),Ye.write(e,o.selfEnchantments),e.writeVarString(o.name),e.writeUint32(o.optionId)}};import{DataType as hw}from"@serenityjs/raknet";import{CompoundTag as Js,FloatTag as zr,ListTag as Qd,StringTag as Xd,Tag as $d}from"@serenityjs/nbt";var A4=class Ld extends hw{static{s(this,"ActorData")}identifier;position;rotation;extra;constructor(e,r,o,n){super(),this.identifier=e,this.position=r,this.rotation=o,this.extra=n}static read(e){let r=Js.read(e),o=r.value.identifier.value,[n,i,a]=r.value.Pos.value,c=new l(n?.value??0,i?.value??0,a?.value??0),[d,u,w]=r.value.Rotation.value,b=new Nr(d?.value??0,u?.value??0,w?.value??0),I=r.value.SerenityInternal?.value??"";return new Ld(o,c,b,Buffer.from(I,"base64"))}static write(e,r){let o=new Js;o.value.identifier=new Xd("identifier",r.identifier),o.value.Pos=new Qd("Pos",[new zr("",r.position.x),new zr("",r.position.y),new zr("",r.position.z)],$d.Float),o.value.Rotation=new Qd("Rotation",[new zr("",r.rotation.yaw),new zr("",r.rotation.pitch),new zr("",r.rotation.headYaw)],$d.Float),o.value.SerenityInternal=new Xd("SerenityInternal",r.extra?.toString("base64")??""),Js.write(e,o)}};import{DataType as gw}from"@serenityjs/raknet";var Ed=class vd extends gw{static{s(this,"ClientPredictedVehicle")}vehicleRotation;actorUniqueId;constructor(e,r){super(),this.vehicleRotation=e,this.actorUniqueId=r}static read(e,r,o){if(!o.hasFlag(dt.IsInClientPredictedVehicle))return null;let n=M.read(e),i=e.readZigZag();return new vd(n,i)}static write(e,r,o,n){n.hasFlag(dt.IsInClientPredictedVehicle)&&(M.write(e,r.vehicleRotation),e.writeZigZag(r.actorUniqueId))}};import{DataType as yw}from"@serenityjs/raknet";var eM=class extends yw{static{s(this,"InputTransaction")}legacyTransaction;actions;trasactionUseItem;constructor(e,r,o){super(),this.legacyTransaction=e,this.actions=r,this.trasactionUseItem=o}static write(e,r){Ge.write(e,r.legacyTransaction),e.writeVarInt(r.actions.length);for(let o of r.actions)Dr.write(e,o);Mr.write(e,r.trasactionUseItem)}static read(e){let r=Ge.read(e),o=e.readVarInt(),n=[];for(let a=0;a<o;a++){let c=Dr.read(e);n.push(c)}let i=Mr.read(e);return new this(r,n,i)}};import{DataType as ww}from"@serenityjs/raknet";var Fr=class extends ww{static{s(this,"PlayerAuthInputData")}flags;constructor(e){super(),this.flags=e}setFlag(e,r){let o=1n<<BigInt(e);r?this.flags|=o:this.flags&=~o}hasFlag(e){let r=1n<<BigInt(e);return(this.flags&r)!==0n}getFlags(){let e=[],r=Object.values(dt).filter(o=>typeof o=="number");for(let o of r)this.hasFlag(o)&&e.push(o);return e}static write(e,r){e.writeVarLong(r.flags)}static read(e){let r=e.readVarLong();return new this(r)}};import{DataType as bw}from"@serenityjs/raknet";var lM=class tl extends bw{static{s(this,"BlockAction")}action;position;face;constructor(e,r,o){super(),this.action=e,this.position=r,this.face=o}static write(e,r){if(e.writeZigZag(r.action),r.action==He.StartDestroyBlock||r.action==He.AbortDestroyBlock||r.action==He.CrackBlock||r.action==He.PredictDestroyBlock||r.action==He.ContinueDestroyBlock){if(r.position===void 0||r.position===null)throw new Error("Position is not defined but action is startBreak or abortBreak or crackBreak or predictBreak or continueBreak");if(r.face===void 0||r.face===null)throw new Error("Face is not defined but action is startBreak or abortBreak or crackBreak or predictBreak or continueBreak");e.writeZigZag(r.position.x),e.writeZigZag(r.position.y),e.writeZigZag(r.position.z),e.writeZigZag(r.face)}else e.writeVarInt(0),e.writeZigZag(0),e.writeZigZag(0),e.writeZigZag(0)}static read(e){let r=e.readZigZag(),o=new l(e.readZigZag(),e.readZigZag(),e.readZigZag()),n=e.readZigZag();return new tl(r,o,n)}};import{DataType as Pw}from"@serenityjs/raknet";var $n=class el extends Pw{static{s(this,"ActorLink")}riddenEntityUnique;riderEntityUnique;type;immediate;riderInitiated;vehicleAngularVelocity;constructor(e,r,o,n,i,a){super(),this.riddenEntityUnique=e,this.riderEntityUnique=r,this.type=o,this.immediate=n,this.riderInitiated=i,this.vehicleAngularVelocity=a}static write(e,r){e.writeVarLong(r.riddenEntityUnique),e.writeVarLong(r.riderEntityUnique),e.writeByte(r.type),e.writeBool(r.immediate),e.writeBool(r.riderInitiated),e.writeFloat32(r.vehicleAngularVelocity)}static read(e){return new el(e.readVarLong(),e.readVarLong(),e.readByte(),e.readBool(),e.readBool(),e.readFloat32())}};var Qs=class extends R{static{s(this,"SignedBlockPosition")}static read(e){let r=e.readZigZag(),o=e.readZigZag(),n=e.readZigZag();return new this(r,o,n)}static write(e,r){e.writeZigZag(r.x),e.writeZigZag(r.y),e.writeZigZag(r.z)}};import{DataType as xw}from"@serenityjs/raknet";import{DataType as Rw}from"@serenityjs/raknet";var Xs=class extends Rw{static{s(this,"PlayerBlockActionData")}type;position;face;constructor(e,r,o){super(),this.type=e,this.position=r,this.face=o}static read(e){let r=e.readZigZag(),o=Qs.read(e),n=e.readZigZag();return new this(r,o,n)}static write(e,r){e.writeZigZag(r.type),Qs.write(e,r.position),e.writeZigZag(r.face)}};var rl=class extends xw{static{s(this,"PlayerBlockActions")}actions;constructor(e){super(),this.actions=e}static read(e,r,o){if(!o.hasFlag(dt.PerformBlockActions))return null;let n=e.readZigZag(),i=[];for(let a=0;a<n;a++)i.push(Xs.read(e));return new this(i)}static write(e,r,o,n){if(n.hasFlag(dt.PerformBlockActions)){e.writeZigZag(r.actions.length);for(let i of r.actions)Xs.write(e,i)}}};import{DataType as Iw}from"@serenityjs/raknet";var ut=class extends Iw{static{s(this,"PlayerInputTick")}static read(e){return e.readVarLong()}static write(e,r){e.writeVarLong(r)}};import{DataType as kw}from"@serenityjs/raknet";var Ln=class extends kw{static{s(this,"RotationByte")}static read(e){return e.readInt8()*(360/256)}static write(e,r){e.writeInt8(r/(360/256))}};import{DataType as Sw}from"@serenityjs/raknet";var En=class il extends Sw{static{s(this,"Fogs")}fogs;constructor(e=[]){super(),this.fogs=e}static read(e){let r=new il,o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readVarString();r.fogs.push(i)}return r}static write(e,r){e.writeVarInt(r.fogs.length);for(let o of r.fogs)e.writeVarString(o)}};import{BinaryStream as ol}from"@serenityjs/binarystream";import{DataType as Ow}from"@serenityjs/raknet";import{CompoundTag as nl}from"@serenityjs/nbt";var vn=class al extends Ow{static{s(this,"NbtLoop")}data;constructor(e){super(),this.data=e}static read(e){try{let r=e.readRemainingBuffer(),o=new ol(Buffer.concat([Buffer.from([10,0]),r,Buffer.from([0])])),n=nl.read(o,!0);return new al(n)}catch(r){throw new Error(`Error reading NbtLoop: ${r.message}`)}}static write(e,r){if(r.data===null){e.writeBuffer(Buffer.from([0]));return}try{let o=new ol;nl.write(o,r.data,!0);let n=o.getBuffer(),i=n.slice(2,n.length-1);e.writeBuffer(i)}catch(o){throw new Error(`Error writing NbtLoop: ${o.message}`)}}};import{DataType as Bw}from"@serenityjs/raknet";var ta=class sl extends Bw{static{s(this,"Patterns")}patterns;constructor(e=[]){super(),this.patterns=e}static read(e){let r=new sl,o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readVarString(),a=e.readVarString();r.patterns.push({item_name:i,pattern:a})}return r}static write(e,r){e.writeVarInt(r.patterns.length);for(let o of r.patterns)e.writeVarString(o.item_name),e.writeVarString(o.pattern)}};import{DataType as Cw}from"@serenityjs/raknet";var ea=class cl extends Cw{static{s(this,"Materials")}materials;constructor(e=[]){super(),this.materials=e}static read(e){let r=new cl,o=e.readVarInt();for(let n=0;n<o;n++){let i=e.readVarString(),a=e.readVarString(),c=e.readVarString();r.materials.push({material:i,color:a,item_name:c})}return r}static write(e,r){e.writeVarInt(r.materials.length);for(let o of r.materials)e.writeVarString(o.material),e.writeVarString(o.color),e.writeVarString(o.item_name)}};import{Endianness as pl}from"@serenityjs/binarystream";import{DataType as Vw}from"@serenityjs/raknet";var ra=class fl extends Vw{static{s(this,"UnlockedRecipesEntry")}type;recipes=[];constructor(e,r){super(),this.type=e,this.recipes=r}static write(e,r){e.writeInt32(r.type,pl.Little),e.writeVarInt(r.recipes.length);for(let o of r.recipes)e.writeVarString(o)}static read(e){let r=[],o=e.readInt32(pl.Little),n=e.readVarInt();for(let i=0;i<n;i++)r.push(e.readVarString());return console.log(e.readRemainingBuffer()),new fl(o,r)}};import{DataType as _w}from"@serenityjs/raknet";import{Endianness as jw}from"@serenityjs/binarystream";var dl=class extends _w{static{s(this,"PlayerAuthItemStackRequest")}clientRequestId;actions;filterStrings;stringsFilterOrigin;constructor(e,r,o,n){super(),this.clientRequestId=e,this.actions=r,this.filterStrings=o,this.stringsFilterOrigin=n}static read(e,r,o){if(!o.hasFlag(dt.PerformItemStackRequest))return null;let n=e.readZigZag(),i=new Array,a=e.readVarInt();for(let w=0;w<a;w++)i.push(Tr.read(e));let c=new Array,d=e.readVarInt();for(let w=0;w<d;w++)c.push(e.readVarString());let u=e.readInt32(jw.Little);return new this(n,i,c,u)}static write(e,r,o,n){if(n.hasFlag(dt.PerformBlockActions)){e.writeZigZag(r.clientRequestId),e.writeVarInt(r.actions.length);for(let i of r.actions)Tr.write(e,i);e.writeVarInt(r.filterStrings.length)}}};import{DataType as Uw}from"@serenityjs/raknet";var ll=class extends Uw{static{s(this,"CommandBlockActorRuntimeId")}static read(e,r,o){return o===!0?null:e.readVarLong()}static write(e,r,o,n){n!==!1&&e.writeVarLong(r)}};import{DataType as Nw}from"@serenityjs/raknet";var ml=class extends Nw{static{s(this,"CommandBlockSettings")}position;commandMode;redstoneMode;conditionalMode;constructor(e,r,o,n){super(),this.position=e,this.commandMode=r,this.redstoneMode=o,this.conditionalMode=n}static read(e,r,o){if(o===!1)return null;let n=R.read(e),i=e.readVarInt(),a=e.readBool(),c=e.readBool();return new this(n,i,a,c)}static write(e,r,o,n){n!==!1&&(R.write(e,r.position),e.writeVarInt(r.commandMode),e.writeBool(r.redstoneMode),e.writeBool(r.conditionalMode))}};import{BasePacket as Dw}from"@serenityjs/raknet";import{VarInt as Mw}from"@serenityjs/binarystream";var f=class extends Dw{static{s(this,"DataPacket")}static id;static id_type=Mw;serialize(){throw new Error("DataPacket.serialize() is not implemented")}deserialize(){throw new Error("DataPacket.deserialize() is not implemented")}};function v(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(v,"_ts_decorate");function it(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(it,"_ts_metadata");var q=class extends f{static{s(this,"AddEntityPacket")}uniqueEntityId;runtimeId;identifier;position;velocity;pitch;yaw;headYaw;bodyYaw;attributes;data;properties;links};v([ot(zw),it("design:type",typeof BigInt>"u"?Object:BigInt)],q.prototype,"uniqueEntityId",void 0);v([ot(Zw),it("design:type",typeof BigInt>"u"?Object:BigInt)],q.prototype,"runtimeId",void 0);v([ot(Tw),it("design:type",String)],q.prototype,"identifier",void 0);v([ot(l),it("design:type",typeof l>"u"?Object:l)],q.prototype,"position",void 0);v([ot(l),it("design:type",typeof l>"u"?Object:l)],q.prototype,"velocity",void 0);v([ot(oa,ia.Little),it("design:type",Number)],q.prototype,"pitch",void 0);v([ot(oa,ia.Little),it("design:type",Number)],q.prototype,"yaw",void 0);v([ot(oa,ia.Little),it("design:type",Number)],q.prototype,"headYaw",void 0);v([ot(oa,ia.Little),it("design:type",Number)],q.prototype,"bodyYaw",void 0);v([ot(ff),it("design:type",typeof Array>"u"?Object:Array)],q.prototype,"attributes",void 0);v([ot(Mt),it("design:type",typeof Array>"u"?Object:Array)],q.prototype,"data",void 0);v([ot(mt),it("design:type",typeof mt>"u"?Object:mt)],q.prototype,"properties",void 0);v([ot(_n),it("design:type",typeof Array>"u"?Object:Array)],q.prototype,"links",void 0);q=v([Fw(p.AddEntity)],q);import{Bool as Hw,VarLong as Ww,ZigZong as qw}from"@serenityjs/binarystream";import{Serialize as Qe,Proto as Aw}from"@serenityjs/raknet";function me(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(me,"_ts_decorate");function Je(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Je,"_ts_metadata");var Pt=class extends f{static{s(this,"AddItemActorPacket")}uniqueId;runtimeId;item;position;velocity;data;fromFishing};me([Qe(qw),Je("design:type",typeof BigInt>"u"?Object:BigInt)],Pt.prototype,"uniqueId",void 0);me([Qe(Ww),Je("design:type",typeof BigInt>"u"?Object:BigInt)],Pt.prototype,"runtimeId",void 0);me([Qe(x),Je("design:type",typeof x>"u"?Object:x)],Pt.prototype,"item",void 0);me([Qe(l),Je("design:type",typeof l>"u"?Object:l)],Pt.prototype,"position",void 0);me([Qe(l),Je("design:type",typeof l>"u"?Object:l)],Pt.prototype,"velocity",void 0);me([Qe(Mt),Je("design:type",typeof Array>"u"?Object:Array)],Pt.prototype,"data",void 0);me([Qe(Hw),Je("design:type",Boolean)],Pt.prototype,"fromFishing",void 0);Pt=me([Aw(p.AddItemActor)],Pt);import{Endianness as Ti,Float32 as $s,Uuid as Gw,VarLong as Kw,VarString as Ls,ZigZag as Yw,Int64 as Jw,Uint8 as ul,Int32 as Qw}from"@serenityjs/binarystream";import{Proto as Xw,Serialize as H}from"@serenityjs/raknet";function T(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(T,"_ts_decorate");function F(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(F,"_ts_metadata");var j=class extends f{static{s(this,"AddPlayerPacket")}uuid;username;runtimeId;platformChatId;position;velocity;pitch;yaw;headYaw;heldItem;gamemode;data;properties;uniqueEntityId;premissionLevel;commandPermission;abilities;links;deviceId;deviceOS};T([H(Gw),F("design:type",String)],j.prototype,"uuid",void 0);T([H(Ls),F("design:type",String)],j.prototype,"username",void 0);T([H(Kw),F("design:type",typeof BigInt>"u"?Object:BigInt)],j.prototype,"runtimeId",void 0);T([H(Ls),F("design:type",String)],j.prototype,"platformChatId",void 0);T([H(l),F("design:type",typeof l>"u"?Object:l)],j.prototype,"position",void 0);T([H(l),F("design:type",typeof l>"u"?Object:l)],j.prototype,"velocity",void 0);T([H($s,Ti.Little),F("design:type",Number)],j.prototype,"pitch",void 0);T([H($s,Ti.Little),F("design:type",Number)],j.prototype,"yaw",void 0);T([H($s,Ti.Little),F("design:type",Number)],j.prototype,"headYaw",void 0);T([H(x),F("design:type",typeof x>"u"?Object:x)],j.prototype,"heldItem",void 0);T([H(Yw),F("design:type",typeof Gamemode>"u"?Object:Gamemode)],j.prototype,"gamemode",void 0);T([H(Mt),F("design:type",typeof Array>"u"?Object:Array)],j.prototype,"data",void 0);T([H(mt),F("design:type",typeof mt>"u"?Object:mt)],j.prototype,"properties",void 0);T([H(Jw,Ti.Little),F("design:type",typeof BigInt>"u"?Object:BigInt)],j.prototype,"uniqueEntityId",void 0);T([H(ul),F("design:type",typeof PermissionLevel>"u"?Object:PermissionLevel)],j.prototype,"premissionLevel",void 0);T([H(ul),F("design:type",typeof CommandPermissionLevel>"u"?Object:CommandPermissionLevel)],j.prototype,"commandPermission",void 0);T([H(Vn),F("design:type",typeof Array>"u"?Object:Array)],j.prototype,"abilities",void 0);T([H(_n),F("design:type",typeof Array>"u"?Object:Array)],j.prototype,"links",void 0);T([H(Ls),F("design:type",String)],j.prototype,"deviceId",void 0);T([H(Qw,Ti.Little),F("design:type",typeof DeviceOS>"u"?Object:DeviceOS)],j.prototype,"deviceOS",void 0);j=T([Xw(p.AddPlayer)],j);import{VarLong as $w,ZigZag as Lw}from"@serenityjs/binarystream";import{Proto as Ew,Serialize as vs}from"@serenityjs/raknet";function na(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(na,"_ts_decorate");function Es(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Es,"_ts_metadata");var Xe=class extends f{static{s(this,"AnimatePacket")}id;runtimeEntityId;boatRowingTime};na([vs(Lw),Es("design:type",typeof AnimateId>"u"?Object:AnimateId)],Xe.prototype,"id",void 0);na([vs($w),Es("design:type",typeof BigInt>"u"?Object:BigInt)],Xe.prototype,"runtimeEntityId",void 0);na([vs(Uf),Es("design:type",Object)],Xe.prototype,"boatRowingTime",void 0);Xe=na([Ew(p.Animate)],Xe);import{Endianness as vw}from"@serenityjs/binarystream";import{Proto as tb,Serialize as he}from"@serenityjs/raknet";function Tt(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Tt,"_ts_decorate");function ue(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(ue,"_ts_metadata");var ht=class extends f{static{s(this,"AvailableCommandsPacket")}enumValues;chainedSubcommandValues;postFixes;enums;subcommands;commands;dynamicEnums;enumConstraints};Tt([he(Kf),ue("design:type",typeof Array>"u"?Object:Array)],ht.prototype,"enumValues",void 0);Tt([he(Yf),ue("design:type",typeof Array>"u"?Object:Array)],ht.prototype,"chainedSubcommandValues",void 0);Tt([he(Jf),ue("design:type",typeof Array>"u"?Object:Array)],ht.prototype,"postFixes",void 0);Tt([he(xf,vw.Little,"enumValues"),ue("design:type",typeof Array>"u"?Object:Array)],ht.prototype,"enums",void 0);Tt([he(kf),ue("design:type",typeof Array>"u"?Object:Array)],ht.prototype,"subcommands",void 0);Tt([he(Of),ue("design:type",typeof Array>"u"?Object:Array)],ht.prototype,"commands",void 0);Tt([he(Cf),ue("design:type",typeof Array>"u"?Object:Array)],ht.prototype,"dynamicEnums",void 0);Tt([he(_f),ue("design:type",typeof Array>"u"?Object:Array)],ht.prototype,"enumConstraints",void 0);ht=Tt([tb(p.AvailableCommands)],ht);import{Proto as rb}from"@serenityjs/raknet";function eb(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(eb,"_ts_decorate");var aa=class extends f{static{s(this,"BiomeDefinitionListPacket")}biomes;serialize(){return this.writeVarInt(p.BiomeDefinitionList),this.writeBuffer(this.biomes),this.getBuffer()}deserialize(){return this.readVarInt(),this.biomes=this.readRemainingBuffer(),this}};aa=eb([rb(p.BiomeDefinitionList)],aa);import{Bool as ib,Uint8 as ob,ZigZag as tc}from"@serenityjs/binarystream";import{Proto as nb,Serialize as Fi}from"@serenityjs/raknet";function Hr(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Hr,"_ts_decorate");function zi(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(zi,"_ts_metadata");var zt=class extends f{static{s(this,"BlockPickRequestPacket")}x;y;z;addData;selectedSlot};Hr([Fi(tc),zi("design:type",Number)],zt.prototype,"x",void 0);Hr([Fi(tc),zi("design:type",Number)],zt.prototype,"y",void 0);Hr([Fi(tc),zi("design:type",Number)],zt.prototype,"z",void 0);Hr([Fi(ib),zi("design:type",Boolean)],zt.prototype,"addData",void 0);Hr([Fi(ob),zi("design:type",Number)],zt.prototype,"selectedSlot",void 0);zt=Hr([nb(p.BlockPickRequest)],zt);import{ZigZag as ab,Bool as hl}from"@serenityjs/binarystream";import{Proto as sb,Serialize as ca}from"@serenityjs/raknet";function Hi(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Hi,"_ts_decorate");function sa(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(sa,"_ts_metadata");var ge=class extends f{static{s(this,"ChangeDimensionPacket")}dimension;position;respawn;hasLoadingScreen};Hi([ca(ab),sa("design:type",typeof DimensionType>"u"?Object:DimensionType)],ge.prototype,"dimension",void 0);Hi([ca(l),sa("design:type",typeof l>"u"?Object:l)],ge.prototype,"position",void 0);Hi([ca(hl),sa("design:type",Boolean)],ge.prototype,"respawn",void 0);Hi([ca(hl),sa("design:type",Boolean)],ge.prototype,"hasLoadingScreen",void 0);ge=Hi([sb(p.ChangeDimension)],ge);import{ZigZag as pb}from"@serenityjs/binarystream";import{Proto as fb,Serialize as db}from"@serenityjs/raknet";function gl(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(gl,"_ts_decorate");function cb(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(cb,"_ts_metadata");var Wi=class extends f{static{s(this,"ChunkRadiusUpdatePacket")}radius};gl([db(pb),cb("design:type",Number)],Wi.prototype,"radius",void 0);Wi=gl([fb(p.ChunkRadiusUpdate)],Wi);import{Proto as mb,Serialize as ub}from"@serenityjs/raknet";function yl(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(yl,"_ts_decorate");function lb(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(lb,"_ts_metadata");var qi=class extends f{static{s(this,"CommandOutputPacket")}originData};yl([ub(Dn),lb("design:type",typeof Dn>"u"?Object:Dn)],qi.prototype,"originData",void 0);qi=yl([mb(p.CommandOutput)],qi);import{Bool as hb,VarInt as gb,VarString as yb}from"@serenityjs/binarystream";import{Proto as wb,Serialize as fa}from"@serenityjs/raknet";function Ai(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Ai,"_ts_decorate");function pa(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(pa,"_ts_metadata");var ye=class extends f{static{s(this,"CommandRequestPacket")}command;origin;isInternal;version};Ai([fa(yb),pa("design:type",String)],ye.prototype,"command",void 0);Ai([fa(Ae),pa("design:type",typeof Ae>"u"?Object:Ae)],ye.prototype,"origin",void 0);Ai([fa(hb),pa("design:type",Boolean)],ye.prototype,"isInternal",void 0);Ai([fa(gb),pa("design:type",Number)],ye.prototype,"version",void 0);ye=Ai([wb(p.CommandRequest)],ye);import{Int8 as wl,Bool as bb}from"@serenityjs/binarystream";import{Proto as Pb,Serialize as rc}from"@serenityjs/raknet";function da(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(da,"_ts_decorate");function ec(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(ec,"_ts_metadata");var $e=class extends f{static{s(this,"ContainerClosePacket")}identifier;type;serverInitiated};da([rc(wl),ec("design:type",typeof ContainerId>"u"?Object:ContainerId)],$e.prototype,"identifier",void 0);da([rc(wl),ec("design:type",typeof ContainerType>"u"?Object:ContainerType)],$e.prototype,"type",void 0);da([rc(bb),ec("design:type",Boolean)],$e.prototype,"serverInitiated",void 0);$e=da([Pb(p.ContainerClose)],$e);import{Int8 as bl,VarLong as Rb}from"@serenityjs/binarystream";import{Proto as xb,Serialize as ma}from"@serenityjs/raknet";function Gi(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Gi,"_ts_decorate");function la(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(la,"_ts_metadata");var we=class extends f{static{s(this,"ContainerOpenPacket")}identifier;type;position;uniqueId};Gi([ma(bl),la("design:type",typeof ContainerId>"u"?Object:ContainerId)],we.prototype,"identifier",void 0);Gi([ma(bl),la("design:type",typeof ContainerType>"u"?Object:ContainerType)],we.prototype,"type",void 0);Gi([ma(R),la("design:type",typeof R>"u"?Object:R)],we.prototype,"position",void 0);Gi([ma(Rb),la("design:type",typeof BigInt>"u"?Object:BigInt)],we.prototype,"uniqueId",void 0);we=Gi([xb(p.ContainerOpen)],we);import{Proto as kb,Serialize as Sb}from"@serenityjs/raknet";function Pl(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Pl,"_ts_decorate");function Ib(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Ib,"_ts_metadata");var Ki=class extends f{static{s(this,"CreativeContentPacket")}items};Pl([Sb(Zf),Ib("design:type",typeof Array>"u"?Object:Array)],Ki.prototype,"items",void 0);Ki=Pl([kb(p.CreativeContent)],Ki);import{ZigZag as Ob,Bool as Bb}from"@serenityjs/binarystream";import{Proto as Cb,Serialize as oc}from"@serenityjs/raknet";function ua(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(ua,"_ts_decorate");function ic(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(ic,"_ts_metadata");var Le=class extends f{static{s(this,"DisconnectPacket")}reason;hideDisconnectScreen;message};ua([oc(Ob),ic("design:type",typeof DisconnectReason>"u"?Object:DisconnectReason)],Le.prototype,"reason",void 0);ua([oc(Bb),ic("design:type",Boolean)],Le.prototype,"hideDisconnectScreen",void 0);ua([oc(Xn,0,"hideDisconnectScreen"),ic("design:type",typeof Xn>"u"?Object:Xn)],Le.prototype,"message",void 0);Le=ua([Cb(p.Disconnect)],Le);import{Uint8 as Vb,Endianness as _b,VarLong as jb}from"@serenityjs/binarystream";import{Proto as Ub,Serialize as ac}from"@serenityjs/raknet";function ha(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(ha,"_ts_decorate");function nc(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(nc,"_ts_metadata");var Ee=class extends f{static{s(this,"InteractPacket")}action;actorRuntimeId;position};ha([ac(Vb),nc("design:type",typeof InteractAction>"u"?Object:InteractAction)],Ee.prototype,"action",void 0);ha([ac(jb),nc("design:type",typeof BigInt>"u"?Object:BigInt)],Ee.prototype,"actorRuntimeId",void 0);ha([ac(rf,_b.Big,"action"),nc("design:type",typeof Vector3f>"u"?Object:Vector3f)],Ee.prototype,"position",void 0);Ee=ha([Ub(p.Interact)],Ee);import{VarInt as Nb}from"@serenityjs/binarystream";import{Proto as Db,Serialize as ya}from"@serenityjs/raknet";function Yi(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Yi,"_ts_decorate");function ga(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(ga,"_ts_metadata");var be=class extends f{static{s(this,"InventoryContentPacket")}containerId;items;fullContainerName;storageItem};Yi([ya(Nb),ga("design:type",typeof ContainerId>"u"?Object:ContainerId)],be.prototype,"containerId",void 0);Yi([ya(wf),ga("design:type",typeof Array>"u"?Object:Array)],be.prototype,"items",void 0);Yi([ya(bt),ga("design:type",typeof bt>"u"?Object:bt)],be.prototype,"fullContainerName",void 0);Yi([ya(x),ga("design:type",typeof x>"u"?Object:x)],be.prototype,"storageItem",void 0);be=Yi([Db(p.InventoryContent)],be);import{VarInt as Rl}from"@serenityjs/binarystream";import{Proto as Mb,Serialize as Qi}from"@serenityjs/raknet";function Wr(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Wr,"_ts_decorate");function Ji(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Ji,"_ts_metadata");var Ft=class extends f{static{s(this,"InventorySlotPacket")}containerId;slot;fullContainerName;storageItem;item};Wr([Qi(Rl),Ji("design:type",typeof ContainerId>"u"?Object:ContainerId)],Ft.prototype,"containerId",void 0);Wr([Qi(Rl),Ji("design:type",Number)],Ft.prototype,"slot",void 0);Wr([Qi(bt),Ji("design:type",typeof bt>"u"?Object:bt)],Ft.prototype,"fullContainerName",void 0);Wr([Qi(x),Ji("design:type",typeof x>"u"?Object:x)],Ft.prototype,"storageItem",void 0);Wr([Qi(x),Ji("design:type",typeof x>"u"?Object:x)],Ft.prototype,"item",void 0);Ft=Wr([Mb(p.InventorySlot)],Ft);import{Proto as Zb,Serialize as Il}from"@serenityjs/raknet";function sc(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(sc,"_ts_decorate");function xl(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(xl,"_ts_metadata");var qr=class extends f{static{s(this,"InventoryTransactionPacket")}legacy;transaction};sc([Il(Ge),xl("design:type",typeof Ge>"u"?Object:Ge)],qr.prototype,"legacy",void 0);sc([Il(Zn),xl("design:type",typeof Zn>"u"?Object:Zn)],qr.prototype,"transaction",void 0);qr=sc([Zb(p.InventoryTransaction)],qr);import{Proto as zb,Serialize as Fb}from"@serenityjs/raknet";function kl(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(kl,"_ts_decorate");function Tb(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Tb,"_ts_metadata");var Xi=class extends f{static{s(this,"ItemComponentPacket")}items};kl([Fb(zf),Tb("design:type",typeof Array>"u"?Object:Array)],Xi.prototype,"items",void 0);Xi=kl([zb(p.ItemComponent)],Xi);import{Proto as Wb,Serialize as qb}from"@serenityjs/raknet";function Sl(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Sl,"_ts_decorate");function Hb(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Hb,"_ts_metadata");var $i=class extends f{static{s(this,"ItemStackRequestPacket")}requests};Sl([qb(Wd),Hb("design:type",typeof Array>"u"?Object:Array)],$i.prototype,"requests",void 0);$i=Sl([Wb(p.ItemStackRequest)],$i);import{Proto as Gb,Serialize as Kb}from"@serenityjs/raknet";function Ol(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Ol,"_ts_decorate");function Ab(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Ab,"_ts_metadata");var Li=class extends f{static{s(this,"ItemStackResponsePacket")}responses};Ol([Kb(hf),Ab("design:type",typeof Array>"u"?Object:Array)],Li.prototype,"responses",void 0);Li=Ol([Gb(p.ItemStackResponse)],Li);import{Endianness as wa}from"@serenityjs/binarystream";import{Proto as Jb}from"@serenityjs/raknet";function Yb(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Yb,"_ts_decorate");var ba=class extends f{static{s(this,"LevelChunkPacket")}x;z;dimension;subChunkCount;cacheEnabled;blobs;data;serialize(){if(this.writeVarInt(p.LevelChunk),this.writeZigZag(this.x),this.writeZigZag(this.z),this.writeZigZag(this.dimension),this.cacheEnabled?(this.writeVarInt(-2),this.writeUint16(this.subChunkCount,wa.Little)):this.writeVarInt(this.subChunkCount),this.writeBool(this.cacheEnabled),this.blobs){this.writeVarInt(this.blobs.length);for(let e of this.blobs)this.writeUint64(e,wa.Little)}return this.writeVarInt(this.data.byteLength),this.writeBuffer(this.data),this.getBuffer()}deserialize(){if(this.readVarInt(),this.x=this.readZigZag(),this.z=this.readZigZag(),this.dimension=this.readZigZag(),this.subChunkCount=this.readVarInt(),this.subChunkCount===-2&&(this.subChunkCount=this.readUint16(wa.Little)),this.cacheEnabled=this.readBool(),this.cacheEnabled){let r=this.readVarInt();this.blobs=[];for(let o=0;o<r;o++)this.blobs.push(this.readUint64(wa.Little))}let e=this.readVarInt();return this.data=this.readBuffer(e),this}};ba=Yb([Jb(p.LevelChunk)],ba);import{ZigZag as Bl}from"@serenityjs/binarystream";import{Proto as Qb,Serialize as pc}from"@serenityjs/raknet";function Pa(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Pa,"_ts_decorate");function cc(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(cc,"_ts_metadata");var ve=class extends f{static{s(this,"LevelEventPacket")}event;position;data};Pa([pc(Bl),cc("design:type",typeof LevelEvent>"u"?Object:LevelEvent)],ve.prototype,"event",void 0);Pa([pc(l),cc("design:type",typeof l>"u"?Object:l)],ve.prototype,"position",void 0);Pa([pc(Bl),cc("design:type",Number)],ve.prototype,"data",void 0);ve=Pa([Qb(p.LevelEvent)],ve);import{Bool as Cl,VarInt as Xb,VarString as $b,ZigZag as Lb}from"@serenityjs/binarystream";import{Proto as Eb,Serialize as Gr}from"@serenityjs/raknet";function tr(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(tr,"_ts_decorate");function Ar(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Ar,"_ts_metadata");var Bt=class extends f{static{s(this,"LevelSoundEventPacket")}event;position;data;actorIdentifier;isBabyMob;isGlobal};tr([Gr(Xb),Ar("design:type",typeof LevelSoundEvent>"u"?Object:LevelSoundEvent)],Bt.prototype,"event",void 0);tr([Gr(l),Ar("design:type",typeof l>"u"?Object:l)],Bt.prototype,"position",void 0);tr([Gr(Lb),Ar("design:type",Number)],Bt.prototype,"data",void 0);tr([Gr($b),Ar("design:type",String)],Bt.prototype,"actorIdentifier",void 0);tr([Gr(Cl),Ar("design:type",Boolean)],Bt.prototype,"isBabyMob",void 0);tr([Gr(Cl),Ar("design:type",Boolean)],Bt.prototype,"isGlobal",void 0);Bt=tr([Eb(p.LevelSoundEvent)],Bt);import{Int32 as vb}from"@serenityjs/binarystream";import{Proto as tP,Serialize as _l}from"@serenityjs/raknet";function fc(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(fc,"_ts_decorate");function Vl(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Vl,"_ts_metadata");var Kr=class extends f{static{s(this,"LoginPacket")}protocol;tokens};fc([_l(vb),Vl("design:type",Number)],Kr.prototype,"protocol",void 0);fc([_l(bn),Vl("design:type",typeof bn>"u"?Object:bn)],Kr.prototype,"tokens",void 0);Kr=fc([tP(p.Login)],Kr);import{Int8 as eP,Uint8 as jl,VarLong as rP}from"@serenityjs/binarystream";import{Proto as iP,Serialize as vi}from"@serenityjs/raknet";function Yr(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Yr,"_ts_decorate");function Ei(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Ei,"_ts_metadata");var Ht=class extends f{static{s(this,"MobEquipmentPacket")}runtimeEntityId;item;slot;selectedSlot;containerId};Yr([vi(rP),Ei("design:type",typeof BigInt>"u"?Object:BigInt)],Ht.prototype,"runtimeEntityId",void 0);Yr([vi(x),Ei("design:type",typeof x>"u"?Object:x)],Ht.prototype,"item",void 0);Yr([vi(jl),Ei("design:type",Number)],Ht.prototype,"slot",void 0);Yr([vi(jl),Ei("design:type",Number)],Ht.prototype,"selectedSlot",void 0);Yr([vi(eP),Ei("design:type",typeof ContainerId>"u"?Object:ContainerId)],Ht.prototype,"containerId",void 0);Ht=Yr([iP(p.MobEquipment)],Ht);import{VarInt as oP,VarString as nP}from"@serenityjs/binarystream";import{Proto as aP,Serialize as Nl}from"@serenityjs/raknet";function dc(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(dc,"_ts_decorate");function Ul(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Ul,"_ts_metadata");var Jr=class extends f{static{s(this,"ModalFormRequestPacket")}id;payload};dc([Nl(oP),Ul("design:type",Number)],Jr.prototype,"id",void 0);dc([Nl(nP),Ul("design:type",String)],Jr.prototype,"payload",void 0);Jr=dc([aP(p.ModalFormRequest)],Jr);import{VarInt as sP,Bool as Dl,Endianness as Ml}from"@serenityjs/binarystream";import{Proto as cP,Serialize as eo}from"@serenityjs/raknet";function Qr(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Qr,"_ts_decorate");function to(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(to,"_ts_metadata");var Wt=class extends f{static{s(this,"ModalFormResponsePacket")}id;response;data;canceled;reason};Qr([eo(sP),to("design:type",Number)],Wt.prototype,"id",void 0);Qr([eo(Dl),to("design:type",Boolean)],Wt.prototype,"response",void 0);Qr([eo(cf,Ml.Big,"response"),to("design:type",Object)],Wt.prototype,"data",void 0);Qr([eo(Dl),to("design:type",Boolean)],Wt.prototype,"canceled",void 0);Qr([eo(pf,Ml.Big,"canceled"),to("design:type",Object)],Wt.prototype,"reason",void 0);Wt=Qr([cP(p.ModalFormResponse)],Wt);import{Uint8 as pP,VarLong as fP}from"@serenityjs/binarystream";import{Proto as dP,Serialize as xa}from"@serenityjs/raknet";function ro(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(ro,"_ts_decorate");function Ra(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Ra,"_ts_metadata");var Pe=class extends f{static{s(this,"MoveActorAbsolutePacket")}runtimeId;flags;position;rotation};ro([xa(fP),Ra("design:type",typeof BigInt>"u"?Object:BigInt)],Pe.prototype,"runtimeId",void 0);ro([xa(pP),Ra("design:type",Number)],Pe.prototype,"flags",void 0);ro([xa(l),Ra("design:type",typeof l>"u"?Object:l)],Pe.prototype,"position",void 0);ro([xa(Nr),Ra("design:type",typeof Nr>"u"?Object:Nr)],Pe.prototype,"rotation",void 0);Pe=ro([dP(p.MoveActorAbsolute)],Pe);import{Float32 as lc,Endianness as Ia,Uint8 as lP,Bool as mP,VarLong as Zl}from"@serenityjs/binarystream";import{Proto as uP,Serialize as Vt}from"@serenityjs/raknet";function Rt(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Rt,"_ts_decorate");function Ct(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Ct,"_ts_metadata");var tt=class extends f{static{s(this,"MovePlayerPacket")}runtimeId;position;pitch;yaw;headYaw;mode;onGround;riddenRuntimeId;cause;inputTick};Rt([Vt(Zl),Ct("design:type",typeof BigInt>"u"?Object:BigInt)],tt.prototype,"runtimeId",void 0);Rt([Vt(l),Ct("design:type",typeof l>"u"?Object:l)],tt.prototype,"position",void 0);Rt([Vt(lc,Ia.Little),Ct("design:type",Number)],tt.prototype,"pitch",void 0);Rt([Vt(lc,Ia.Little),Ct("design:type",Number)],tt.prototype,"yaw",void 0);Rt([Vt(lc,Ia.Little),Ct("design:type",Number)],tt.prototype,"headYaw",void 0);Rt([Vt(lP),Ct("design:type",typeof MoveMode>"u"?Object:MoveMode)],tt.prototype,"mode",void 0);Rt([Vt(mP),Ct("design:type",Boolean)],tt.prototype,"onGround",void 0);Rt([Vt(Zl),Ct("design:type",typeof BigInt>"u"?Object:BigInt)],tt.prototype,"riddenRuntimeId",void 0);Rt([Vt(Ap,Ia.Little,"mode"),Ct("design:type",Object)],tt.prototype,"cause",void 0);Rt([Vt(ut),Ct("design:type",typeof BigInt>"u"?Object:BigInt)],tt.prototype,"inputTick",void 0);tt=Rt([uP(p.MovePlayer)],tt);import{VarInt as hP}from"@serenityjs/binarystream";import{Proto as gP,Serialize as uc}from"@serenityjs/raknet";function ka(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(ka,"_ts_decorate");function mc(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(mc,"_ts_metadata");var er=class extends f{static{s(this,"NetworkChunkPublisherUpdatePacket")}coordinate;radius;savedChunks};ka([uc(R),mc("design:type",typeof R>"u"?Object:R)],er.prototype,"coordinate",void 0);ka([uc(hP),mc("design:type",Number)],er.prototype,"radius",void 0);ka([uc(af),mc("design:type",typeof Array>"u"?Object:Array)],er.prototype,"savedChunks",void 0);er=ka([gP(p.NetworkChunkPublisherUpdate)],er);import{Bool as yP,Endianness as hc,Float32 as wP,Short as Tl,Uint8 as bP}from"@serenityjs/binarystream";import{Proto as PP,Serialize as oo}from"@serenityjs/raknet";function Xr(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Xr,"_ts_decorate");function io(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(io,"_ts_metadata");var qt=class extends f{static{s(this,"NetworkSettingsPacket")}compressionThreshold;compressionMethod;clientThrottle;clientThreshold;clientScalar};Xr([oo(Tl,hc.Little),io("design:type",Number)],qt.prototype,"compressionThreshold",void 0);Xr([oo(Tl,hc.Little),io("design:type",typeof CompressionMethod>"u"?Object:CompressionMethod)],qt.prototype,"compressionMethod",void 0);Xr([oo(yP),io("design:type",Boolean)],qt.prototype,"clientThrottle",void 0);Xr([oo(bP),io("design:type",Number)],qt.prototype,"clientThreshold",void 0);Xr([oo(wP,hc.Little),io("design:type",Number)],qt.prototype,"clientScalar",void 0);qt=Xr([PP(p.NetworkSettings)],qt);import{VarString as RP,ZigZag as gc}from"@serenityjs/binarystream";import{Proto as xP,Serialize as Oa}from"@serenityjs/raknet";function no(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(no,"_ts_decorate");function Sa(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Sa,"_ts_metadata");var Re=class extends f{static{s(this,"PacketViolationWarningPacket")}type;severity;packet;context};no([Oa(gc),Sa("design:type",typeof ViolationType>"u"?Object:ViolationType)],Re.prototype,"type",void 0);no([Oa(gc),Sa("design:type",typeof ViolationSeverity>"u"?Object:ViolationSeverity)],Re.prototype,"severity",void 0);no([Oa(gc),Sa("design:type",typeof p>"u"?Object:p)],Re.prototype,"packet",void 0);no([Oa(RP),Sa("design:type",String)],Re.prototype,"context",void 0);Re=no([xP(p.PacketViolationWarning)],Re);import{Int32 as kP}from"@serenityjs/binarystream";import{Proto as SP,Serialize as OP}from"@serenityjs/raknet";function zl(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(zl,"_ts_decorate");function IP(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(IP,"_ts_metadata");var ao=class extends f{static{s(this,"PlayStatusPacket")}status};zl([OP(kP),IP("design:type",typeof PlayStatus>"u"?Object:PlayStatus)],ao.prototype,"status",void 0);ao=zl([SP(p.PlayStatus)],ao);import{VarLong as BP,ZigZag as Fl}from"@serenityjs/binarystream";import{Proto as CP,Serialize as co}from"@serenityjs/raknet";function $r(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s($r,"_ts_decorate");function so(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(so,"_ts_metadata");var At=class extends f{static{s(this,"PlayerActionPacket")}entityRuntimeId;action;blockPosition;resultPosition;face};$r([co(BP),so("design:type",typeof BigInt>"u"?Object:BigInt)],At.prototype,"entityRuntimeId",void 0);$r([co(Fl),so("design:type",typeof PlayerActionType>"u"?Object:PlayerActionType)],At.prototype,"action",void 0);$r([co(R),so("design:type",typeof R>"u"?Object:R)],At.prototype,"blockPosition",void 0);$r([co(R),so("design:type",typeof R>"u"?Object:R)],At.prototype,"resultPosition",void 0);$r([co(Fl),so("design:type",Number)],At.prototype,"face",void 0);At=$r([CP(p.PlayerAction)],At);import{Endianness as VP,Float32 as _P,VarInt as yc}from"@serenityjs/binarystream";import{Proto as jP,Serialize as Y}from"@serenityjs/raknet";function A(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(A,"_ts_decorate");function K(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(K,"_ts_metadata");var Z=class extends f{static{s(this,"PlayerAuthInputPacket")}rotation;position;motion;headYaw;inputData;inputMode;playMode;interactionMode;interactRotation;inputTick;positionDelta;itemStackRequest;blockActions;predictedVehicle;analogueMotion;cameraOrientation};A([Y(M),K("design:type",typeof M>"u"?Object:M)],Z.prototype,"rotation",void 0);A([Y(l),K("design:type",typeof l>"u"?Object:l)],Z.prototype,"position",void 0);A([Y(M),K("design:type",typeof M>"u"?Object:M)],Z.prototype,"motion",void 0);A([Y(_P,VP.Little),K("design:type",Number)],Z.prototype,"headYaw",void 0);A([Y(Fr),K("design:type",typeof Fr>"u"?Object:Fr)],Z.prototype,"inputData",void 0);A([Y(yc),K("design:type",typeof un>"u"?Object:un)],Z.prototype,"inputMode",void 0);A([Y(yc),K("design:type",typeof mn>"u"?Object:mn)],Z.prototype,"playMode",void 0);A([Y(yc),K("design:type",typeof hn>"u"?Object:hn)],Z.prototype,"interactionMode",void 0);A([Y(M),K("design:type",typeof M>"u"?Object:M)],Z.prototype,"interactRotation",void 0);A([Y(ut),K("design:type",typeof BigInt>"u"?Object:BigInt)],Z.prototype,"inputTick",void 0);A([Y(l),K("design:type",typeof l>"u"?Object:l)],Z.prototype,"positionDelta",void 0);A([Y(dl,0,"inputData"),K("design:type",Object)],Z.prototype,"itemStackRequest",void 0);A([Y(rl,0,"inputData"),K("design:type",Object)],Z.prototype,"blockActions",void 0);A([Y(Ed,0,"inputData"),K("design:type",Object)],Z.prototype,"predictedVehicle",void 0);A([Y(M),K("design:type",typeof M>"u"?Object:M)],Z.prototype,"analogueMotion",void 0);A([Y(l),K("design:type",typeof l>"u"?Object:l)],Z.prototype,"cameraOrientation",void 0);Z=A([jP(p.PlayerAuthInput)],Z);import{Int8 as UP,VarInt as NP,Bool as DP}from"@serenityjs/binarystream";import{Proto as MP,Serialize as bc}from"@serenityjs/raknet";function Ba(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Ba,"_ts_decorate");function wc(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(wc,"_ts_metadata");var rr=class extends f{static{s(this,"PlayerHotbarPacket")}selectedSlot;windowId;selectSlot};Ba([bc(NP),wc("design:type",Number)],rr.prototype,"selectedSlot",void 0);Ba([bc(UP),wc("design:type",Number)],rr.prototype,"windowId",void 0);Ba([bc(DP),wc("design:type",Boolean)],rr.prototype,"selectSlot",void 0);rr=Ba([MP(p.PlayerHotbar)],rr);import{Endianness as ZP,Uint8 as TP}from"@serenityjs/binarystream";import{Proto as zP,Serialize as Wl}from"@serenityjs/raknet";function Pc(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Pc,"_ts_decorate");function Hl(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Hl,"_ts_metadata");var Lr=class extends f{static{s(this,"PlayerListPacket")}action;records};Pc([Wl(TP),Hl("design:type",typeof PlayerListAction>"u"?Object:PlayerListAction)],Lr.prototype,"action",void 0);Pc([Wl(Lp,ZP.Little,"action"),Hl("design:type",typeof Array>"u"?Object:Array)],Lr.prototype,"records",void 0);Lr=Pc([zP(p.PlayerList)],Lr);import{ZigZong as HP}from"@serenityjs/binarystream";import{Proto as WP,Serialize as qP}from"@serenityjs/raknet";function ql(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(ql,"_ts_decorate");function FP(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(FP,"_ts_metadata");var po=class extends f{static{s(this,"RemoveEntityPacket")}uniqueEntityId};ql([qP(HP),FP("design:type",typeof BigInt>"u"?Object:BigInt)],po.prototype,"uniqueEntityId",void 0);po=ql([WP(p.RemoveEntity)],po);import{Uint8 as AP,ZigZag as GP}from"@serenityjs/binarystream";import{Proto as KP,Serialize as Gl}from"@serenityjs/raknet";function Rc(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Rc,"_ts_decorate");function Al(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Al,"_ts_metadata");var Er=class extends f{static{s(this,"RequestChunkRadiusPacket")}radius;maxRadius};Rc([Gl(GP),Al("design:type",Number)],Er.prototype,"radius",void 0);Rc([Gl(AP),Al("design:type",Number)],Er.prototype,"maxRadius",void 0);Er=Rc([KP(p.RequestChunkRadius)],Er);import{Int32 as JP}from"@serenityjs/binarystream";import{Proto as QP,Serialize as XP}from"@serenityjs/raknet";function Kl(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Kl,"_ts_decorate");function YP(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(YP,"_ts_metadata");var fo=class extends f{static{s(this,"RequestNetworkSettingsPacket")}protocol};Kl([XP(JP),YP("design:type",Number)],fo.prototype,"protocol",void 0);fo=Kl([QP(p.RequestNetworkSettings)],fo);import{Uint8 as $P}from"@serenityjs/binarystream";import{Proto as LP,Serialize as Jl}from"@serenityjs/raknet";function xc(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(xc,"_ts_decorate");function Yl(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Yl,"_ts_metadata");var vr=class extends f{static{s(this,"ResourcePackClientResponsePacket")}response;packs};xc([Jl($P),Yl("design:type",typeof ResourcePackResponse>"u"?Object:ResourcePackResponse)],vr.prototype,"response",void 0);xc([Jl(Vp),Yl("design:type",typeof Array>"u"?Object:Array)],vr.prototype,"packs",void 0);vr=xc([LP(p.ResourcePackClientResponse)],vr);import{Endianness as ti}from"@serenityjs/binarystream";import{Proto as vP}from"@serenityjs/raknet";function EP(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(EP,"_ts_decorate");var Ca=class extends f{static{s(this,"ResourcePackDataInfoPacket")}packId;maxChunkSize;chunkCount;fileSize;fileHash;isPremium;packType;serialize(){return this.writeVarInt(p.ResourcePackDataInfo),this.writeVarString(this.packId),this.writeUint32(this.maxChunkSize,ti.Little),this.writeUint32(this.chunkCount,ti.Little),this.writeUint64(this.fileSize,ti.Little),this.writeVarInt(this.fileHash.byteLength),this.writeBuffer(this.fileHash),this.writeBool(this.isPremium),this.writeUint8(this.packType),this.getBuffer()}deserialize(){this.readVarInt(),this.packId=this.readVarString(),this.maxChunkSize=this.readUint32(ti.Little),this.chunkCount=this.readUint32(ti.Little),this.fileSize=this.readUint64(ti.Little);let e=this.readVarInt();return this.fileHash=this.readBuffer(e),this.isPremium=this.readBool(),this.packType=this.readUint8(),this}};Ca=EP([vP(p.ResourcePackDataInfo)],Ca);import{Endianness as Va}from"@serenityjs/binarystream";import{Proto as eR}from"@serenityjs/raknet";function tR(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(tR,"_ts_decorate");var _a=class extends f{static{s(this,"ResourcePackChunkDataPacket")}packId;chunkId;byteOffset;chunkData;serialize(){return this.writeVarInt(p.ResourcePackChunkData),this.writeVarString(this.packId),this.writeUint32(this.chunkId,Va.Little),this.writeUint64(this.byteOffset,Va.Little),this.writeVarInt(this.chunkData.byteLength),this.writeBuffer(this.chunkData),this.getBuffer()}deserialize(){this.readVarInt(),this.packId=this.readVarString(),this.chunkId=this.readUint32(Va.Little),this.byteOffset=this.readUint64(Va.Little);let e=this.readVarInt();return this.chunkData=this.readBuffer(e),this}};_a=tR([eR(p.ResourcePackChunkData)],_a);import{Endianness as rR,Uint32 as iR,VarString as oR}from"@serenityjs/binarystream";import{Proto as nR,Serialize as Xl}from"@serenityjs/raknet";function Ic(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Ic,"_ts_decorate");function Ql(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Ql,"_ts_metadata");var ei=class extends f{static{s(this,"ResourcePackChunkRequestPacket")}packId;chunkId};Ic([Xl(oR),Ql("design:type",String)],ei.prototype,"packId",void 0);Ic([Xl(iR,rR.Little),Ql("design:type",Number)],ei.prototype,"chunkId",void 0);ei=Ic([nR(p.ResourcePackChunkRequest)],ei);import{Bool as kc,VarString as aR}from"@serenityjs/binarystream";import{Proto as sR,Serialize as or}from"@serenityjs/raknet";function xe(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(xe,"_ts_decorate");function ir(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(ir,"_ts_metadata");var xt=class extends f{static{s(this,"ResourcePackStackPacket")}mustAccept;behaviorPacks;texturePacks;gameVersion;experiments;experimentsPreviouslyToggled;hasEditorPacks};xe([or(kc),ir("design:type",Boolean)],xt.prototype,"mustAccept",void 0);xe([or(xs),ir("design:type",typeof Array>"u"?Object:Array)],xt.prototype,"behaviorPacks",void 0);xe([or(xs),ir("design:type",typeof Array>"u"?Object:Array)],xt.prototype,"texturePacks",void 0);xe([or(aR),ir("design:type",String)],xt.prototype,"gameVersion",void 0);xe([or(xn),ir("design:type",typeof Array>"u"?Object:Array)],xt.prototype,"experiments",void 0);xe([or(kc),ir("design:type",Boolean)],xt.prototype,"experimentsPreviouslyToggled",void 0);xe([or(kc),ir("design:type",Boolean)],xt.prototype,"hasEditorPacks",void 0);xt=xe([sR(p.ResourcePackStack)],xt);import{Bool as Sc}from"@serenityjs/binarystream";import{Proto as cR,Serialize as Ua}from"@serenityjs/raknet";function lo(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(lo,"_ts_decorate");function ja(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(ja,"_ts_metadata");var Ie=class extends f{static{s(this,"ResourcePacksInfoPacket")}mustAccept;hasAddons;hasScripts;packs};lo([Ua(Sc),ja("design:type",Boolean)],Ie.prototype,"mustAccept",void 0);lo([Ua(Sc),ja("design:type",Boolean)],Ie.prototype,"hasAddons",void 0);lo([Ua(Sc),ja("design:type",Boolean)],Ie.prototype,"hasScripts",void 0);lo([Ua(Op),ja("design:type",typeof Array>"u"?Object:Array)],Ie.prototype,"packs",void 0);Ie=lo([cR(p.ResourcePacksInfo)],Ie);import{Uint8 as pR,VarLong as fR}from"@serenityjs/binarystream";import{Proto as dR,Serialize as Bc}from"@serenityjs/raknet";function Na(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Na,"_ts_decorate");function Oc(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Oc,"_ts_metadata");var nr=class extends f{static{s(this,"RespawnPacket")}position;state;runtimeEntityId};Na([Bc(l),Oc("design:type",typeof l>"u"?Object:l)],nr.prototype,"position",void 0);Na([Bc(pR),Oc("design:type",typeof RespawnState>"u"?Object:RespawnState)],nr.prototype,"state",void 0);Na([Bc(fR),Oc("design:type",typeof BigInt>"u"?Object:BigInt)],nr.prototype,"runtimeEntityId",void 0);nr=Na([dR(p.Respawn)],nr);import{VarString as Ll}from"@serenityjs/binarystream";import{Proto as lR,Serialize as El}from"@serenityjs/raknet";function Cc(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Cc,"_ts_decorate");function $l(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s($l,"_ts_metadata");var ri=class extends f{static{s(this,"ScriptMessagePacket")}messageId;data};Cc([El(Ll),$l("design:type",String)],ri.prototype,"messageId",void 0);Cc([El(Ll),$l("design:type",String)],ri.prototype,"data",void 0);ri=Cc([lR(p.ScriptMessage)],ri);import{VarLong as mR}from"@serenityjs/binarystream";import{Proto as uR,Serialize as _c}from"@serenityjs/raknet";function Da(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Da,"_ts_decorate");function Vc(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Vc,"_ts_metadata");var ar=class extends f{static{s(this,"SetActorMotionPacket")}runtimeId;motion;inputTick};Da([_c(mR),Vc("design:type",typeof BigInt>"u"?Object:BigInt)],ar.prototype,"runtimeId",void 0);Da([_c(l),Vc("design:type",typeof l>"u"?Object:l)],ar.prototype,"motion",void 0);Da([_c(ut),Vc("design:type",typeof BigInt>"u"?Object:BigInt)],ar.prototype,"inputTick",void 0);ar=Da([uR(p.SetActorMotion)],ar);import{Bool as gR}from"@serenityjs/binarystream";import{Proto as yR,Serialize as wR}from"@serenityjs/raknet";function vl(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(vl,"_ts_decorate");function hR(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(hR,"_ts_metadata");var mo=class extends f{static{s(this,"SetCommandsEnabledPacket")}enabled};vl([wR(gR),hR("design:type",Boolean)],mo.prototype,"enabled",void 0);mo=vl([yR(p.SetCommandsEnabled)],mo);import{VarLong as bR}from"@serenityjs/binarystream";import{Proto as PR,Serialize as Za}from"@serenityjs/raknet";function uo(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(uo,"_ts_decorate");function Ma(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Ma,"_ts_metadata");var ke=class extends f{static{s(this,"SetActorDataPacket")}runtimeEntityId;data;properties;inputTick;flagKeyset1=0n;flagKeyset2=0n;setFlag(e,r){let o=r?this.flagKeyset1^1n<<BigInt(e):this.flagKeyset1^0n<<BigInt(e);this.flagKeyset1=o;let n=new Mt(Rs.Reserved0,N.Long,o);this.data.push(n)}getFlag(e){return(this.flagKeyset1&1n<<BigInt(e))===1n}};uo([Za(bR),Ma("design:type",typeof BigInt>"u"?Object:BigInt)],ke.prototype,"runtimeEntityId",void 0);uo([Za(Mt),Ma("design:type",typeof Array>"u"?Object:Array)],ke.prototype,"data",void 0);uo([Za(mt),Ma("design:type",typeof mt>"u"?Object:mt)],ke.prototype,"properties",void 0);uo([Za(ut),Ma("design:type",typeof BigInt>"u"?Object:BigInt)],ke.prototype,"inputTick",void 0);ke=uo([PR(p.SetActorData)],ke);import{VarLong as xR}from"@serenityjs/binarystream";import{Proto as IR,Serialize as kR}from"@serenityjs/raknet";function tm(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(tm,"_ts_decorate");function RR(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(RR,"_ts_metadata");var ho=class extends f{static{s(this,"SetLocalPlayerAsInitializedPacket")}runtimeEntityId};tm([kR(xR),RR("design:type",typeof BigInt>"u"?Object:BigInt)],ho.prototype,"runtimeEntityId",void 0);ho=tm([IR(p.SetLocalPlayerAsInitialized)],ho);import{ZigZag as OR}from"@serenityjs/binarystream";import{Proto as BR,Serialize as CR}from"@serenityjs/raknet";function em(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(em,"_ts_decorate");function SR(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(SR,"_ts_metadata");var go=class extends f{static{s(this,"SetPlayerGameTypePacket")}gamemode};em([CR(OR),SR("design:type",typeof Gamemode>"u"?Object:Gamemode)],go.prototype,"gamemode",void 0);go=em([BR(p.SetPlayerGameType)],go);import{VarString as Ta,ZigZag as za}from"@serenityjs/binarystream";import{Proto as VR,Serialize as Oe}from"@serenityjs/raknet";function Gt(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Gt,"_ts_decorate");function Se(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Se,"_ts_metadata");var gt=class extends f{static{s(this,"SetTitlePacket")}type;text;fadeInTime;stayTime;fadeOutTime;xuid;platformOnlineId;filteredText};Gt([Oe(za),Se("design:type",typeof TitleType>"u"?Object:TitleType)],gt.prototype,"type",void 0);Gt([Oe(Ta),Se("design:type",String)],gt.prototype,"text",void 0);Gt([Oe(za),Se("design:type",Number)],gt.prototype,"fadeInTime",void 0);Gt([Oe(za),Se("design:type",Number)],gt.prototype,"stayTime",void 0);Gt([Oe(za),Se("design:type",Number)],gt.prototype,"fadeOutTime",void 0);Gt([Oe(Ta),Se("design:type",String)],gt.prototype,"xuid",void 0);Gt([Oe(Ta),Se("design:type",String)],gt.prototype,"platformOnlineId",void 0);Gt([Oe(Ta),Se("design:type",String)],gt.prototype,"filteredText",void 0);gt=Gt([VR(p.SetTitle)],gt);import{Bool as O,Endianness as It,Float32 as Fa,Int16 as _R,Int32 as jc,Int64 as jR,Uint64 as rm,Uint8 as yo,VarInt as im,VarLong as UR,VarString as nt,ZigZag as kt,ZigZong as NR,Uuid as DR}from"@serenityjs/binarystream";import{Proto as MR,Serialize as y}from"@serenityjs/raknet";function h(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(h,"_ts_decorate");function g(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(g,"_ts_metadata");var m=class extends f{static{s(this,"StartGamePacket")}entityId;runtimeEntityId;playerGamemode;playerPosition;pitch;yaw;seed;biomeType;biomeName;dimension;generator;worldGamemode;hardcore;difficulty;spawnPosition;achievementsDisabled;editorWorldType;createdInEdior;exportedFromEdior;dayCycleStopTime;eduOffer;eduFeatures;eduProductUuid;rainLevel;lightningLevel;confirmedPlatformLockedContent;multiplayerGame;broadcastToLan;xblBroadcastMode;platformBroadcastMode;commandsEnabled;texturePacksRequired;gamerules;experiments;experimentsPreviouslyToggled;bonusChest;mapEnabled;permissionLevel;serverChunkTickRange;hasLockedBehaviorPack;hasLockedResourcePack;isFromLockedWorldTemplate;useMsaGamertagsOnly;isFromWorldTemplate;isWorldTemplateOptionLocked;onlySpawnV1Villagers;personaDisabled;customSkinsDisabled;emoteChatMuted;gameVersion;limitedWorldWidth;limitedWorldLength;isNewNether;eduResourceUriButtonName;eduResourceUriLink;experimentalGameplayOverride;chatRestrictionLevel;disablePlayerInteractions;serverIdentfier;worldIdentifier;scenarioIdentifier;levelId;worldName;premiumWorldTemplateId;isTrial;movementAuthority;rewindHistorySize;serverAuthoritativeBlockBreaking;currentTick;enchantmentSeed;blockProperties;items;multiplayerCorrelationId;serverAuthoritativeInventory;engine;propertyData1;propertyData2;propertyData3;blockPaletteChecksum;worldTemplateId;clientSideGeneration;blockNetworkIdsAreHashes;serverControlledSounds};h([y(NR),g("design:type",typeof BigInt>"u"?Object:BigInt)],m.prototype,"entityId",void 0);h([y(UR),g("design:type",typeof BigInt>"u"?Object:BigInt)],m.prototype,"runtimeEntityId",void 0);h([y(kt),g("design:type",typeof Gamemode>"u"?Object:Gamemode)],m.prototype,"playerGamemode",void 0);h([y(l),g("design:type",typeof l>"u"?Object:l)],m.prototype,"playerPosition",void 0);h([y(Fa,It.Little),g("design:type",Number)],m.prototype,"pitch",void 0);h([y(Fa,It.Little),g("design:type",Number)],m.prototype,"yaw",void 0);h([y(rm,It.Little),g("design:type",typeof BigInt>"u"?Object:BigInt)],m.prototype,"seed",void 0);h([y(_R,It.Little),g("design:type",Number)],m.prototype,"biomeType",void 0);h([y(nt),g("design:type",String)],m.prototype,"biomeName",void 0);h([y(kt),g("design:type",Number)],m.prototype,"dimension",void 0);h([y(kt),g("design:type",Number)],m.prototype,"generator",void 0);h([y(kt),g("design:type",typeof Gamemode>"u"?Object:Gamemode)],m.prototype,"worldGamemode",void 0);h([y(O),g("design:type",Boolean)],m.prototype,"hardcore",void 0);h([y(kt),g("design:type",typeof Difficulty>"u"?Object:Difficulty)],m.prototype,"difficulty",void 0);h([y(R),g("design:type",typeof R>"u"?Object:R)],m.prototype,"spawnPosition",void 0);h([y(O),g("design:type",Boolean)],m.prototype,"achievementsDisabled",void 0);h([y(kt),g("design:type",Number)],m.prototype,"editorWorldType",void 0);h([y(O),g("design:type",Boolean)],m.prototype,"createdInEdior",void 0);h([y(O),g("design:type",Boolean)],m.prototype,"exportedFromEdior",void 0);h([y(kt),g("design:type",Number)],m.prototype,"dayCycleStopTime",void 0);h([y(kt),g("design:type",Number)],m.prototype,"eduOffer",void 0);h([y(O),g("design:type",Boolean)],m.prototype,"eduFeatures",void 0);h([y(nt),g("design:type",String)],m.prototype,"eduProductUuid",void 0);h([y(Fa,It.Little),g("design:type",Number)],m.prototype,"rainLevel",void 0);h([y(Fa,It.Little),g("design:type",Number)],m.prototype,"lightningLevel",void 0);h([y(O),g("design:type",Boolean)],m.prototype,"confirmedPlatformLockedContent",void 0);h([y(O),g("design:type",Boolean)],m.prototype,"multiplayerGame",void 0);h([y(O),g("design:type",Boolean)],m.prototype,"broadcastToLan",void 0);h([y(im),g("design:type",Number)],m.prototype,"xblBroadcastMode",void 0);h([y(im),g("design:type",Number)],m.prototype,"platformBroadcastMode",void 0);h([y(O),g("design:type",Boolean)],m.prototype,"commandsEnabled",void 0);h([y(O),g("design:type",Boolean)],m.prototype,"texturePacksRequired",void 0);h([y(Or),g("design:type",typeof Array>"u"?Object:Array)],m.prototype,"gamerules",void 0);h([y(xn),g("design:type",typeof Array>"u"?Object:Array)],m.prototype,"experiments",void 0);h([y(O),g("design:type",Boolean)],m.prototype,"experimentsPreviouslyToggled",void 0);h([y(O),g("design:type",Boolean)],m.prototype,"bonusChest",void 0);h([y(O),g("design:type",Boolean)],m.prototype,"mapEnabled",void 0);h([y(yo),g("design:type",typeof PermissionLevel>"u"?Object:PermissionLevel)],m.prototype,"permissionLevel",void 0);h([y(jc,It.Little),g("design:type",Number)],m.prototype,"serverChunkTickRange",void 0);h([y(O),g("design:type",Boolean)],m.prototype,"hasLockedBehaviorPack",void 0);h([y(O),g("design:type",Boolean)],m.prototype,"hasLockedResourcePack",void 0);h([y(O),g("design:type",Boolean)],m.prototype,"isFromLockedWorldTemplate",void 0);h([y(O),g("design:type",Boolean)],m.prototype,"useMsaGamertagsOnly",void 0);h([y(O),g("design:type",Boolean)],m.prototype,"isFromWorldTemplate",void 0);h([y(O),g("design:type",Boolean)],m.prototype,"isWorldTemplateOptionLocked",void 0);h([y(O),g("design:type",Boolean)],m.prototype,"onlySpawnV1Villagers",void 0);h([y(O),g("design:type",Boolean)],m.prototype,"personaDisabled",void 0);h([y(O),g("design:type",Boolean)],m.prototype,"customSkinsDisabled",void 0);h([y(O),g("design:type",Boolean)],m.prototype,"emoteChatMuted",void 0);h([y(nt),g("design:type",String)],m.prototype,"gameVersion",void 0);h([y(jc,It.Little),g("design:type",Number)],m.prototype,"limitedWorldWidth",void 0);h([y(jc,It.Little),g("design:type",Number)],m.prototype,"limitedWorldLength",void 0);h([y(O),g("design:type",Boolean)],m.prototype,"isNewNether",void 0);h([y(nt),g("design:type",String)],m.prototype,"eduResourceUriButtonName",void 0);h([y(nt),g("design:type",String)],m.prototype,"eduResourceUriLink",void 0);h([y(O),g("design:type",Boolean)],m.prototype,"experimentalGameplayOverride",void 0);h([y(yo),g("design:type",Number)],m.prototype,"chatRestrictionLevel",void 0);h([y(O),g("design:type",Boolean)],m.prototype,"disablePlayerInteractions",void 0);h([y(nt),g("design:type",String)],m.prototype,"serverIdentfier",void 0);h([y(nt),g("design:type",String)],m.prototype,"worldIdentifier",void 0);h([y(nt),g("design:type",String)],m.prototype,"scenarioIdentifier",void 0);h([y(nt),g("design:type",String)],m.prototype,"levelId",void 0);h([y(nt),g("design:type",String)],m.prototype,"worldName",void 0);h([y(nt),g("design:type",String)],m.prototype,"premiumWorldTemplateId",void 0);h([y(O),g("design:type",Boolean)],m.prototype,"isTrial",void 0);h([y(kt),g("design:type",typeof yn>"u"?Object:yn)],m.prototype,"movementAuthority",void 0);h([y(kt),g("design:type",Number)],m.prototype,"rewindHistorySize",void 0);h([y(O),g("design:type",Boolean)],m.prototype,"serverAuthoritativeBlockBreaking",void 0);h([y(jR,It.Little),g("design:type",typeof BigInt>"u"?Object:BigInt)],m.prototype,"currentTick",void 0);h([y(kt),g("design:type",Number)],m.prototype,"enchantmentSeed",void 0);h([y(zp),g("design:type",typeof Array>"u"?Object:Array)],m.prototype,"blockProperties",void 0);h([y(Wp),g("design:type",typeof Array>"u"?Object:Array)],m.prototype,"items",void 0);h([y(nt),g("design:type",String)],m.prototype,"multiplayerCorrelationId",void 0);h([y(O),g("design:type",Boolean)],m.prototype,"serverAuthoritativeInventory",void 0);h([y(nt),g("design:type",String)],m.prototype,"engine",void 0);h([y(yo),g("design:type",Object)],m.prototype,"propertyData1",void 0);h([y(yo),g("design:type",Object)],m.prototype,"propertyData2",void 0);h([y(yo),g("design:type",Object)],m.prototype,"propertyData3",void 0);h([y(rm,It.Little),g("design:type",typeof BigInt>"u"?Object:BigInt)],m.prototype,"blockPaletteChecksum",void 0);h([y(DR),g("design:type",String)],m.prototype,"worldTemplateId",void 0);h([y(O),g("design:type",Boolean)],m.prototype,"clientSideGeneration",void 0);h([y(O),g("design:type",Boolean)],m.prototype,"blockNetworkIdsAreHashes",void 0);h([y(O),g("design:type",Boolean)],m.prototype,"serverControlledSounds",void 0);m=h([MR(p.StartGame)],m);import{Uint8 as ZR,Bool as TR,VarString as Ha,Endianness as om}from"@serenityjs/binarystream";import{Proto as zR,Serialize as Ce}from"@serenityjs/raknet";function Kt(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Kt,"_ts_decorate");function Be(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Be,"_ts_metadata");var yt=class extends f{static{s(this,"TextPacket")}type;needsTranslation;source;message;parameters;xuid;platformChatId;filtered};Kt([Ce(ZR),Be("design:type",typeof TextPacketType>"u"?Object:TextPacketType)],yt.prototype,"type",void 0);Kt([Ce(TR),Be("design:type",Boolean)],yt.prototype,"needsTranslation",void 0);Kt([Ce(tf,om.Little,"type"),Be("design:type",Object)],yt.prototype,"source",void 0);Kt([Ce(Ha),Be("design:type",String)],yt.prototype,"message",void 0);Kt([Ce(ef,om.Little,"type"),Be("design:type",Object)],yt.prototype,"parameters",void 0);Kt([Ce(Ha),Be("design:type",String)],yt.prototype,"xuid",void 0);Kt([Ce(Ha),Be("design:type",String)],yt.prototype,"platformChatId",void 0);Kt([Ce(Ha),Be("design:type",String)],yt.prototype,"filtered",void 0);yt=Kt([zR(p.Text)],yt);import{VarString as am}from"@serenityjs/binarystream";import{Proto as FR,Serialize as sm}from"@serenityjs/raknet";function Uc(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Uc,"_ts_decorate");function nm(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(nm,"_ts_metadata");var ii=class extends f{static{s(this,"ToastRequestPacket")}title;message};Uc([sm(am),nm("design:type",String)],ii.prototype,"title",void 0);Uc([sm(am),nm("design:type",String)],ii.prototype,"message",void 0);ii=Uc([FR(p.ToastRequest)],ii);import{Endianness as HR,Int64 as WR,Uint8 as cm}from"@serenityjs/binarystream";import{Proto as qR,Serialize as qa}from"@serenityjs/raknet";function wo(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(wo,"_ts_decorate");function Wa(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Wa,"_ts_metadata");var Ve=class extends f{static{s(this,"UpdateAbilitiesPacket")}entityUniqueId;permissionLevel;commandPermissionLevel;abilities};wo([qa(WR,HR.Little),Wa("design:type",typeof BigInt>"u"?Object:BigInt)],Ve.prototype,"entityUniqueId",void 0);wo([qa(cm),Wa("design:type",typeof PermissionLevel>"u"?Object:PermissionLevel)],Ve.prototype,"permissionLevel",void 0);wo([qa(cm),Wa("design:type",typeof CommandPermissionLevel>"u"?Object:CommandPermissionLevel)],Ve.prototype,"commandPermissionLevel",void 0);wo([qa(Vn),Wa("design:type",typeof Array>"u"?Object:Array)],Ve.prototype,"abilities",void 0);Ve=wo([qR(p.UpdateAbilities)],Ve);import{Bool as Po}from"@serenityjs/binarystream";import{Proto as AR,Serialize as Ro}from"@serenityjs/raknet";function oi(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(oi,"_ts_decorate");function bo(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(bo,"_ts_metadata");var Yt=class extends f{static{s(this,"UpdateAdventureSettingsPacket")}noPvm;noPvp;immutableWorld;showNameTags;autoJump};oi([Ro(Po),bo("design:type",Boolean)],Yt.prototype,"noPvm",void 0);oi([Ro(Po),bo("design:type",Boolean)],Yt.prototype,"noPvp",void 0);oi([Ro(Po),bo("design:type",Boolean)],Yt.prototype,"immutableWorld",void 0);oi([Ro(Po),bo("design:type",Boolean)],Yt.prototype,"showNameTags",void 0);oi([Ro(Po),bo("design:type",Boolean)],Yt.prototype,"autoJump",void 0);Yt=oi([AR(p.UpdateAdventureSettings)],Yt);import{VarLong as GR}from"@serenityjs/binarystream";import{Proto as KR,Serialize as Dc}from"@serenityjs/raknet";function Aa(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Aa,"_ts_decorate");function Nc(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Nc,"_ts_metadata");var sr=class extends f{static{s(this,"UpdateAttributesPacket")}runtimeActorId;attributes;inputTick};Aa([Dc(GR),Nc("design:type",typeof BigInt>"u"?Object:BigInt)],sr.prototype,"runtimeActorId",void 0);Aa([Dc(of),Nc("design:type",typeof Array>"u"?Object:Array)],sr.prototype,"attributes",void 0);Aa([Dc(ut),Nc("design:type",typeof BigInt>"u"?Object:BigInt)],sr.prototype,"inputTick",void 0);sr=Aa([KR(p.UpdateAttributes)],sr);import{VarInt as Mc}from"@serenityjs/binarystream";import{Proto as YR,Serialize as Ka}from"@serenityjs/raknet";function xo(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(xo,"_ts_decorate");function Ga(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Ga,"_ts_metadata");var _e=class extends f{static{s(this,"UpdateBlockPacket")}position;networkBlockId;flags;layer};xo([Ka(R),Ga("design:type",typeof R>"u"?Object:R)],_e.prototype,"position",void 0);xo([Ka(Mc),Ga("design:type",Number)],_e.prototype,"networkBlockId",void 0);xo([Ka(Mc),Ga("design:type",typeof UpdateBlockFlagsType>"u"?Object:UpdateBlockFlagsType)],_e.prototype,"flags",void 0);xo([Ka(Mc),Ga("design:type",typeof UpdateBlockLayerType>"u"?Object:UpdateBlockLayerType)],_e.prototype,"layer",void 0);_e=xo([YR(p.UpdateBlock)],_e);import{ZigZag as QR}from"@serenityjs/binarystream";import{Proto as XR,Serialize as $R}from"@serenityjs/raknet";function pm(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(pm,"_ts_decorate");function JR(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(JR,"_ts_metadata");var Io=class extends f{static{s(this,"SetTimePacket")}time};pm([$R(QR),JR("design:type",Number)],Io.prototype,"time",void 0);Io=pm([XR(p.SetTime)],Io);import{VarString as ER}from"@serenityjs/binarystream";import{Proto as vR,Serialize as tx}from"@serenityjs/raknet";function fm(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(fm,"_ts_decorate");function LR(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(LR,"_ts_metadata");var ko=class extends f{static{s(this,"RemoveObjectivePacket")}objectiveName};fm([tx(ER),LR("design:type",String)],ko.prototype,"objectiveName",void 0);ko=fm([vR(p.RemoveObjective)],ko);import{VarString as Ya,ZigZag as ex}from"@serenityjs/binarystream";import{Proto as rx,Serialize as Oo}from"@serenityjs/raknet";function ni(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(ni,"_ts_decorate");function So(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(So,"_ts_metadata");var Jt=class extends f{static{s(this,"SetDisplayObjectivePacket")}displaySlot;objectiveName;displayName;criteriaName;sortOrder};ni([Oo(Ya),So("design:type",typeof DisplaySlotType>"u"?Object:DisplaySlotType)],Jt.prototype,"displaySlot",void 0);ni([Oo(Ya),So("design:type",String)],Jt.prototype,"objectiveName",void 0);ni([Oo(Ya),So("design:type",String)],Jt.prototype,"displayName",void 0);ni([Oo(Ya),So("design:type",String)],Jt.prototype,"criteriaName",void 0);ni([Oo(ex),So("design:type",typeof ObjectiveSortOrder>"u"?Object:ObjectiveSortOrder)],Jt.prototype,"sortOrder",void 0);Jt=ni([rx(p.SetDisplayObjective)],Jt);import{VarInt as ix}from"@serenityjs/binarystream";import{Proto as ox,Serialize as lm}from"@serenityjs/raknet";function Zc(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Zc,"_ts_decorate");function dm(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(dm,"_ts_metadata");var ai=class extends f{static{s(this,"SetScorePacket")}type;entries};Zc([lm(ix),dm("design:type",typeof ScoreboardActionType>"u"?Object:ScoreboardActionType)],ai.prototype,"type",void 0);Zc([lm(Xf,0,"type"),dm("design:type",typeof Array>"u"?Object:Array)],ai.prototype,"entries",void 0);ai=Zc([ox(p.SetScore)],ai);import{VarInt as nx}from"@serenityjs/binarystream";import{Proto as ax,Serialize as um}from"@serenityjs/raknet";function Tc(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Tc,"_ts_decorate");function mm(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(mm,"_ts_metadata");var si=class extends f{static{s(this,"SetScoreboardIdentityPacket")}action;entries};Tc([um(nx),mm("design:type",typeof ScoreboardIdentityAction>"u"?Object:ScoreboardIdentityAction)],si.prototype,"action",void 0);Tc([um(Tn),mm("design:type",typeof Tn>"u"?Object:Tn)],si.prototype,"entries",void 0);si=Tc([ax(p.SetScoreboardIdentity)],si);import{VarString as sx,Uint16 as cx,Endianness as px,Bool as fx}from"@serenityjs/binarystream";import{Proto as dx,Serialize as Fc}from"@serenityjs/raknet";function Ja(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Ja,"_ts_decorate");function zc(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(zc,"_ts_metadata");var cr=class extends f{static{s(this,"TransferPacket")}address;port;reloadWorld};Ja([Fc(sx),zc("design:type",String)],cr.prototype,"address",void 0);Ja([Fc(cx,px.Little),zc("design:type",Number)],cr.prototype,"port",void 0);Ja([Fc(fx),zc("design:type",Boolean)],cr.prototype,"reloadWorld",void 0);cr=Ja([dx(p.Transfer)],cr);import{Proto as lx,Serialize as gm}from"@serenityjs/raknet";import{Uint8 as mx}from"@serenityjs/binarystream";function Hc(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Hc,"_ts_decorate");function hm(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(hm,"_ts_metadata");var ci=class extends f{static{s(this,"SetHudPacket")}elements;visibility};Hc([gm(Ef),hm("design:type",typeof Array>"u"?Object:Array)],ci.prototype,"elements",void 0);Hc([gm(mx),hm("design:type",typeof HudVisibility>"u"?Object:HudVisibility)],ci.prototype,"visibility",void 0);ci=Hc([lx(p.SetHud)],ci);import{VarLong as wm}from"@serenityjs/binarystream";import{Proto as ux,Serialize as bm}from"@serenityjs/raknet";function Wc(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Wc,"_ts_decorate");function ym(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(ym,"_ts_metadata");var pi=class extends f{static{s(this,"TakeItemActorPacket")}itemRuntimeId;targetRuntimeId};Wc([bm(wm),ym("design:type",typeof BigInt>"u"?Object:BigInt)],pi.prototype,"itemRuntimeId",void 0);Wc([bm(wm),ym("design:type",typeof BigInt>"u"?Object:BigInt)],pi.prototype,"targetRuntimeId",void 0);pi=Wc([ux(p.TakeItemActor)],pi);import{Bool as hx,Endianness as gx,Uint64 as yx}from"@serenityjs/binarystream";import{Proto as wx,Serialize as Rm}from"@serenityjs/raknet";function qc(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(qc,"_ts_decorate");function Pm(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Pm,"_ts_metadata");var fi=class extends f{static{s(this,"NetworkStackLatencyPacket")}timestamp;fromServer};qc([Rm(yx,gx.Little),Pm("design:type",typeof BigInt>"u"?Object:BigInt)],fi.prototype,"timestamp",void 0);qc([Rm(hx),Pm("design:type",Boolean)],fi.prototype,"fromServer",void 0);fi=qc([wx(p.NetworkStackLatency)],fi);import{VarInt as bx,ZigZong as Px,Endianness as xm}from"@serenityjs/binarystream";import{Proto as Rx,Serialize as Xa}from"@serenityjs/raknet";function Bo(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Bo,"_ts_decorate");function Qa(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Qa,"_ts_metadata");var je=class extends f{static{s(this,"BossEventPacket")}targetUniqueId;type;add;update};Bo([Xa(Px),Qa("design:type",typeof BigInt>"u"?Object:BigInt)],je.prototype,"targetUniqueId",void 0);Bo([Xa(bx),Qa("design:type",typeof BossEventUpdateType>"u"?Object:BossEventUpdateType)],je.prototype,"type",void 0);Bo([Xa(Fn,xm.Little,"type"),Qa("design:type",typeof Fn>"u"?Object:Fn)],je.prototype,"add",void 0);Bo([Xa(Wn,xm.Little,"type"),Qa("design:type",typeof Wn>"u"?Object:Wn)],je.prototype,"update",void 0);je=Bo([Rx(p.BossEvent)],je);import{Endianness as xx,Int64 as Ix,ZigZag as kx,VarString as $a}from"@serenityjs/binarystream";import{Proto as Sx,Serialize as li}from"@serenityjs/raknet";function pr(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(pr,"_ts_decorate");function di(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(di,"_ts_metadata");var _t=class extends f{static{s(this,"NpcDialoguePacket")}uniqueEntityId;action;dialogue;scene;name;json};pr([li(Ix,xx.Little),di("design:type",typeof BigInt>"u"?Object:BigInt)],_t.prototype,"uniqueEntityId",void 0);pr([li(kx),di("design:type",typeof NpcDialogueAction>"u"?Object:NpcDialogueAction)],_t.prototype,"action",void 0);pr([li($a),di("design:type",String)],_t.prototype,"dialogue",void 0);pr([li($a),di("design:type",String)],_t.prototype,"scene",void 0);pr([li($a),di("design:type",String)],_t.prototype,"name",void 0);pr([li($a),di("design:type",String)],_t.prototype,"json",void 0);_t=pr([Sx(p.NpcDialogue)],_t);import{Proto as Ox,Serialize as Gc}from"@serenityjs/raknet";import{Uint8 as Bx,VarLong as Cx,ZigZag as Vx}from"@serenityjs/binarystream";function La(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(La,"_ts_decorate");function Ac(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Ac,"_ts_metadata");var fr=class extends f{static{s(this,"ActorEventPacket")}actorRuntimeId;eventId;eventData};La([Gc(Cx),Ac("design:type",typeof BigInt>"u"?Object:BigInt)],fr.prototype,"actorRuntimeId",void 0);La([Gc(Bx),Ac("design:type",Number)],fr.prototype,"eventId",void 0);La([Gc(Vx),Ac("design:type",Number)],fr.prototype,"eventData",void 0);fr=La([Ox(p.ActorEvent)],fr);import{Proto as _x,Serialize as lr}from"@serenityjs/raknet";import{Float64 as jx,VarInt as Ux,VarString as Ea}from"@serenityjs/binarystream";function Ue(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Ue,"_ts_decorate");function dr(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(dr,"_ts_metadata");var St=class extends f{static{s(this,"AnimateEntityPacket")}animation;nextState;stopExpression;stopExpressionVersion;controller;blendOutTime;actorRuntimeIds};Ue([lr(Ea),dr("design:type",String)],St.prototype,"animation",void 0);Ue([lr(Ea),dr("design:type",String)],St.prototype,"nextState",void 0);Ue([lr(Ea),dr("design:type",String)],St.prototype,"stopExpression",void 0);Ue([lr(Ux),dr("design:type",Number)],St.prototype,"stopExpressionVersion",void 0);Ue([lr(Ea),dr("design:type",String)],St.prototype,"controller",void 0);Ue([lr(jx),dr("design:type",Number)],St.prototype,"blendOutTime",void 0);Ue([lr(qn),dr("design:type",typeof qn>"u"?Object:qn)],St.prototype,"actorRuntimeIds",void 0);St=Ue([_x(p.AnimateEntity)],St);import{Proto as Nx,Serialize as km}from"@serenityjs/raknet";import{VarLong as Dx}from"@serenityjs/binarystream";function Kc(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Kc,"_ts_decorate");function Im(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Im,"_ts_metadata");var mi=class extends f{static{s(this,"EmoteListPacket")}runtimeId;emoteIds};Kc([km(Dx),Im("design:type",typeof BigInt>"u"?Object:BigInt)],mi.prototype,"runtimeId",void 0);Kc([km(td),Im("design:type",typeof Array>"u"?Object:Array)],mi.prototype,"emoteIds",void 0);mi=Kc([Nx(p.EmoteList)],mi);import{Proto as Mx,Serialize as hi}from"@serenityjs/raknet";import{Byte as Zx,VarInt as Tx,VarString as Yc,VarLong as zx}from"@serenityjs/binarystream";function mr(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(mr,"_ts_decorate");function ui(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(ui,"_ts_metadata");var jt=class extends f{static{s(this,"EmotePacket")}actorRuntimeId;emoteId;tickLength;xuid;platformChatId;flags};mr([hi(zx),ui("design:type",typeof BigInt>"u"?Object:BigInt)],jt.prototype,"actorRuntimeId",void 0);mr([hi(Yc),ui("design:type",String)],jt.prototype,"emoteId",void 0);mr([hi(Tx),ui("design:type",Number)],jt.prototype,"tickLength",void 0);mr([hi(Yc),ui("design:type",String)],jt.prototype,"xuid",void 0);mr([hi(Yc),ui("design:type",String)],jt.prototype,"platformChatId",void 0);mr([hi(Zx),ui("design:type",typeof EmoteFlags>"u"?Object:EmoteFlags)],jt.prototype,"flags",void 0);jt=mr([Mx(p.Emote)],jt);import{Proto as Fx,Serialize as Vo}from"@serenityjs/raknet";import{Uuid as Hx,VarString as Sm,Bool as Wx}from"@serenityjs/binarystream";function gi(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(gi,"_ts_decorate");function Co(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Co,"_ts_metadata");var Qt=class extends f{static{s(this,"PlayerSkinPacket")}uuid;skin;skinName;oldSkinName;isVerified};gi([Vo(Hx),Co("design:type",String)],Qt.prototype,"uuid",void 0);gi([Vo(qe),Co("design:type",typeof qe>"u"?Object:qe)],Qt.prototype,"skin",void 0);gi([Vo(Sm),Co("design:type",String)],Qt.prototype,"skinName",void 0);gi([Vo(Sm),Co("design:type",String)],Qt.prototype,"oldSkinName",void 0);gi([Vo(Wx),Co("design:type",Boolean)],Qt.prototype,"isVerified",void 0);Qt=gi([Fx(p.PlayerSkin)],Qt);import{Proto as qx,Serialize as Bm}from"@serenityjs/raknet";import{CompoundTag as Jc}from"@serenityjs/nbt";function Qc(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Qc,"_ts_decorate");function Om(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Om,"_ts_metadata");var yi=class extends f{static{s(this,"BlockActorDataPacket")}position;nbt};Qc([Bm(R),Om("design:type",typeof R>"u"?Object:R)],yi.prototype,"position",void 0);Qc([Bm(Jc,!0),Om("design:type",typeof Jc>"u"?Object:Jc)],yi.prototype,"nbt",void 0);yi=Qc([qx(p.BlockActorData)],yi);import{Int32 as Gx,Endianness as Kx}from"@serenityjs/binarystream";import{Proto as Yx,Serialize as Jx}from"@serenityjs/raknet";function Cm(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Cm,"_ts_decorate");function Ax(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Ax,"_ts_metadata");var _o=class extends f{static{s(this,"AwardAchievementPacket")}identifier};Cm([Jx(Gx,Kx.Little),Ax("design:type",Number)],_o.prototype,"identifier",void 0);_o=Cm([Yx(p.AwardAchievement)],_o);import{VarString as Xx}from"@serenityjs/binarystream";import{Proto as $x,Serialize as Lx}from"@serenityjs/raknet";function Vm(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Vm,"_ts_decorate");function Qx(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Qx,"_ts_metadata");var jo=class extends f{static{s(this,"ServerToClientHandshakePacket")}token};Vm([Lx(Xx),Qx("design:type",String)],jo.prototype,"token",void 0);jo=Vm([$x(p.ServerToClientHandshake)],jo);import{Proto as Ex,Serialize as jm}from"@serenityjs/raknet";import{VarString as vx}from"@serenityjs/binarystream";function Xc(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Xc,"_ts_decorate");function _m(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(_m,"_ts_metadata");var wi=class extends f{static{s(this,"DeathInfoPacket")}cause;deathParameters};Xc([jm(vx),_m("design:type",String)],wi.prototype,"cause",void 0);Xc([jm(rd),_m("design:type",typeof Array>"u"?Object:Array)],wi.prototype,"deathParameters",void 0);wi=Xc([Ex(p.DeathInfo)],wi);import{Proto as tI,Serialize as No}from"@serenityjs/raknet";import{Bool as eI,VarInt as va}from"@serenityjs/binarystream";function bi(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(bi,"_ts_decorate");function Uo(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Uo,"_ts_metadata");var Xt=class extends f{static{s(this,"SetPlayerInventoryOptionsPacket")}leftTab;rightTab;filtering;layout;craftingLayout};bi([No(va),Uo("design:type",typeof InventoryLeftTab>"u"?Object:InventoryLeftTab)],Xt.prototype,"leftTab",void 0);bi([No(va),Uo("design:type",typeof InventoryRightTab>"u"?Object:InventoryRightTab)],Xt.prototype,"rightTab",void 0);bi([No(eI),Uo("design:type",Boolean)],Xt.prototype,"filtering",void 0);bi([No(va),Uo("design:type",typeof InventoryLayout>"u"?Object:InventoryLayout)],Xt.prototype,"layout",void 0);bi([No(va),Uo("design:type",typeof InventoryLayout>"u"?Object:InventoryLayout)],Xt.prototype,"craftingLayout",void 0);Xt=bi([tI(p.SetPlayerInventoryOptions)],Xt);import{Proto as iI}from"@serenityjs/raknet";function rI(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(rI,"_ts_decorate");var ts=class extends f{static{s(this,"ClientboundCloseFormPacket")}};ts=rI([iI(p.ClientboundCloseForm)],ts);import{Bool as oI,Byte as nI,VarInt as aI,VarLong as sI,ZigZag as Um}from"@serenityjs/binarystream";import{Proto as cI,Serialize as hr}from"@serenityjs/raknet";function Ne(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Ne,"_ts_decorate");function ur(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(ur,"_ts_metadata");var Ot=class extends f{static{s(this,"MobEffectPacket")}runtimeId;eventId;effectId;amplifier;particles;duration;inputTick};Ne([hr(sI),ur("design:type",typeof BigInt>"u"?Object:BigInt)],Ot.prototype,"runtimeId",void 0);Ne([hr(nI),ur("design:type",typeof MobEffectEvents>"u"?Object:MobEffectEvents)],Ot.prototype,"eventId",void 0);Ne([hr(Um),ur("design:type",typeof EffectType>"u"?Object:EffectType)],Ot.prototype,"effectId",void 0);Ne([hr(Um),ur("design:type",Number)],Ot.prototype,"amplifier",void 0);Ne([hr(oI),ur("design:type",Boolean)],Ot.prototype,"particles",void 0);Ne([hr(aI),ur("design:type",Number)],Ot.prototype,"duration",void 0);Ne([hr(ut),ur("design:type",typeof BigInt>"u"?Object:BigInt)],Ot.prototype,"inputTick",void 0);Ot=Ne([cI(p.MobEffect)],Ot);import{Proto as pI,Serialize as Dm}from"@serenityjs/raknet";import{Short as fI,ZigZag as dI}from"@serenityjs/binarystream";function $c(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s($c,"_ts_decorate");function Nm(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Nm,"_ts_metadata");var Pi=class extends f{static{s(this,"CompletedUsingItemPacket")}itemId;itemUseMethod};$c([Dm(fI),Nm("design:type",Number)],Pi.prototype,"itemId",void 0);$c([Dm(dI),Nm("design:type",typeof ItemUseMethod>"u"?Object:ItemUseMethod)],Pi.prototype,"itemUseMethod",void 0);Pi=$c([pI(p.CompletedUsingItem)],Pi);import{VarLong as lI,VarString as Mm,Uint8 as Zm}from"@serenityjs/binarystream";import{Proto as mI,Serialize as Mo}from"@serenityjs/raknet";function Ri(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Ri,"_ts_decorate");function Do(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Do,"_ts_metadata");var $t=class extends f{static{s(this,"NpcRequestPacket")}runtimeActorId;type;actions;index;scene};Ri([Mo(lI),Do("design:type",typeof BigInt>"u"?Object:BigInt)],$t.prototype,"runtimeActorId",void 0);Ri([Mo(Zm),Do("design:type",typeof NpcRequestType>"u"?Object:NpcRequestType)],$t.prototype,"type",void 0);Ri([Mo(Mm),Do("design:type",String)],$t.prototype,"actions",void 0);Ri([Mo(Zm),Do("design:type",Number)],$t.prototype,"index",void 0);Ri([Mo(Mm),Do("design:type",String)],$t.prototype,"scene",void 0);$t=Ri([mI(p.NpcRequest)],$t);import{Proto as uI,Serialize as zm}from"@serenityjs/raknet";import{Bool as hI}from"@serenityjs/binarystream";function Lc(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Lc,"_ts_decorate");function Tm(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Tm,"_ts_metadata");var xi=class extends f{static{s(this,"OpenSignPacket")}position;isFrontSide};Lc([zm(R),Tm("design:type",typeof R>"u"?Object:R)],xi.prototype,"position",void 0);Lc([zm(hI),Tm("design:type",Boolean)],xi.prototype,"isFrontSide",void 0);xi=Lc([uI(p.OpenSign)],xi);import{Bool as gI,ZigZag as yI}from"@serenityjs/binarystream";import{Proto as wI,Serialize as Hm}from"@serenityjs/raknet";function Ec(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Ec,"_ts_decorate");function Fm(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Fm,"_ts_metadata");var Ii=class extends f{static{s(this,"ServerboundLoadingScreenPacketPacket")}type;hasScreenId};Ec([Hm(yI),Fm("design:type",typeof ServerboundLoadingScreenType>"u"?Object:ServerboundLoadingScreenType)],Ii.prototype,"type",void 0);Ec([Hm(gI),Fm("design:type",Boolean)],Ii.prototype,"hasScreenId",void 0);Ii=Ec([wI(p.ServerboundLoadingScreenPacket)],Ii);import{Proto as bI,Serialize as rs}from"@serenityjs/raknet";import{Float32 as Wm,Uint8 as qm}from"@serenityjs/binarystream";function Zo(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Zo,"_ts_decorate");function es(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(es,"_ts_metadata");var De=class extends f{static{s(this,"CameraShakePacket")}intensity;duration;shakeType;shakeAction};Zo([rs(Wm),es("design:type",Number)],De.prototype,"intensity",void 0);Zo([rs(Wm),es("design:type",Number)],De.prototype,"duration",void 0);Zo([rs(qm),es("design:type",typeof ShakeType>"u"?Object:ShakeType)],De.prototype,"shakeType",void 0);Zo([rs(qm),es("design:type",typeof ShakeAction>"u"?Object:ShakeAction)],De.prototype,"shakeAction",void 0);De=Zo([bI(p.CameraShake)],De);import{Proto as PI,Serialize as tp}from"@serenityjs/raknet";import{Uint8 as Am}from"@serenityjs/binarystream";function is(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(is,"_ts_decorate");function vc(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(vc,"_ts_metadata");var gr=class extends f{static{s(this,"BookEditPacket")}action;bookSlot;actions};is([tp(Am),vc("design:type",typeof BookEditAction>"u"?Object:BookEditAction)],gr.prototype,"action",void 0);is([tp(Am),vc("design:type",Number)],gr.prototype,"bookSlot",void 0);is([tp(Gn,!1,"action"),vc("design:type",typeof Gn>"u"?Object:Gn)],gr.prototype,"actions",void 0);gr=is([PI(p.BookEdit)],gr);import{Proto as RI,Serialize as Km}from"@serenityjs/raknet";import{VarInt as xI,VarString as II}from"@serenityjs/binarystream";function ep(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(ep,"_ts_decorate");function Gm(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Gm,"_ts_metadata");var ki=class extends f{static{s(this,"PlayerStartItemCooldownPacket")}category;duration};ep([Km(II),Gm("design:type",String)],ki.prototype,"category",void 0);ep([Km(xI),Gm("design:type",Number)],ki.prototype,"duration",void 0);ki=ep([RI(p.PlayerStartItemCooldown)],ki);import{Proto as SI,Serialize as OI}from"@serenityjs/raknet";function Ym(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Ym,"_ts_decorate");function kI(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(kI,"_ts_metadata");var To=class extends f{static{s(this,"CameraPresetsPacket")}presets};Ym([OI(dd),kI("design:type",typeof Array>"u"?Object:Array)],To.prototype,"presets",void 0);To=Ym([SI(p.CameraPresetsPacket)],To);import{Proto as CI,Serialize as VI}from"@serenityjs/raknet";function Jm(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Jm,"_ts_decorate");function BI(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(BI,"_ts_metadata");var zo=class extends f{static{s(this,"CameraInstructionsPacket")}instruction};Jm([VI(Yn),BI("design:type",typeof Yn>"u"?Object:Yn)],zo.prototype,"instruction",void 0);zo=Jm([CI(p.CameraInstructions)],zo);import{Proto as _I,Serialize as Ho}from"@serenityjs/raknet";import{Bool as jI}from"@serenityjs/binarystream";function Si(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Si,"_ts_decorate");function Fo(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Fo,"_ts_metadata");var Lt=class extends f{static{s(this,"CraftingDataPacket")}crafting;potions;containers;materitalReducers;clearRecipes};Si([Ho(bd),Fo("design:type",typeof Array>"u"?Object:Array)],Lt.prototype,"crafting",void 0);Si([Ho(Pd),Fo("design:type",typeof Array>"u"?Object:Array)],Lt.prototype,"potions",void 0);Si([Ho(Rd),Fo("design:type",typeof Array>"u"?Object:Array)],Lt.prototype,"containers",void 0);Si([Ho(xd),Fo("design:type",typeof Array>"u"?Object:Array)],Lt.prototype,"materitalReducers",void 0);Si([Ho(jI),Fo("design:type",Boolean)],Lt.prototype,"clearRecipes",void 0);Lt=Si([_I(p.CraftingData)],Lt);import{Proto as UI,Serialize as qo}from"@serenityjs/raknet";import{Byte as NI,ZigZong as DI,VarString as MI}from"@serenityjs/binarystream";function Oi(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Oi,"_ts_decorate");function Wo(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Wo,"_ts_metadata");var Et=class extends f{static{s(this,"SpawnParticleEffectPacket")}dimensionId;uniqueId;position;effectName;molangVariables};Oi([qo(NI),Wo("design:type",Number)],Et.prototype,"dimensionId",void 0);Oi([qo(DI),Wo("design:type",typeof BigInt>"u"?Object:BigInt)],Et.prototype,"uniqueId",void 0);Oi([qo(l),Wo("design:type",typeof l>"u"?Object:l)],Et.prototype,"position",void 0);Oi([qo(MI),Wo("design:type",String)],Et.prototype,"effectName",void 0);Oi([qo(k),Wo("design:type",Object)],Et.prototype,"molangVariables",void 0);Et=Oi([UI(p.SpawnParticleEffect)],Et);import{Proto as ZI,Serialize as ip}from"@serenityjs/raknet";import{Uint8 as TI,ZigZag as Qm}from"@serenityjs/binarystream";function os(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(os,"_ts_decorate");function rp(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(rp,"_ts_metadata");var yr=class extends f{static{s(this,"ContainerSetDataPacket")}containerId;type;value};os([ip(TI),rp("design:type",typeof ContainerId>"u"?Object:ContainerId)],yr.prototype,"containerId",void 0);os([ip(Qm),rp("design:type",typeof ContainerDataType>"u"?Object:ContainerDataType)],yr.prototype,"type",void 0);os([ip(Qm),rp("design:type",Number)],yr.prototype,"value",void 0);yr=os([ZI(p.ContainerSetData)],yr);import{Proto as FI,Serialize as HI}from"@serenityjs/raknet";import{CompoundTag as op}from"@serenityjs/nbt";function Xm(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Xm,"_ts_decorate");function zI(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(zI,"_ts_metadata");var Ao=class extends f{static{s(this,"AvailableActorIdentifiersPacket")}data};Xm([HI(op,!0),zI("design:type",typeof op>"u"?Object:op)],Ao.prototype,"data",void 0);Ao=Xm([FI(p.AvailableActorIdentifiers)],Ao);import{Proto as WI,Serialize as as}from"@serenityjs/raknet";import{Bool as $m}from"@serenityjs/binarystream";function Go(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Go,"_ts_decorate");function ns(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(ns,"_ts_metadata");var Me=class extends f{static{s(this,"StructureBlockUpdatePacket")}blockPosition;structureEditData;trigger;isWaterLogged};Go([as(R),ns("design:type",typeof R>"u"?Object:R)],Me.prototype,"blockPosition",void 0);Go([as(Jn),ns("design:type",typeof Jn>"u"?Object:Jn)],Me.prototype,"structureEditData",void 0);Go([as($m),ns("design:type",Boolean)],Me.prototype,"trigger",void 0);Go([as($m),ns("design:type",Boolean)],Me.prototype,"isWaterLogged",void 0);Me=Go([WI(p.StructureBlockUpdate)],Me);import{Proto as AI,Serialize as GI}from"@serenityjs/raknet";function Lm(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Lm,"_ts_decorate");function qI(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(qI,"_ts_metadata");var Ko=class extends f{static{s(this,"DimensionDataPacket")}definitionGroup};Lm([GI(Qn),qI("design:type",typeof Qn>"u"?Object:Qn)],Ko.prototype,"definitionGroup",void 0);Ko=Lm([AI(p.DimensionData)],Ko);import{Proto as YI,Serialize as JI}from"@serenityjs/raknet";function Em(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Em,"_ts_decorate");function KI(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(KI,"_ts_metadata");var Yo=class extends f{static{s(this,"PlayerEnchantOptionsPacket")}enchantOptions};Em([JI(Yd),KI("design:type",typeof Array>"u"?Object:Array)],Yo.prototype,"enchantOptions",void 0);Yo=Em([YI(p.PlayerEnchantOptions)],Yo);import{Proto as XI}from"@serenityjs/raknet";function QI(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(QI,"_ts_decorate");var ss=class extends f{static{s(this,"ClientToServerHandshakePacket")}};ss=QI([XI(p.ClientToServerHandshake)],ss);import{VarLong as $I}from"@serenityjs/binarystream";import{Proto as LI,Serialize as Ci}from"@serenityjs/raknet";function wr(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(wr,"_ts_decorate");function Bi(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Bi,"_ts_metadata");var Ut=class extends f{static{s(this,"MobArmorEquipmentPacket")}runtimeId;helmet;chestplate;leggings;boots;body};wr([Ci($I),Bi("design:type",typeof BigInt>"u"?Object:BigInt)],Ut.prototype,"runtimeId",void 0);wr([Ci(x),Bi("design:type",typeof x>"u"?Object:x)],Ut.prototype,"helmet",void 0);wr([Ci(x),Bi("design:type",typeof x>"u"?Object:x)],Ut.prototype,"chestplate",void 0);wr([Ci(x),Bi("design:type",typeof x>"u"?Object:x)],Ut.prototype,"leggings",void 0);wr([Ci(x),Bi("design:type",typeof x>"u"?Object:x)],Ut.prototype,"boots",void 0);wr([Ci(x),Bi("design:type",typeof x>"u"?Object:x)],Ut.prototype,"body",void 0);Ut=wr([LI(p.MobArmorEquipment)],Ut);import{ZigZag as vI}from"@serenityjs/binarystream";import{Proto as tk,Serialize as ek}from"@serenityjs/raknet";function vm(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(vm,"_ts_decorate");function EI(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(EI,"_ts_metadata");var Jo=class extends f{static{s(this,"RiderJumpPacket")}strength};vm([ek(vI),EI("design:type",Number)],Jo.prototype,"strength",void 0);Jo=vm([tk(p.RiderJump)],Jo);import{Proto as rk,Serialize as ap}from"@serenityjs/raknet";import{ZigZag as tu}from"@serenityjs/binarystream";function cs(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(cs,"_ts_decorate");function np(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(np,"_ts_metadata");var br=class extends f{static{s(this,"BlockEventPacket")}position;type;data};cs([ap(R),np("design:type",typeof R>"u"?Object:R)],br.prototype,"position",void 0);cs([ap(tu),np("design:type",typeof BlockEventType>"u"?Object:BlockEventType)],br.prototype,"type",void 0);cs([ap(tu),np("design:type",Number)],br.prototype,"data",void 0);br=cs([rk(p.BlockEvent)],br);import{Bool as ik,Uint64 as ok,Uint8 as nk}from"@serenityjs/binarystream";import{Proto as ak,Serialize as cp}from"@serenityjs/raknet";function ps(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(ps,"_ts_decorate");function sp(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(sp,"_ts_metadata");var Pr=class extends f{static{s(this,"EntityPickRequestPacket")}runtimeEntityId;slot;hasData};ps([cp(ok),sp("design:type",typeof BigInt>"u"?Object:BigInt)],Pr.prototype,"runtimeEntityId",void 0);ps([cp(nk),sp("design:type",Number)],Pr.prototype,"slot",void 0);ps([cp(ik),sp("design:type",Boolean)],Pr.prototype,"hasData",void 0);Pr=ps([ak(p.EntityPickRequest)],Pr);import{Proto as sk,Serialize as fp}from"@serenityjs/raknet";import{ZigZag as eu,ZigZong as ck}from"@serenityjs/binarystream";function fs(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(fs,"_ts_decorate");function pp(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(pp,"_ts_metadata");var Rr=class extends f{static{s(this,"HurtArmorPacket")}cause;damage;slots};fs([fp(eu),pp("design:type",Number)],Rr.prototype,"cause",void 0);fs([fp(eu),pp("design:type",Number)],Rr.prototype,"damage",void 0);fs([fp(ck),pp("design:type",Number)],Rr.prototype,"slots",void 0);Rr=fs([sk(p.HurtArmor)],Rr);import{Proto as pk,Serialize as iu}from"@serenityjs/raknet";import{Byte as fk,VarLong as dk}from"@serenityjs/binarystream";function dp(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(dp,"_ts_decorate");function ru(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(ru,"_ts_metadata");var Vi=class extends f{static{s(this,"ShowCreditsPacket")}playerRuntimeId;creditsState};dp([iu(dk),ru("design:type",typeof BigInt>"u"?Object:BigInt)],Vi.prototype,"playerRuntimeId",void 0);dp([iu(fk),ru("design:type",Number)],Vi.prototype,"creditsState",void 0);Vi=dp([pk(p.ShowCredits)],Vi);import{VarInt as lk}from"@serenityjs/binarystream";import{Proto as mk,Serialize as nu}from"@serenityjs/raknet";function lp(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(lp,"_ts_decorate");function ou(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(ou,"_ts_metadata");var _i=class extends f{static{s(this,"UpdateClientInputLocksPacket")}flags;position};lp([nu(lk),ou("design:type",Number)],_i.prototype,"flags",void 0);lp([nu(l),ou("design:type",typeof l>"u"?Object:l)],_i.prototype,"position",void 0);_i=lp([mk(p.UpdateClientInputLocks)],_i);import{Proto as hk,Serialize as gk}from"@serenityjs/raknet";import{Endianness as yk,Uint32 as wk}from"@serenityjs/binarystream";function au(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(au,"_ts_decorate");function uk(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(uk,"_ts_metadata");var Qo=class extends f{static{s(this,"OnScreenTextureAnimationPacket")}effectId};au([gk(wk,yk.Little),uk("design:type",typeof EffectType>"u"?Object:EffectType)],Qo.prototype,"effectId",void 0);Qo=au([hk(p.OnScreenTextureAnimation)],Qo);import{Proto as bk,Serialize as te}from"@serenityjs/raknet";import{Endianness as ee,Float32 as re}from"@serenityjs/binarystream";function Nt(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Nt,"_ts_decorate");function vt(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(vt,"_ts_metadata");var at=class extends f{static{s(this,"ServerboundDiagnosticsPacket")}fps;serverSimTickTime;clientSimTickTime;beginFrameTime;inputTime;renderTime;endFrameTime;remainderTimePercent;unaccountedTimePercent};Nt([te(re,ee.Little),vt("design:type",Number)],at.prototype,"fps",void 0);Nt([te(re,ee.Little),vt("design:type",Number)],at.prototype,"serverSimTickTime",void 0);Nt([te(re,ee.Little),vt("design:type",Number)],at.prototype,"clientSimTickTime",void 0);Nt([te(re,ee.Little),vt("design:type",Number)],at.prototype,"beginFrameTime",void 0);Nt([te(re,ee.Little),vt("design:type",Number)],at.prototype,"inputTime",void 0);Nt([te(re,ee.Little),vt("design:type",Number)],at.prototype,"renderTime",void 0);Nt([te(re,ee.Little),vt("design:type",Number)],at.prototype,"endFrameTime",void 0);Nt([te(re,ee.Little),vt("design:type",Number)],at.prototype,"remainderTimePercent",void 0);Nt([te(re,ee.Little),vt("design:type",Number)],at.prototype,"unaccountedTimePercent",void 0);at=Nt([bk(p.ServerboundDiagnosticPacket)],at);import{Proto as Pk,Serialize as ls}from"@serenityjs/raknet";import{Endianness as su,Float32 as cu,VarString as Rk}from"@serenityjs/binarystream";function Xo(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Xo,"_ts_decorate");function ds(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(ds,"_ts_metadata");var Ze=class extends f{static{s(this,"PlaySoundPacket")}name;position;volume;pitch};Xo([ls(Rk),ds("design:type",String)],Ze.prototype,"name",void 0);Xo([ls(R),ds("design:type",typeof R>"u"?Object:R)],Ze.prototype,"position",void 0);Xo([ls(cu,su.Little),ds("design:type",Number)],Ze.prototype,"volume",void 0);Xo([ls(cu,su.Little),ds("design:type",Number)],Ze.prototype,"pitch",void 0);Ze=Xo([Pk(p.PlaySound)],Ze);import{Proto as Ik,Serialize as kk}from"@serenityjs/raknet";function pu(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(pu,"_ts_decorate");function xk(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(xk,"_ts_metadata");var $o=class extends f{static{s(this,"SetActorLinkPacket")}link};pu([kk($n),xk("design:type",typeof $n>"u"?Object:$n)],$o.prototype,"link",void 0);$o=pu([Ik(p.SetActorLink)],$o);import{Proto as Sk,Serialize as up}from"@serenityjs/raknet";import{Bool as fu,VarString as Ok}from"@serenityjs/binarystream";function ms(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(ms,"_ts_decorate");function mp(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(mp,"_ts_metadata");var xr=class extends f{static{s(this,"StopSoundPacket")}soundName;stopAllSounds;stopMusic};ms([up(Ok),mp("design:type",String)],xr.prototype,"soundName",void 0);ms([up(fu),mp("design:type",Boolean)],xr.prototype,"stopAllSounds",void 0);ms([up(fu),mp("design:type",Boolean)],xr.prototype,"stopMusic",void 0);xr=ms([Sk(p.StopSound)],xr);import{Proto as Bk,Serialize as ze}from"@serenityjs/raknet";import{Endianness as us,Float32 as hp,Uint16 as Ck,VarLong as Vk}from"@serenityjs/binarystream";function ie(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(ie,"_ts_decorate");function Te(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Te,"_ts_metadata");var wt=class extends f{static{s(this,"MoveActorDeltaPacket")}runtimeId;flags;x;y;z;pitch;yaw;headYaw};ie([ze(Vk),Te("design:type",typeof BigInt>"u"?Object:BigInt)],wt.prototype,"runtimeId",void 0);ie([ze(Ck,us.Little),Te("design:type",Number)],wt.prototype,"flags",void 0);ie([ze(hp,us.Little),Te("design:type",Number)],wt.prototype,"x",void 0);ie([ze(hp,us.Little),Te("design:type",Number)],wt.prototype,"y",void 0);ie([ze(hp,us.Little),Te("design:type",Number)],wt.prototype,"z",void 0);ie([ze(Ln),Te("design:type",Number)],wt.prototype,"pitch",void 0);ie([ze(Ln),Te("design:type",Number)],wt.prototype,"yaw",void 0);ie([ze(Ln),Te("design:type",Number)],wt.prototype,"headYaw",void 0);wt=ie([Bk(p.MoveActorDelta)],wt);import{Proto as jk,Serialize as Uk}from"@serenityjs/raknet";function du(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(du,"_ts_decorate");function _k(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(_k,"_ts_metadata");var Lo=class extends f{static{s(this,"PlayerFogPacket")}fogs};du([Uk(En),_k("design:type",typeof En>"u"?Object:En)],Lo.prototype,"fogs",void 0);Lo=du([jk(p.PlayerFog)],Lo);import{VarString as Dk}from"@serenityjs/binarystream";import{Proto as Mk,Serialize as Zk}from"@serenityjs/raknet";function lu(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(lu,"_ts_decorate");function Nk(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Nk,"_ts_metadata");var Eo=class extends f{static{s(this,"CurrectStructureFeaturePacket")}featureId};lu([Zk(Dk),Nk("design:type",String)],Eo.prototype,"featureId",void 0);Eo=lu([Mk(p.CurrentStructureFeature)],Eo);import{Proto as zk,Serialize as Fk}from"@serenityjs/raknet";function mu(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(mu,"_ts_decorate");function Tk(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Tk,"_ts_metadata");var vo=class extends f{static{s(this,"GameRulesChangedPacket")}rules};mu([Fk(Or),Tk("design:type",typeof Or>"u"?Object:Or)],vo.prototype,"rules",void 0);vo=mu([zk(p.GameRulesChanged)],vo);import{Proto as Wk}from"@serenityjs/raknet";function Hk(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Hk,"_ts_decorate");var hs=class extends f{static{s(this,"LegacyTelemetryEventPacket")}unique_id;type;use_player_id;event_data;serialize(){switch(this.writeVarInt(p.LegacyTelemetryEvent),this.writeVarLong(this.unique_id),this.writeVarInt(this.type),this.writeByte(this.use_player_id),this.type){case P.AchievementAwarded:{this.writeVarInt(this.event_data.achievementId);break}case P.EntityInteract:{let e=this.event_data;this.writeVarLong(e.interactedEntityId),this.writeVarInt(e.interactionType),this.writeVarInt(e.interactionActorType),this.writeVarInt(e.interactionActorVariant),this.writeUint8(e.interactionActorColor);break}case P.PortalBuilt:{this.writeVarInt(this.event_data.dimensionId);break}case P.PortalUsed:{let e=this.event_data;this.writeVarInt(e.fromDimensionId),this.writeVarInt(e.toDimensionId);break}case P.MobKilled:{let e=this.event_data;this.writeVarLong(e.instigatorActorId),this.writeVarLong(e.targetActorId),this.writeVarInt(e.instigatorChildActorType),this.writeVarInt(e.damageSource),this.writeVarInt(e.tradeTier),this.writeVarString(e.traderName);break}case P.CauldronUsed:{let e=this.event_data;this.writeVarInt(e.contentsColor),this.writeVarInt(e.contentsType),this.writeVarInt(e.fillLevel);break}case P.PlayerDeath:{let e=this.event_data;this.writeVarLong(e.instigatorActorId),this.writeVarInt(e.instigatorMobVariant),this.writeVarInt(e.damageSource),this.writeBool(e.diedInRaid);break}case P.BossKilled:{let e=this.event_data;this.writeVarLong(e.bossActorId),this.writeVarInt(e.partySize),this.writeVarInt(e.bossType);break}case P.AgentCommand:{let e=this.event_data;this.writeVarInt(e.result),this.writeVarInt(e.resultNumber),this.writeVarString(e.commandName),this.writeVarString(e.resultKey),this.writeVarString(e.resultString);break}case P.CommandExecuted:{let e=this.event_data;this.writeVarInt(e.successCount),this.writeVarInt(e.errorCount),this.writeVarString(e.commandName),this.writeVarString(e.errorList);break}case P.MobBorn:{let e=this.event_data;this.writeVarInt(e.entityType),this.writeVarInt(e.entityVariant),this.writeUint8(e.color);break}case P.PetDied:{let e=this.event_data;this.writeVarInt(e.killedPetEntityType),this.writeVarInt(e.killedPetVariant),this.writeVarInt(e.killerEntityType),this.writeVarInt(e.killerVariant),this.writeVarInt(e.damageSource);break}case P.CauldronBlockUsed:case P.ComposterBlockUsed:{let e=this.event_data;this.writeVarInt(e.blockInteractionType),this.writeVarInt(e.itemId);break}case P.BellBlockUsed:{this.writeVarInt(this.event_data.itemId);break}case P.ActorDefinition:{this.writeVarString(this.event_data.eventName);break}case P.RaidUpdate:{let e=this.event_data;this.writeVarInt(e.currentRaidWave),this.writeVarInt(e.totalRaidWaves),this.writeBool(e.wonRaid);break}case P.TargetBlockHit:{this.writeVarInt(this.event_data.redstoneLevel);break}case P.PiglinBarter:{let e=this.event_data;this.writeVarInt(e.itemId),this.writeBool(e.wasTargetingBarteringPlayer);break}case P.WaxedOrUnwaxedCopper:{this.writeVarInt(this.event_data.playerWaxedOrUnwaxedCopperBlockId);break}case P.CodeBuilderRuntimeAction:{this.writeVarString(this.event_data.codeBuilderRuntimeAction);break}case P.CodeBuilderScoreboard:{let e=this.event_data;this.writeVarString(e.objectiveName),this.writeVarInt(e.codeBuilderScoreboardScore);break}case P.ItemUsed:{let e=this.event_data;this.writeShort(e.itemId),this.writeVarInt(e.itemAux),this.writeVarInt(e.useMethod),this.writeVarInt(e.useCount);break}case P.AgentCreated:case P.BannerPatternRemoved:case P.FishBucketed:case P.PlayerMovementAnomaly:case P.PlayerMovementCorrected:case P.HoneyHarvested:case P.StriderRiddenInLavaInOverworld:case P.SneakCloseToSculkSensor:case P.CarefulRestoration:break;default:break}return this.getBuffer()}deserialize(){switch(this.readVarInt(),this.unique_id=this.readVarLong(),this.type=this.readVarInt(),this.use_player_id=this.readByte(),console.log(this.getBuffer()),this.type){case P.AchievementAwarded:this.event_data={achievementId:this.readVarInt()};break;case P.EntityInteract:this.event_data={interactedEntityId:this.readVarLong(),interactionType:this.readVarInt(),interactionActorType:this.readVarInt(),interactionActorVariant:this.readVarInt(),interactionActorColor:this.readUint8()};break;case P.PortalBuilt:this.event_data={dimensionId:this.readVarInt()};break;case P.PortalUsed:this.event_data={fromDimensionId:this.readVarInt(),toDimensionId:this.readVarInt()};break;case P.MobKilled:this.event_data={instigatorActorId:this.readVarLong(),targetActorId:this.readVarLong(),instigatorChildActorType:this.readVarInt(),damageSource:this.readVarInt(),tradeTier:this.readVarInt(),traderName:this.readVarString()};break;case P.CauldronUsed:this.event_data={contentsColor:this.readVarInt(),contentsType:this.readVarInt(),fillLevel:this.readVarInt()};break;case P.PlayerDeath:this.event_data={instigatorActorId:this.readVarLong(),instigatorMobVariant:this.readVarInt(),damageSource:this.readVarInt(),diedInRaid:this.readBool()};break;case P.BossKilled:this.event_data={bossActorId:this.readVarLong(),partySize:this.readVarInt(),bossType:this.readVarInt()};break;case P.AgentCommand:this.event_data={result:this.readVarInt(),resultNumber:this.readVarInt(),commandName:this.readVarString(),resultKey:this.readVarString(),resultString:this.readVarString()};break;case P.AgentCreated:this.event_data={};break;case P.BannerPatternRemoved:this.event_data={};break;case P.CommandExecuted:this.event_data={successCount:this.readVarInt(),errorCount:this.readVarInt(),commandName:this.readVarString(),errorList:this.readVarString()};break;case P.FishBucketed:this.event_data={};break;case P.MobBorn:this.event_data={entityType:this.readVarInt(),entityVariant:this.readVarInt(),color:this.readUint8()};break;case P.PetDied:this.event_data={killedPetEntityType:this.readVarInt(),killedPetVariant:this.readVarInt(),killerEntityType:this.readVarInt(),killerVariant:this.readVarInt(),damageSource:this.readVarInt()};break;case P.CauldronBlockUsed:this.event_data={blockInteractionType:this.readVarInt(),itemId:this.readVarInt()};break;case P.ComposterBlockUsed:this.event_data={blockInteractionType:this.readVarInt(),itemId:this.readVarInt()};break;case P.BellBlockUsed:this.event_data={itemId:this.readVarInt()};break;case P.ActorDefinition:this.event_data={eventName:this.readVarString()};break;case P.RaidUpdate:this.event_data={currentRaidWave:this.readVarInt(),totalRaidWaves:this.readVarInt(),wonRaid:this.readBool()};break;case P.PlayerMovementAnomaly:this.event_data={};break;case P.PlayerMovementCorrected:this.event_data={};break;case P.HoneyHarvested:this.event_data={};break;case P.TargetBlockHit:this.event_data={redstoneLevel:this.readVarInt()};break;case P.PiglinBarter:this.event_data={itemId:this.readVarInt(),wasTargetingBarteringPlayer:this.readBool()};break;case P.WaxedOrUnwaxedCopper:this.event_data={playerWaxedOrUnwaxedCopperBlockId:this.readVarInt()};break;case P.CodeBuilderRuntimeAction:this.event_data={codeBuilderRuntimeAction:this.readVarString()};break;case P.CodeBuilderScoreboard:this.event_data={objectiveName:this.readVarString(),codeBuilderScoreboardScore:this.readVarInt()};break;case P.StriderRiddenInLavaInOverworld:this.event_data={};break;case P.SneakCloseToSculkSensor:this.event_data={};break;case P.CarefulRestoration:this.event_data={};break;case P.ItemUsed:this.event_data={itemId:this.readShort(),itemAux:this.readVarInt(),useMethod:this.readVarInt(),useCount:this.readVarInt()};break;default:this.event_data=void 0}return this}};hs=Hk([Wk(p.LegacyTelemetryEvent)],hs);import{VarInt as qk}from"@serenityjs/binarystream";import{Proto as Ak,Serialize as hu}from"@serenityjs/raknet";function gp(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(gp,"_ts_decorate");function uu(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(uu,"_ts_metadata");var ji=class extends f{static{s(this,"LevelEventGenericPacket")}eventId;nbtData};gp([hu(qk),uu("design:type",Number)],ji.prototype,"eventId",void 0);gp([hu(vn),uu("design:type",typeof vn>"u"?Object:vn)],ji.prototype,"nbtData",void 0);ji=gp([Ak(p.LevelEventGeneric)],ji);import{VarInt as Kk}from"@serenityjs/binarystream";import{Proto as Yk,Serialize as Jk}from"@serenityjs/raknet";function gu(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(gu,"_ts_decorate");function Gk(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Gk,"_ts_metadata");var tn=class extends f{static{s(this,"SetDifficultyPacket")}difficulty};gu([Jk(Kk),Gk("design:type",typeof an>"u"?Object:an)],tn.prototype,"difficulty",void 0);tn=gu([Yk(p.SetDifficulty)],tn);import{Proto as Qk,Serialize as ys}from"@serenityjs/raknet";import{ZigZag as yu}from"@serenityjs/binarystream";function en(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(en,"_ts_decorate");function gs(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(gs,"_ts_metadata");var Fe=class extends f{static{s(this,"SetSpawnPositionPacket")}spawnType;playerPosition;dimension;worldPosition};en([ys(yu),gs("design:type",typeof gn>"u"?Object:gn)],Fe.prototype,"spawnType",void 0);en([ys(R),gs("design:type",typeof R>"u"?Object:R)],Fe.prototype,"playerPosition",void 0);en([ys(yu),gs("design:type",Number)],Fe.prototype,"dimension",void 0);en([ys(R),gs("design:type",typeof R>"u"?Object:R)],Fe.prototype,"worldPosition",void 0);Fe=en([Qk(p.SetSpawnPosition)],Fe);import{ZigZag as $k}from"@serenityjs/binarystream";import{Proto as Lk,Serialize as Ek}from"@serenityjs/raknet";function wu(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(wu,"_ts_decorate");function Xk(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Xk,"_ts_metadata");var rn=class extends f{static{s(this,"SetHealthPacket")}health};wu([Ek($k),Xk("design:type",Number)],rn.prototype,"health",void 0);rn=wu([Lk(p.SetHealth)],rn);import{CompoundTag as yp}from"@serenityjs/nbt";import{Proto as t0,Serialize as e0}from"@serenityjs/raknet";function bu(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(bu,"_ts_decorate");function vk(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(vk,"_ts_metadata");var on=class extends f{static{s(this,"SyncActorPropertyPacket")}properties};bu([e0(yp,!0),vk("design:type",typeof yp>"u"?Object:yp)],on.prototype,"properties",void 0);on=bu([t0(p.SyncActorProperty)],on);import{Proto as r0,Serialize as Ru}from"@serenityjs/raknet";function wp(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(wp,"_ts_decorate");function Pu(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(Pu,"_ts_metadata");var Ui=class extends f{static{s(this,"TrimDataPacket")}patterns;materials};wp([Ru(ta),Pu("design:type",typeof ta>"u"?Object:ta)],Ui.prototype,"patterns",void 0);wp([Ru(ea),Pu("design:type",typeof ea>"u"?Object:ea)],Ui.prototype,"materials",void 0);Ui=wp([r0(p.TrimData)],Ui);import{Proto as o0,Serialize as n0}from"@serenityjs/raknet";function xu(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(xu,"_ts_decorate");function i0(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(i0,"_ts_metadata");var nn=class extends f{static{s(this,"UnlockedRecipesPacket")}recipes};xu([n0(ra),i0("design:type",typeof ra>"u"?Object:ra)],nn.prototype,"recipes",void 0);nn=xu([o0(p.UnlockedRecipes)],nn);import{Proto as a0,Serialize as Pp}from"@serenityjs/raknet";import{Endianness as Iu,Int64 as s0,Uint16 as c0,ZigZag as p0}from"@serenityjs/binarystream";function ws(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(ws,"_ts_decorate");function bp(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(bp,"_ts_metadata");var Ir=class extends f{static{s(this,"RequestPermissionsPacket")}actorUniqueId;permissionLevel;flags;getFlag(e){return(this.flags&e)===e}setFlag(e,r){r?this.flags|=e:this.flags&=~e}};ws([Pp(s0,Iu.Little),bp("design:type",typeof BigInt>"u"?Object:BigInt)],Ir.prototype,"actorUniqueId",void 0);ws([Pp(p0),bp("design:type",typeof sn>"u"?Object:sn)],Ir.prototype,"permissionLevel",void 0);ws([Pp(c0,Iu.Little),bp("design:type",Number)],Ir.prototype,"flags",void 0);Ir=ws([a0(p.RequestPermissions)],Ir);import{Proto as f0,Serialize as Su}from"@serenityjs/raknet";import{VarInt as d0,VarString as l0}from"@serenityjs/binarystream";function Rp(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Rp,"_ts_decorate");function ku(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(ku,"_ts_metadata");var Ni=class extends f{static{s(this,"ServerSettingsResponsePacket")}formId;payload};Rp([Su(d0),ku("design:type",Number)],Ni.prototype,"formId",void 0);Rp([Su(l0),ku("design:type",String)],Ni.prototype,"payload",void 0);Ni=Rp([f0(p.ServerSettingsResponse)],Ni);import{Proto as m0,Serialize as ne}from"@serenityjs/raknet";import{Bool as xp,Endianness as u0,Uint32 as h0,VarString as Ip}from"@serenityjs/binarystream";function Dt(t,e,r,o){var n=arguments.length,i=n<3?e:o===null?o=Object.getOwnPropertyDescriptor(e,r):o,a;if(typeof Reflect=="object"&&typeof Reflect.decorate=="function")i=Reflect.decorate(t,e,r,o);else for(var c=t.length-1;c>=0;c--)(a=t[c])&&(i=(n<3?a(i):n>3?a(e,r,i):a(e,r))||i);return n>3&&i&&Object.defineProperty(e,r,i),i}s(Dt,"_ts_decorate");function oe(t,e){if(typeof Reflect=="object"&&typeof Reflect.metadata=="function")return Reflect.metadata(t,e)}s(oe,"_ts_metadata");var st=class extends f{static{s(this,"CommandBlockUpdatePacket")}isBlock;actorRuntimeId;settings;command;lastOutput;customName;trackOutput;tickDelay;executeFirstTick};Dt([ne(xp),oe("design:type",Boolean)],st.prototype,"isBlock",void 0);Dt([ne(ll,0,"isBlock"),oe("design:type",Object)],st.prototype,"actorRuntimeId",void 0);Dt([ne(ml,0,"isBlock"),oe("design:type",Object)],st.prototype,"settings",void 0);Dt([ne(Ip),oe("design:type",String)],st.prototype,"command",void 0);Dt([ne(Ip),oe("design:type",String)],st.prototype,"lastOutput",void 0);Dt([ne(Ip),oe("design:type",String)],st.prototype,"customName",void 0);Dt([ne(xp),oe("design:type",Boolean)],st.prototype,"trackOutput",void 0);Dt([ne(h0,u0.Little),oe("design:type",Number)],st.prototype,"tickDelay",void 0);Dt([ne(xp),oe("design:type",Boolean)],st.prototype,"executeFirstTick",void 0);st=Dt([m0(p.CommandBlockUpdate)],st);var ytt={[p.Login]:Kr,[p.PlayStatus]:ao,[p.ServerToClientHandshake]:jo,[p.ClientToServerHandshake]:ss,[p.Disconnect]:Le,[p.ResourcePacksInfo]:Ie,[p.ResourcePackStack]:xt,[p.ResourcePackClientResponse]:vr,[p.Text]:yt,[p.SetTime]:Io,[p.StartGame]:m,[p.AddPlayer]:j,[p.AddEntity]:q,[p.RemoveEntity]:po,[p.AddItemActor]:Pt,[p.TakeItemActor]:pi,[p.MoveActorAbsolute]:Pe,[p.MovePlayer]:tt,[p.RiderJump]:Jo,[p.UpdateBlock]:_e,[p.LevelEvent]:ve,[p.BlockEvent]:br,[p.ActorEvent]:fr,[p.MobEffect]:Ot,[p.UpdateAttributes]:sr,[p.InventoryTransaction]:qr,[p.MobEquipment]:Ht,[p.MobArmorEquipment]:Ut,[p.Interact]:Ee,[p.BlockPickRequest]:zt,[p.EntityPickRequest]:Pr,[p.PlayerAction]:At,[p.HurtArmor]:Rr,[p.SetActorData]:ke,[p.SetActorMotion]:ar,[p.SetActorLink]:$o,[p.SetHealth]:rn,[p.SetSpawnPosition]:Fe,[p.Animate]:Xe,[p.Respawn]:nr,[p.ContainerOpen]:we,[p.ContainerClose]:$e,[p.PlayerHotbar]:rr,[p.InventoryContent]:be,[p.InventorySlot]:Ft,[p.ContainerSetData]:yr,[p.CraftingData]:Lt,[p.BlockActorData]:yi,[p.LevelChunk]:ba,[p.SetCommandsEnabled]:mo,[p.SetDifficulty]:tn,[p.ChangeDimension]:ge,[p.SetPlayerGameType]:go,[p.PlayerList]:Lr,[p.LegacyTelemetryEvent]:hs,[p.RequestChunkRadius]:Er,[p.ChunkRadiusUpdate]:Wi,[p.GameRulesChanged]:vo,[p.ShowCredits]:Vi,[p.BossEvent]:je,[p.AvailableCommands]:ht,[p.CommandRequest]:ye,[p.CommandBlockUpdate]:st,[p.CommandOutput]:qi,[p.ResourcePackDataInfo]:Ca,[p.ResourcePackChunkData]:_a,[p.ResourcePackChunkRequest]:ei,[p.Transfer]:cr,[p.PlaySound]:Ze,[p.StopSound]:xr,[p.SetTitle]:gt,[p.StructureBlockUpdate]:Me,[p.PlayerSkin]:Qt,[p.BookEdit]:gr,[p.NpcRequest]:$t,[p.ModalFormRequest]:Jr,[p.ModalFormResponse]:Wt,[p.ServerSettingsResponse]:Ni,[p.RemoveObjective]:ko,[p.SetDisplayObjective]:Jt,[p.SetScore]:ai,[p.MoveActorDelta]:wt,[p.SetScoreboardIdentity]:si,[p.SetLocalPlayerAsInitialized]:ho,[p.NetworkStackLatency]:fi,[p.SpawnParticleEffect]:Et,[p.AvailableActorIdentifiers]:Ao,[p.NetworkChunkPublisherUpdate]:er,[p.BiomeDefinitionList]:aa,[p.LevelSoundEvent]:Bt,[p.LevelEventGeneric]:ji,[p.OnScreenTextureAnimation]:Qo,[p.Emote]:jt,[p.CompletedUsingItem]:Pi,[p.NetworkSettings]:qt,[p.PlayerAuthInput]:Z,[p.CreativeContent]:Ki,[p.PlayerEnchantOptions]:Yo,[p.ItemStackRequest]:$i,[p.ItemStackResponse]:Li,[p.EmoteList]:mi,[p.PacketViolationWarning]:Re,[p.AnimateEntity]:St,[p.CameraShake]:De,[p.PlayerFog]:Lo,[p.ItemComponent]:Xi,[p.SyncActorProperty]:on,[p.NpcDialogue]:_t,[p.PlayerStartItemCooldown]:ki,[p.ScriptMessage]:ri,[p.DimensionData]:Ko,[p.RequestPermissions]:Ir,[p.ToastRequest]:ii,[p.UpdateAbilities]:Ve,[p.UpdateAdventureSettings]:Yt,[p.DeathInfo]:wi,[p.RequestNetworkSettings]:fo,[p.UpdateClientInputLocks]:_i,[p.CameraPresetsPacket]:To,[p.UnlockedRecipes]:nn,[p.CameraInstructions]:zo,[p.TrimData]:Ui,[p.OpenSign]:xi,[p.SetPlayerInventoryOptions]:Xt,[p.SetHud]:ci,[p.AwardAchievement]:_o,[p.ClientboundCloseForm]:ts,[p.ServerboundLoadingScreenPacket]:Ii,[p.CurrentStructureFeature]:Eo,[p.ServerboundDiagnosticPacket]:at};var Yrt=class extends f{static{s(this,"DebugEventPacket")}data;serialize(){let e={type:"event",event:this.data},r=Buffer.from(JSON.stringify(e)),o=(r.length+1).toString(16).padStart(8,"0")+`
`;return this.writeBuffer(Buffer.from(o)),this.writeBuffer(r),this.writeBuffer(Buffer.from(`
`)),this.getBuffer()}deserialize(){let e=this.readBuffer(8).toString("utf8"),r=this.readBuffer(Number.parseInt(e,16));return this.data=JSON.parse(r.toString()),this}};import{BinaryStream as Ou}from"@serenityjs/binarystream";var vrt=class{static{s(this,"Framer")}static unframe(e){let r=new Ou(e),o=[];do{let n=r.readVarInt(),i=r.readBuffer(n);o.push(i)}while(!r.cursorAtEnd());return o}static frame(...e){let r=new Ou;for(let o of e)r.writeVarInt(o.length),r.writeBuffer(o);return r.getBuffer()}};import{BinaryStream as g0}from"@serenityjs/binarystream";function oit(t){return g0.fromBuffer(t).readVarInt()}s(oit,"getPacketId");var mit=function(t){return t[t.EMPTY=0]="EMPTY",t[t.INITIALLY_UNLOCKED=1]="INITIALLY_UNLOCKED",t[t.NEWLY_UNLOCKED=2]="NEWLY_UNLOCKED",t[t.REMOVED=3]="REMOVED",t[t.REMOVED_ALL=4]="REMOVED_ALL",t}({});export{V as AbilityIndex,Vn as AbilityLayer,Fu as AbilityLayerType,Ss as AbilitySet,th as AbilitySetId,Sh as ActorDamageCause,A4 as ActorData,Rs as ActorDataId,N as ActorDataType,gh as ActorEventIds,fr as ActorEventPacket,kh as ActorFlag,$n as ActorLink,zh as ActorLinkType,q as AddEntityPacket,Pt as AddItemActorPacket,j as AddPlayerPacket,Uf as AnimateAction,qn as AnimateEntity,St as AnimateEntityPacket,fn as AnimateId,Xe as AnimatePacket,of as Attribute,Os as AttributeModifier,Gu as AttributeName,Ao as AvailableActorIdentifiersPacket,ht as AvailableCommandsPacket,_o as AwardAchievementPacket,nB as BehaviorPackInfo,aa as BiomeDefinitionListPacket,lM as BlockAction,yi as BlockActorDataPacket,br as BlockEventPacket,Zh as BlockEventType,sh as BlockFace,zt as BlockPickRequestPacket,R as BlockPosition,zp as BlockProperty,Gn as BookActions,ft as BookEditAction,gr as BookEditPacket,Fn as BossEventAdd,uh as BossEventColor,je as BossEventPacket,Wn as BossEventUpdate,U as BossEventUpdateType,jh as CameraAudioListener,hd as CameraFadeDuration,gd as CameraFadeInstruction,Yn as CameraInstructions,zo as CameraInstructionsPacket,dd as CameraPreset,To as CameraPresetsPacket,md as CameraSetEasing,ud as CameraSetInstruction,De as CameraShakePacket,Yf as ChainedSubcommandValues,ge as ChangeDimensionPacket,af as ChunkCoords,Wi as ChunkRadiusUpdatePacket,Ed as ClientPredictedVehicle,ss as ClientToServerHandshakePacket,ts as ClientboundCloseFormPacket,$2 as Color,ll as CommandBlockActorRuntimeId,Ah as CommandBlockMode,ml as CommandBlockSettings,st as CommandBlockUpdatePacket,Ae as CommandOriginData,Dn as CommandOutputData,js as CommandOutputMessage,qi as CommandOutputPacket,zu as CommandParameterType,Tu as CommandPermissionLevel,ye as CommandRequestPacket,Of as Commands,Pi as CompletedUsingItemPacket,pt as ComplexInventoryTransaction,zf as ComponentItem,ju as CompressionMethod,$e as ContainerClosePacket,Nh as ContainerDataType,Wu as ContainerId,Rd as ContainerMixDataEntry,qu as ContainerName,we as ContainerOpenPacket,yr as ContainerSetDataPacket,Au as ContainerType,bd as CraftingDataEntry,D as CraftingDataEntryType,Lt as CraftingDataPacket,Ki as CreativeContentPacket,Zf as CreativeItems,Eo as CurrectStructureFeaturePacket,Mt as DataItem,f as DataPacket,wi as DeathInfoPacket,rd as DeathParameters,Yrt as DebugEventPacket,Fh as DebuggerProtocolVersion,XC as DefaultAbilityValues,Yu as DeviceOS,an as Difficulty,Ko as DimensionDataPacket,Ys as DimensionDefinition,Qn as DimensionDefinitionGroup,Lu as DimensionType,Xn as DisconnectMessage,Le as DisconnectPacket,_u as DisconnectReason,ph as DisplaySlotType,Cf as DynamicEnums,Uh as EasingType,bh as EffectType,yh as EmoteFlags,mi as EmoteListPacket,jt as EmotePacket,td as Emotes,Yd as EnchantOption,mh as Enchantment,ff as EntityAttributes,Pr as EntityPickRequestPacket,_f as EnumConstraints,Kf as EnumValues,xf as Enums,wh as EquipmentSlot,xn as Experiments,En as Fogs,vrt as Framer,bt as FullContainerName,As as FurnanceRecipe,fe as GameRuleType,Or as GameRules,vo as GameRulesChangedPacket,Du as Gamemode,Dh as GeneratorType,dh as HudElement,Ef as HudElementData,lh as HudVisibility,Rr as HurtArmorPacket,dt as InputData,Th as InputLockFlags,un as InputMode,eM as InputTransaction,kr as InteractAction,Ee as InteractPacket,rf as InteractPosition,hn as InteractionMode,X as InternalType,Dr as InventoryAction,be as InventoryContentPacket,Rh as InventoryLayout,xh as InventoryLeftTab,Ih as InventoryRightTab,Ft as InventorySlotPacket,Ms as InventorySource,We as InventorySourceType,Zn as InventoryTransaction,qr as InventoryTransactionPacket,Xi as ItemComponentPacket,Wp as ItemData,Ur as ItemInstanceUserData,Ts as ItemReleaseInventoryTransaction,ah as ItemReleaseInventoryTransactionType,Bd as ItemStackActionTakePlace,Wd as ItemStackRequest,Tr as ItemStackRequestAction,Ud as ItemStackRequestActionBeanconPayment,Zd as ItemStackRequestActionCraftCreative,YD as ItemStackRequestActionCraftGrindstoneRequest,LD as ItemStackRequestActionCraftLoomRequest,Dd as ItemStackRequestActionCraftRecipe,Md as ItemStackRequestActionCraftRecipeAuto,jd as ItemStackRequestActionCreate,_d as ItemStackRequestActionDestroyConsume,Vd as ItemStackRequestActionDrop,Nd as ItemStackRequestActionMineBlock,zd as ItemStackRequestActionOptional,Fd as ItemStackRequestActionResultsDeprecated,Cd as ItemStackRequestActionSwap,W as ItemStackRequestActionType,$i as ItemStackRequestPacket,G as ItemStackRequestSlotInfo,Li as ItemStackResponsePacket,hf as ItemStackResponses,vu as ItemStackStatus,wf as ItemStacks,Mr as ItemUseInventoryTransaction,oh as ItemUseInventoryTransactionType,Oh as ItemUseMethod,Zs as ItemUseOnEntityInventoryTransaction,nh as ItemUseOnEntityInventoryTransactionType,hs as LegacyTelemetryEventPacket,Ge as LegacyTransaction,ba as LevelChunkPacket,eh as LevelEvent,ji as LevelEventGenericPacket,ve as LevelEventPacket,rh as LevelSoundEvent,Bt as LevelSoundEventPacket,_n as Links,Kr as LoginPacket,bn as LoginTokens,vC as MINECRAFT_TICK_SPEED,EC as MINECRAFT_VERSION,xd as MaterialReducerDataEntry,ea as Materials,Wh as MemoryTier,Ut as MobArmorEquipmentPacket,Ph as MobEffectEvents,Ot as MobEffectPacket,Ht as MobEquipmentPacket,pf as ModalFormCanceled,Eu as ModalFormCanceledReason,cf as ModalFormData,Jr as ModalFormRequestPacket,Wt as ModalFormResponsePacket,Qu as ModalFormType,Pe as MoveActorAbsolutePacket,wt as MoveActorDeltaPacket,Hh as MoveDeltaFlags,cn as MoveMode,tt as MovePlayerPacket,vn as NbtLoop,er as NetworkChunkPublisherUpdatePacket,_ as NetworkItemInstanceDescriptor,x as NetworkItemStackDescriptor,qt as NetworkSettingsPacket,fi as NetworkStackLatencyPacket,hh as NpcDialogueAction,_t as NpcDialoguePacket,$t as NpcRequestPacket,Bh as NpcRequestType,ch as ObjectiveSortOrder,Qo as OnScreenTextureAnimationPacket,xi as OpenSignPacket,k as Optional,LC as PROTOCOL_VERSION,uB as PackLinks,ih as PackType,p as Packet,Re as PacketViolationWarningPacket,ytt as Packets,ta as Patterns,qh as PermissionFlag,sn as PermissionLevel,mn as PlayMode,Ze as PlaySoundPacket,Uu as PlayStatus,ao as PlayStatusPacket,At as PlayerActionPacket,He as PlayerActionType,Fr as PlayerAuthInputData,Z as PlayerAuthInputPacket,dl as PlayerAuthItemStackRequest,Xs as PlayerBlockActionData,rl as PlayerBlockActions,Yo as PlayerEnchantOptionsPacket,Lo as PlayerFogPacket,rr as PlayerHotbarPacket,ut as PlayerInputTick,pn as PlayerListAction,Lr as PlayerListPacket,Lp as PlayerListRecord,Qt as PlayerSkinPacket,ki as PlayerStartItemCooldownPacket,Jf as PostFixes,Pd as PotionMixDataEntry,mt as PropertySyncData,C as RecipeIngredient,Zt as RecipeUnlockingRequirement,po as RemoveEntityPacket,ko as RemoveObjectivePacket,Er as RequestChunkRadiusPacket,fo as RequestNetworkSettingsPacket,Ir as RequestPermissionsPacket,xs as ResourceIdVersions,_a as ResourcePackChunkDataPacket,ei as ResourcePackChunkRequestPacket,vr as ResourcePackClientResponsePacket,Ca as ResourcePackDataInfoPacket,Vp as ResourcePackIds,Nu as ResourcePackResponse,xt as ResourcePackStackPacket,Ie as ResourcePacksInfoPacket,nr as RespawnPacket,Ju as RespawnState,Jo as RiderJumpPacket,Nr as Rotation,Ln as RotationByte,Vs as SHIELD_NETWORK_ID,Xf as ScoreEntry,ln as ScoreboardActionType,Tn as ScoreboardIdentity,fh as ScoreboardIdentityAction,de as ScoreboardIdentityType,ri as ScriptMessagePacket,qe as SerializedSkin,yn as ServerAuthMovementMode,Ni as ServerSettingsResponsePacket,jo as ServerToClientHandshakePacket,at as ServerboundDiagnosticsPacket,Ii as ServerboundLoadingScreenPacketPacket,Ch as ServerboundLoadingScreenType,ke as SetActorDataPacket,$o as SetActorLinkPacket,ar as SetActorMotionPacket,mo as SetCommandsEnabledPacket,tn as SetDifficultyPacket,Jt as SetDisplayObjectivePacket,rn as SetHealthPacket,ci as SetHudPacket,ho as SetLocalPlayerAsInitializedPacket,go as SetPlayerGameTypePacket,Xt as SetPlayerInventoryOptionsPacket,ai as SetScorePacket,si as SetScoreboardIdentityPacket,Fe as SetSpawnPositionPacket,Io as SetTimePacket,gt as SetTitlePacket,_h as ShakeAction,Vh as ShakeType,Zi as ShapedRecipe,Ke as ShapelessRecipe,Vi as ShowCreditsPacket,Qs as SignedBlockPosition,Sn as SkinAnimation,et as SkinImage,On as SkinPersonaPiece,Bn as SkinPersonaTintPiece,Et as SpawnParticleEffectPacket,gn as SpawnType,m as StartGamePacket,xr as StopSoundPacket,Me as StructureBlockUpdatePacket,Jn as StructureEditorData,Ks as StructureSettings,kf as Subcommands,on as SyncActorPropertyPacket,pi as TakeItemActorPacket,P as TelemetryEventType,Ap as TeleportCause,yt as TextPacket,J as TextPacketType,ef as TextParameters,tf as TextSource,Op as TexturePackInfo,Hu as TitleType,ii as ToastRequestPacket,Ku as TransactionSourceType,cr as TransferPacket,Mh as TriggerType,Ui as TrimDataPacket,ra as UnlockedRecipesEntry,nn as UnlockedRecipesPacket,mit as UnlockedRecipesType,dn as UnlockingContext,Ve as UpdateAbilitiesPacket,Yt as UpdateAdventureSettingsPacket,sr as UpdateAttributesPacket,$u as UpdateBlockFlagsType,Xu as UpdateBlockLayerType,_e as UpdateBlockPacket,_i as UpdateClientInputLocksPacket,VN as UserDataShapelessRecipe,bV as VarStringArray,M as Vector2f,l as Vector3f,Zu as ViolationSeverity,Mu as ViolationType,oit as getPacketId};
//# sourceMappingURL=data:application/json;base64,